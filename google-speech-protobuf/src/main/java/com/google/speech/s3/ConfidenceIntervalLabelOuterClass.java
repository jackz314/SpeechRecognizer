// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/service/s3/services/speakerid/frontend/confidence-interval-label.proto

package com.google.speech.s3;

public final class ConfidenceIntervalLabelOuterClass {
  private ConfidenceIntervalLabelOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code speech.s3.ConfidenceIntervalLabel}
   */
  public enum ConfidenceIntervalLabel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEFAULT_INTERVAL_GUEST = 0;</code>
     */
    DEFAULT_INTERVAL_GUEST(0),
    /**
     * <code>INTERVAL_UNLIKELY_USER = 1;</code>
     */
    INTERVAL_UNLIKELY_USER(1),
    /**
     * <code>INTERVAL_USER = 2;</code>
     */
    INTERVAL_USER(2),
    /**
     * <code>INTERVAL_TRUSTED_USER = 3;</code>
     */
    INTERVAL_TRUSTED_USER(3),
    ;

    /**
     * <code>DEFAULT_INTERVAL_GUEST = 0;</code>
     */
    public static final int DEFAULT_INTERVAL_GUEST_VALUE = 0;
    /**
     * <code>INTERVAL_UNLIKELY_USER = 1;</code>
     */
    public static final int INTERVAL_UNLIKELY_USER_VALUE = 1;
    /**
     * <code>INTERVAL_USER = 2;</code>
     */
    public static final int INTERVAL_USER_VALUE = 2;
    /**
     * <code>INTERVAL_TRUSTED_USER = 3;</code>
     */
    public static final int INTERVAL_TRUSTED_USER_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConfidenceIntervalLabel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ConfidenceIntervalLabel forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT_INTERVAL_GUEST;
        case 1: return INTERVAL_UNLIKELY_USER;
        case 2: return INTERVAL_USER;
        case 3: return INTERVAL_TRUSTED_USER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConfidenceIntervalLabel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConfidenceIntervalLabel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConfidenceIntervalLabel>() {
            public ConfidenceIntervalLabel findValueByNumber(int number) {
              return ConfidenceIntervalLabel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.speech.s3.ConfidenceIntervalLabelOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final ConfidenceIntervalLabel[] VALUES = values();

    public static ConfidenceIntervalLabel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ConfidenceIntervalLabel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:speech.s3.ConfidenceIntervalLabel)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nMspeech/service/s3/services/speakerid/f" +
      "rontend/confidence-interval-label.proto\022" +
      "\tspeech.s3*\177\n\027ConfidenceIntervalLabel\022\032\n" +
      "\026DEFAULT_INTERVAL_GUEST\020\000\022\032\n\026INTERVAL_UN" +
      "LIKELY_USER\020\001\022\021\n\rINTERVAL_USER\020\002\022\031\n\025INTE" +
      "RVAL_TRUSTED_USER\020\003B\030\n\024com.google.speech" +
      ".s3H\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
