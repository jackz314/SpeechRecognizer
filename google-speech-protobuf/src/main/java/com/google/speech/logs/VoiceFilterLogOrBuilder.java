// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logs/proto/speech/service/recognizer_log.proto

package com.google.speech.logs;

public interface VoiceFilterLogOrBuilder extends
    // @@protoc_insertion_point(interface_extends:speech.logs.VoiceFilterLog)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .speech.logs.VoiceFilterLog.Status status = 5 [default = UNKNOWN];</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <code>optional .speech.logs.VoiceFilterLog.Status status = 5 [default = UNKNOWN];</code>
   * @return The status.
   */
  com.google.speech.logs.VoiceFilterLog.Status getStatus();

  /**
   * <code>optional .speech.logs.VoiceFilterLog.MaskStrengthStatistics enhanced = 3;</code>
   * @return Whether the enhanced field is set.
   */
  boolean hasEnhanced();
  /**
   * <code>optional .speech.logs.VoiceFilterLog.MaskStrengthStatistics enhanced = 3;</code>
   * @return The enhanced.
   */
  com.google.speech.logs.VoiceFilterLog.MaskStrengthStatistics getEnhanced();
  /**
   * <code>optional .speech.logs.VoiceFilterLog.MaskStrengthStatistics enhanced = 3;</code>
   */
  com.google.speech.logs.VoiceFilterLog.MaskStrengthStatisticsOrBuilder getEnhancedOrBuilder();

  /**
   * <code>optional .speech.logs.VoiceFilterLog.MaskStrengthStatistics output = 4;</code>
   * @return Whether the output field is set.
   */
  boolean hasOutput();
  /**
   * <code>optional .speech.logs.VoiceFilterLog.MaskStrengthStatistics output = 4;</code>
   * @return The output.
   */
  com.google.speech.logs.VoiceFilterLog.MaskStrengthStatistics getOutput();
  /**
   * <code>optional .speech.logs.VoiceFilterLog.MaskStrengthStatistics output = 4;</code>
   */
  com.google.speech.logs.VoiceFilterLog.MaskStrengthStatisticsOrBuilder getOutputOrBuilder();

  /**
   * <code>optional float noise_type_prediction = 6;</code>
   * @return Whether the noiseTypePrediction field is set.
   */
  boolean hasNoiseTypePrediction();
  /**
   * <code>optional float noise_type_prediction = 6;</code>
   * @return The noiseTypePrediction.
   */
  float getNoiseTypePrediction();
}
