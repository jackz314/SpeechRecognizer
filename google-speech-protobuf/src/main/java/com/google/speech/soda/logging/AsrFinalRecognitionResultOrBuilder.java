// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logs/proto/speech/soda/soda_event_log.proto

package com.google.speech.soda.logging;

public interface AsrFinalRecognitionResultOrBuilder extends
    // @@protoc_insertion_point(interface_extends:logs.proto.speech.soda.AsrFinalRecognitionResult)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .logs.proto.speech.soda.AsrTimingMetrics timing_metrics = 1;</code>
   * @return Whether the timingMetrics field is set.
   */
  boolean hasTimingMetrics();
  /**
   * <code>optional .logs.proto.speech.soda.AsrTimingMetrics timing_metrics = 1;</code>
   * @return The timingMetrics.
   */
  com.google.speech.soda.logging.AsrTimingMetrics getTimingMetrics();
  /**
   * <code>optional .logs.proto.speech.soda.AsrTimingMetrics timing_metrics = 1;</code>
   */
  com.google.speech.soda.logging.AsrTimingMetricsOrBuilder getTimingMetricsOrBuilder();

  /**
   * <code>optional .logs.proto.speech.soda.SpeakerIdResult speaker_id_result = 2;</code>
   * @return Whether the speakerIdResult field is set.
   */
  boolean hasSpeakerIdResult();
  /**
   * <code>optional .logs.proto.speech.soda.SpeakerIdResult speaker_id_result = 2;</code>
   * @return The speakerIdResult.
   */
  com.google.speech.soda.logging.SpeakerIdResult getSpeakerIdResult();
  /**
   * <code>optional .logs.proto.speech.soda.SpeakerIdResult speaker_id_result = 2;</code>
   */
  com.google.speech.soda.logging.SpeakerIdResultOrBuilder getSpeakerIdResultOrBuilder();

  /**
   * <code>optional int32 trigger_type = 3;</code>
   * @return Whether the triggerType field is set.
   */
  boolean hasTriggerType();
  /**
   * <code>optional int32 trigger_type = 3;</code>
   * @return The triggerType.
   */
  int getTriggerType();

  /**
   * <code>optional int32 unicode_length = 4;</code>
   * @return Whether the unicodeLength field is set.
   */
  boolean hasUnicodeLength();
  /**
   * <code>optional int32 unicode_length = 4;</code>
   * @return The unicodeLength.
   */
  int getUnicodeLength();
}
