// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/greco3/twiddler/fst_twiddler_builder_params.proto

package greco;

public final class FstTwiddlerBuilderParamsOuterClass {
  private FstTwiddlerBuilderParamsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FstTwiddlerBuilderParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:greco.FstTwiddlerBuilderParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
     * @return Whether the backoffArcLabel field is set.
     */
    boolean hasBackoffArcLabel();
    /**
     * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
     * @return The backoffArcLabel.
     */
    long getBackoffArcLabel();

    /**
     * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
     * @return Whether the addWeightToBackoffArcs field is set.
     */
    boolean hasAddWeightToBackoffArcs();
    /**
     * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
     * @return The addWeightToBackoffArcs.
     */
    boolean getAddWeightToBackoffArcs();

    /**
     * <code>optional string rho_symbol = 6;</code>
     * @return Whether the rhoSymbol field is set.
     */
    boolean hasRhoSymbol();
    /**
     * <code>optional string rho_symbol = 6;</code>
     * @return The rhoSymbol.
     */
    java.lang.String getRhoSymbol();
    /**
     * <code>optional string rho_symbol = 6;</code>
     * @return The bytes for rhoSymbol.
     */
    com.google.protobuf.ByteString
        getRhoSymbolBytes();

    /**
     * <code>optional bool use_alternative_overlap_semantics = 7;</code>
     * @return Whether the useAlternativeOverlapSemantics field is set.
     */
    boolean hasUseAlternativeOverlapSemantics();
    /**
     * <code>optional bool use_alternative_overlap_semantics = 7;</code>
     * @return The useAlternativeOverlapSemantics.
     */
    boolean getUseAlternativeOverlapSemantics();

    /**
     * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
     * @return Whether the alternativeOverlapSemanticsOptions field is set.
     */
    boolean hasAlternativeOverlapSemanticsOptions();
    /**
     * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
     * @return The alternativeOverlapSemanticsOptions.
     */
    greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions getAlternativeOverlapSemanticsOptions();
    /**
     * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
     */
    greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder getAlternativeOverlapSemanticsOptionsOrBuilder();

    /**
     * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
     * @return Whether the twiddleOnlyOnce field is set.
     */
    @java.lang.Deprecated boolean hasTwiddleOnlyOnce();
    /**
     * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
     * @return The twiddleOnlyOnce.
     */
    @java.lang.Deprecated boolean getTwiddleOnlyOnce();

    /**
     * <code>float retwiddle_penalty = 4;</code>
     * @return Whether the retwiddlePenalty field is set.
     */
    boolean hasRetwiddlePenalty();
    /**
     * <code>float retwiddle_penalty = 4;</code>
     * @return The retwiddlePenalty.
     */
    float getRetwiddlePenalty();

    public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.RetwiddleOptionsCase getRetwiddleOptionsCase();
  }
  /**
   * Protobuf type {@code greco.FstTwiddlerBuilderParams}
   */
  public static final class FstTwiddlerBuilderParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:greco.FstTwiddlerBuilderParams)
      FstTwiddlerBuilderParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FstTwiddlerBuilderParams.newBuilder() to construct.
    private FstTwiddlerBuilderParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FstTwiddlerBuilderParams() {
      addWeightToBackoffArcs_ = true;
      rhoSymbol_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FstTwiddlerBuilderParams();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.class, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.Builder.class);
    }

    public interface AlternativeOverlapSemanticsOptionsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool use_longest_match = 1 [default = true];</code>
       * @return Whether the useLongestMatch field is set.
       */
      boolean hasUseLongestMatch();
      /**
       * <code>optional bool use_longest_match = 1 [default = true];</code>
       * @return The useLongestMatch.
       */
      boolean getUseLongestMatch();

      /**
       * <code>optional bool use_full_phrase_weight = 2;</code>
       * @return Whether the useFullPhraseWeight field is set.
       */
      boolean hasUseFullPhraseWeight();
      /**
       * <code>optional bool use_full_phrase_weight = 2;</code>
       * @return The useFullPhraseWeight.
       */
      boolean getUseFullPhraseWeight();
    }
    /**
     * Protobuf type {@code greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions}
     */
    public static final class AlternativeOverlapSemanticsOptions extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions)
        AlternativeOverlapSemanticsOptionsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AlternativeOverlapSemanticsOptions.newBuilder() to construct.
      private AlternativeOverlapSemanticsOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AlternativeOverlapSemanticsOptions() {
        useLongestMatch_ = true;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AlternativeOverlapSemanticsOptions();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.class, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder.class);
      }

      private int bitField0_;
      public static final int USE_LONGEST_MATCH_FIELD_NUMBER = 1;
      private boolean useLongestMatch_;
      /**
       * <code>optional bool use_longest_match = 1 [default = true];</code>
       * @return Whether the useLongestMatch field is set.
       */
      @java.lang.Override
      public boolean hasUseLongestMatch() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool use_longest_match = 1 [default = true];</code>
       * @return The useLongestMatch.
       */
      @java.lang.Override
      public boolean getUseLongestMatch() {
        return useLongestMatch_;
      }

      public static final int USE_FULL_PHRASE_WEIGHT_FIELD_NUMBER = 2;
      private boolean useFullPhraseWeight_;
      /**
       * <code>optional bool use_full_phrase_weight = 2;</code>
       * @return Whether the useFullPhraseWeight field is set.
       */
      @java.lang.Override
      public boolean hasUseFullPhraseWeight() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool use_full_phrase_weight = 2;</code>
       * @return The useFullPhraseWeight.
       */
      @java.lang.Override
      public boolean getUseFullPhraseWeight() {
        return useFullPhraseWeight_;
      }

      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions)
          greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.class, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder.class);
        }

        // Construct using greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          useLongestMatch_ = true;
          bitField0_ = (bitField0_ & ~0x00000001);
          useFullPhraseWeight_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_descriptor;
        }

        @java.lang.Override
        public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions getDefaultInstanceForType() {
          return greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.getDefaultInstance();
        }

        @java.lang.Override
        public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions build() {
          greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions buildPartial() {
          greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions result = new greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.useLongestMatch_ = useLongestMatch_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.useFullPhraseWeight_ = useFullPhraseWeight_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        private int bitField0_;

        private boolean useLongestMatch_ = true;
        /**
         * <code>optional bool use_longest_match = 1 [default = true];</code>
         * @return Whether the useLongestMatch field is set.
         */
        @java.lang.Override
        public boolean hasUseLongestMatch() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bool use_longest_match = 1 [default = true];</code>
         * @return The useLongestMatch.
         */
        @java.lang.Override
        public boolean getUseLongestMatch() {
          return useLongestMatch_;
        }
        /**
         * <code>optional bool use_longest_match = 1 [default = true];</code>
         * @param value The useLongestMatch to set.
         * @return This builder for chaining.
         */
        public Builder setUseLongestMatch(boolean value) {
          bitField0_ |= 0x00000001;
          useLongestMatch_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool use_longest_match = 1 [default = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearUseLongestMatch() {
          bitField0_ = (bitField0_ & ~0x00000001);
          useLongestMatch_ = true;
          onChanged();
          return this;
        }

        private boolean useFullPhraseWeight_ ;
        /**
         * <code>optional bool use_full_phrase_weight = 2;</code>
         * @return Whether the useFullPhraseWeight field is set.
         */
        @java.lang.Override
        public boolean hasUseFullPhraseWeight() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional bool use_full_phrase_weight = 2;</code>
         * @return The useFullPhraseWeight.
         */
        @java.lang.Override
        public boolean getUseFullPhraseWeight() {
          return useFullPhraseWeight_;
        }
        /**
         * <code>optional bool use_full_phrase_weight = 2;</code>
         * @param value The useFullPhraseWeight to set.
         * @return This builder for chaining.
         */
        public Builder setUseFullPhraseWeight(boolean value) {
          bitField0_ |= 0x00000002;
          useFullPhraseWeight_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool use_full_phrase_weight = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearUseFullPhraseWeight() {
          bitField0_ = (bitField0_ & ~0x00000002);
          useFullPhraseWeight_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions)
      }

      // @@protoc_insertion_point(class_scope:greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions)
      private static final greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions();
      }

      public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AlternativeOverlapSemanticsOptions>
          PARSER = new com.google.protobuf.AbstractParser<AlternativeOverlapSemanticsOptions>() {
        @java.lang.Override
        public AlternativeOverlapSemanticsOptions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(
                    builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<AlternativeOverlapSemanticsOptions> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AlternativeOverlapSemanticsOptions> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int retwiddleOptionsCase_ = 0;
    private java.lang.Object retwiddleOptions_;
    public enum RetwiddleOptionsCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      @java.lang.Deprecated TWIDDLE_ONLY_ONCE(2),
      RETWIDDLE_PENALTY(4),
      RETWIDDLEOPTIONS_NOT_SET(0);
      private final int value;
      private RetwiddleOptionsCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RetwiddleOptionsCase valueOf(int value) {
        return forNumber(value);
      }

      public static RetwiddleOptionsCase forNumber(int value) {
        switch (value) {
          case 2: return TWIDDLE_ONLY_ONCE;
          case 4: return RETWIDDLE_PENALTY;
          case 0: return RETWIDDLEOPTIONS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RetwiddleOptionsCase
    getRetwiddleOptionsCase() {
      return RetwiddleOptionsCase.forNumber(
          retwiddleOptionsCase_);
    }

    public static final int BACKOFF_ARC_LABEL_FIELD_NUMBER = 1;
    private long backoffArcLabel_;
    /**
     * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
     * @return Whether the backoffArcLabel field is set.
     */
    @java.lang.Override
    public boolean hasBackoffArcLabel() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
     * @return The backoffArcLabel.
     */
    @java.lang.Override
    public long getBackoffArcLabel() {
      return backoffArcLabel_;
    }

    public static final int ADD_WEIGHT_TO_BACKOFF_ARCS_FIELD_NUMBER = 3;
    private boolean addWeightToBackoffArcs_;
    /**
     * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
     * @return Whether the addWeightToBackoffArcs field is set.
     */
    @java.lang.Override
    public boolean hasAddWeightToBackoffArcs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
     * @return The addWeightToBackoffArcs.
     */
    @java.lang.Override
    public boolean getAddWeightToBackoffArcs() {
      return addWeightToBackoffArcs_;
    }

    public static final int RHO_SYMBOL_FIELD_NUMBER = 6;
    private volatile java.lang.Object rhoSymbol_;
    /**
     * <code>optional string rho_symbol = 6;</code>
     * @return Whether the rhoSymbol field is set.
     */
    @java.lang.Override
    public boolean hasRhoSymbol() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string rho_symbol = 6;</code>
     * @return The rhoSymbol.
     */
    @java.lang.Override
    public java.lang.String getRhoSymbol() {
      java.lang.Object ref = rhoSymbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rhoSymbol_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rho_symbol = 6;</code>
     * @return The bytes for rhoSymbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRhoSymbolBytes() {
      java.lang.Object ref = rhoSymbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rhoSymbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USE_ALTERNATIVE_OVERLAP_SEMANTICS_FIELD_NUMBER = 7;
    private boolean useAlternativeOverlapSemantics_;
    /**
     * <code>optional bool use_alternative_overlap_semantics = 7;</code>
     * @return Whether the useAlternativeOverlapSemantics field is set.
     */
    @java.lang.Override
    public boolean hasUseAlternativeOverlapSemantics() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool use_alternative_overlap_semantics = 7;</code>
     * @return The useAlternativeOverlapSemantics.
     */
    @java.lang.Override
    public boolean getUseAlternativeOverlapSemantics() {
      return useAlternativeOverlapSemantics_;
    }

    public static final int ALTERNATIVE_OVERLAP_SEMANTICS_OPTIONS_FIELD_NUMBER = 8;
    private greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternativeOverlapSemanticsOptions_;
    /**
     * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
     * @return Whether the alternativeOverlapSemanticsOptions field is set.
     */
    @java.lang.Override
    public boolean hasAlternativeOverlapSemanticsOptions() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
     * @return The alternativeOverlapSemanticsOptions.
     */
    @java.lang.Override
    public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions getAlternativeOverlapSemanticsOptions() {
      return alternativeOverlapSemanticsOptions_ == null ? greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.getDefaultInstance() : alternativeOverlapSemanticsOptions_;
    }
    /**
     * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
     */
    @java.lang.Override
    public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder getAlternativeOverlapSemanticsOptionsOrBuilder() {
      return alternativeOverlapSemanticsOptions_ == null ? greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.getDefaultInstance() : alternativeOverlapSemanticsOptions_;
    }

    public static final int TWIDDLE_ONLY_ONCE_FIELD_NUMBER = 2;
    /**
     * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
     * @return Whether the twiddleOnlyOnce field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasTwiddleOnlyOnce() {
      return retwiddleOptionsCase_ == 2;
    }
    /**
     * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
     * @return The twiddleOnlyOnce.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getTwiddleOnlyOnce() {
      if (retwiddleOptionsCase_ == 2) {
        return (java.lang.Boolean) retwiddleOptions_;
      }
      return false;
    }

    public static final int RETWIDDLE_PENALTY_FIELD_NUMBER = 4;
    /**
     * <code>float retwiddle_penalty = 4;</code>
     * @return Whether the retwiddlePenalty field is set.
     */
    @java.lang.Override
    public boolean hasRetwiddlePenalty() {
      return retwiddleOptionsCase_ == 4;
    }
    /**
     * <code>float retwiddle_penalty = 4;</code>
     * @return The retwiddlePenalty.
     */
    @java.lang.Override
    public float getRetwiddlePenalty() {
      if (retwiddleOptionsCase_ == 4) {
        return (java.lang.Float) retwiddleOptions_;
      }
      return 0F;
    }

    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code greco.FstTwiddlerBuilderParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:greco.FstTwiddlerBuilderParams)
        greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.class, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.Builder.class);
      }

      // Construct using greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAlternativeOverlapSemanticsOptionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        backoffArcLabel_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        addWeightToBackoffArcs_ = true;
        bitField0_ = (bitField0_ & ~0x00000002);
        rhoSymbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        useAlternativeOverlapSemantics_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          alternativeOverlapSemanticsOptions_ = null;
        } else {
          alternativeOverlapSemanticsOptionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        retwiddleOptionsCase_ = 0;
        retwiddleOptions_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return greco.FstTwiddlerBuilderParamsOuterClass.internal_static_greco_FstTwiddlerBuilderParams_descriptor;
      }

      @java.lang.Override
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams getDefaultInstanceForType() {
        return greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.getDefaultInstance();
      }

      @java.lang.Override
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams build() {
        greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams buildPartial() {
        greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams result = new greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.backoffArcLabel_ = backoffArcLabel_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addWeightToBackoffArcs_ = addWeightToBackoffArcs_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rhoSymbol_ = rhoSymbol_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.useAlternativeOverlapSemantics_ = useAlternativeOverlapSemantics_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
            result.alternativeOverlapSemanticsOptions_ = alternativeOverlapSemanticsOptions_;
          } else {
            result.alternativeOverlapSemanticsOptions_ = alternativeOverlapSemanticsOptionsBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (retwiddleOptionsCase_ == 2) {
          result.retwiddleOptions_ = retwiddleOptions_;
        }
        if (retwiddleOptionsCase_ == 4) {
          result.retwiddleOptions_ = retwiddleOptions_;
        }
        result.bitField0_ = to_bitField0_;
        result.retwiddleOptionsCase_ = retwiddleOptionsCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int retwiddleOptionsCase_ = 0;
      private java.lang.Object retwiddleOptions_;
      public RetwiddleOptionsCase
          getRetwiddleOptionsCase() {
        return RetwiddleOptionsCase.forNumber(
            retwiddleOptionsCase_);
      }

      public Builder clearRetwiddleOptions() {
        retwiddleOptionsCase_ = 0;
        retwiddleOptions_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private long backoffArcLabel_ ;
      /**
       * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
       * @return Whether the backoffArcLabel field is set.
       */
      @java.lang.Override
      public boolean hasBackoffArcLabel() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
       * @return The backoffArcLabel.
       */
      @java.lang.Override
      public long getBackoffArcLabel() {
        return backoffArcLabel_;
      }
      /**
       * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
       * @param value The backoffArcLabel to set.
       * @return This builder for chaining.
       */
      public Builder setBackoffArcLabel(long value) {
        bitField0_ |= 0x00000001;
        backoffArcLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 backoff_arc_label = 1 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearBackoffArcLabel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        backoffArcLabel_ = 0L;
        onChanged();
        return this;
      }

      private boolean addWeightToBackoffArcs_ = true;
      /**
       * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
       * @return Whether the addWeightToBackoffArcs field is set.
       */
      @java.lang.Override
      public boolean hasAddWeightToBackoffArcs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
       * @return The addWeightToBackoffArcs.
       */
      @java.lang.Override
      public boolean getAddWeightToBackoffArcs() {
        return addWeightToBackoffArcs_;
      }
      /**
       * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
       * @param value The addWeightToBackoffArcs to set.
       * @return This builder for chaining.
       */
      public Builder setAddWeightToBackoffArcs(boolean value) {
        bitField0_ |= 0x00000002;
        addWeightToBackoffArcs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool add_weight_to_backoff_arcs = 3 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearAddWeightToBackoffArcs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        addWeightToBackoffArcs_ = true;
        onChanged();
        return this;
      }

      private java.lang.Object rhoSymbol_ = "";
      /**
       * <code>optional string rho_symbol = 6;</code>
       * @return Whether the rhoSymbol field is set.
       */
      public boolean hasRhoSymbol() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string rho_symbol = 6;</code>
       * @return The rhoSymbol.
       */
      public java.lang.String getRhoSymbol() {
        java.lang.Object ref = rhoSymbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rhoSymbol_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rho_symbol = 6;</code>
       * @return The bytes for rhoSymbol.
       */
      public com.google.protobuf.ByteString
          getRhoSymbolBytes() {
        java.lang.Object ref = rhoSymbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rhoSymbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rho_symbol = 6;</code>
       * @param value The rhoSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setRhoSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rhoSymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rho_symbol = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRhoSymbol() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rhoSymbol_ = getDefaultInstance().getRhoSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rho_symbol = 6;</code>
       * @param value The bytes for rhoSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setRhoSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rhoSymbol_ = value;
        onChanged();
        return this;
      }

      private boolean useAlternativeOverlapSemantics_ ;
      /**
       * <code>optional bool use_alternative_overlap_semantics = 7;</code>
       * @return Whether the useAlternativeOverlapSemantics field is set.
       */
      @java.lang.Override
      public boolean hasUseAlternativeOverlapSemantics() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool use_alternative_overlap_semantics = 7;</code>
       * @return The useAlternativeOverlapSemantics.
       */
      @java.lang.Override
      public boolean getUseAlternativeOverlapSemantics() {
        return useAlternativeOverlapSemantics_;
      }
      /**
       * <code>optional bool use_alternative_overlap_semantics = 7;</code>
       * @param value The useAlternativeOverlapSemantics to set.
       * @return This builder for chaining.
       */
      public Builder setUseAlternativeOverlapSemantics(boolean value) {
        bitField0_ |= 0x00000008;
        useAlternativeOverlapSemantics_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool use_alternative_overlap_semantics = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseAlternativeOverlapSemantics() {
        bitField0_ = (bitField0_ & ~0x00000008);
        useAlternativeOverlapSemantics_ = false;
        onChanged();
        return this;
      }

      private greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternativeOverlapSemanticsOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder> alternativeOverlapSemanticsOptionsBuilder_;
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       * @return Whether the alternativeOverlapSemanticsOptions field is set.
       */
      public boolean hasAlternativeOverlapSemanticsOptions() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       * @return The alternativeOverlapSemanticsOptions.
       */
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions getAlternativeOverlapSemanticsOptions() {
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          return alternativeOverlapSemanticsOptions_ == null ? greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.getDefaultInstance() : alternativeOverlapSemanticsOptions_;
        } else {
          return alternativeOverlapSemanticsOptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      public Builder setAlternativeOverlapSemanticsOptions(greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions value) {
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alternativeOverlapSemanticsOptions_ = value;
          onChanged();
        } else {
          alternativeOverlapSemanticsOptionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      public Builder setAlternativeOverlapSemanticsOptions(
          greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder builderForValue) {
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          alternativeOverlapSemanticsOptions_ = builderForValue.build();
          onChanged();
        } else {
          alternativeOverlapSemanticsOptionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      public Builder mergeAlternativeOverlapSemanticsOptions(greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions value) {
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              alternativeOverlapSemanticsOptions_ != null &&
              alternativeOverlapSemanticsOptions_ != greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.getDefaultInstance()) {
            alternativeOverlapSemanticsOptions_ =
              greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.newBuilder(alternativeOverlapSemanticsOptions_).mergeFrom(value).buildPartial();
          } else {
            alternativeOverlapSemanticsOptions_ = value;
          }
          onChanged();
        } else {
          alternativeOverlapSemanticsOptionsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      public Builder clearAlternativeOverlapSemanticsOptions() {
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          alternativeOverlapSemanticsOptions_ = null;
          onChanged();
        } else {
          alternativeOverlapSemanticsOptionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder getAlternativeOverlapSemanticsOptionsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getAlternativeOverlapSemanticsOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder getAlternativeOverlapSemanticsOptionsOrBuilder() {
        if (alternativeOverlapSemanticsOptionsBuilder_ != null) {
          return alternativeOverlapSemanticsOptionsBuilder_.getMessageOrBuilder();
        } else {
          return alternativeOverlapSemanticsOptions_ == null ?
              greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.getDefaultInstance() : alternativeOverlapSemanticsOptions_;
        }
      }
      /**
       * <code>optional .greco.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions alternative_overlap_semantics_options = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder> 
          getAlternativeOverlapSemanticsOptionsFieldBuilder() {
        if (alternativeOverlapSemanticsOptionsBuilder_ == null) {
          alternativeOverlapSemanticsOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptions.Builder, greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams.AlternativeOverlapSemanticsOptionsOrBuilder>(
                  getAlternativeOverlapSemanticsOptions(),
                  getParentForChildren(),
                  isClean());
          alternativeOverlapSemanticsOptions_ = null;
        }
        return alternativeOverlapSemanticsOptionsBuilder_;
      }

      /**
       * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
       * @return Whether the twiddleOnlyOnce field is set.
       */
      @java.lang.Deprecated public boolean hasTwiddleOnlyOnce() {
        return retwiddleOptionsCase_ == 2;
      }
      /**
       * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
       * @return The twiddleOnlyOnce.
       */
      @java.lang.Deprecated public boolean getTwiddleOnlyOnce() {
        if (retwiddleOptionsCase_ == 2) {
          return (java.lang.Boolean) retwiddleOptions_;
        }
        return false;
      }
      /**
       * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
       * @param value The twiddleOnlyOnce to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setTwiddleOnlyOnce(boolean value) {
        retwiddleOptionsCase_ = 2;
        retwiddleOptions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool twiddle_only_once = 2 [default = false, deprecated = true];</code>
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearTwiddleOnlyOnce() {
        if (retwiddleOptionsCase_ == 2) {
          retwiddleOptionsCase_ = 0;
          retwiddleOptions_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>float retwiddle_penalty = 4;</code>
       * @return Whether the retwiddlePenalty field is set.
       */
      public boolean hasRetwiddlePenalty() {
        return retwiddleOptionsCase_ == 4;
      }
      /**
       * <code>float retwiddle_penalty = 4;</code>
       * @return The retwiddlePenalty.
       */
      public float getRetwiddlePenalty() {
        if (retwiddleOptionsCase_ == 4) {
          return (java.lang.Float) retwiddleOptions_;
        }
        return 0F;
      }
      /**
       * <code>float retwiddle_penalty = 4;</code>
       * @param value The retwiddlePenalty to set.
       * @return This builder for chaining.
       */
      public Builder setRetwiddlePenalty(float value) {
        retwiddleOptionsCase_ = 4;
        retwiddleOptions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float retwiddle_penalty = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetwiddlePenalty() {
        if (retwiddleOptionsCase_ == 4) {
          retwiddleOptionsCase_ = 0;
          retwiddleOptions_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:greco.FstTwiddlerBuilderParams)
    }

    // @@protoc_insertion_point(class_scope:greco.FstTwiddlerBuilderParams)
    private static final greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams();
    }

    public static greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FstTwiddlerBuilderParams>
        PARSER = new com.google.protobuf.AbstractParser<FstTwiddlerBuilderParams>() {
      @java.lang.Override
      public FstTwiddlerBuilderParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FstTwiddlerBuilderParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FstTwiddlerBuilderParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public greco.FstTwiddlerBuilderParamsOuterClass.FstTwiddlerBuilderParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_greco_FstTwiddlerBuilderParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_greco_FstTwiddlerBuilderParams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8speech/greco3/twiddler/fst_twiddler_bu" +
      "ilder_params.proto\022\005greco\"\325\003\n\030FstTwiddle" +
      "rBuilderParams\022\034\n\021backoff_arc_label\030\001 \001(" +
      "\003:\0010\022(\n\032add_weight_to_backoff_arcs\030\003 \001(\010" +
      ":\004true\022\022\n\nrho_symbol\030\006 \001(\t\022)\n!use_altern" +
      "ative_overlap_semantics\030\007 \001(\010\022q\n%alterna" +
      "tive_overlap_semantics_options\030\010 \001(\0132B.g" +
      "reco.FstTwiddlerBuilderParams.Alternativ" +
      "eOverlapSemanticsOptions\022&\n\021twiddle_only" +
      "_once\030\002 \001(\010:\005falseB\002\030\001H\000\022\033\n\021retwiddle_pe" +
      "nalty\030\004 \001(\002H\000\032e\n\"AlternativeOverlapSeman" +
      "ticsOptions\022\037\n\021use_longest_match\030\001 \001(\010:\004" +
      "true\022\036\n\026use_full_phrase_weight\030\002 \001(\010B\023\n\021" +
      "retwiddle_optionsB\010H\002\242\002\003GRC"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_greco_FstTwiddlerBuilderParams_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_greco_FstTwiddlerBuilderParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_greco_FstTwiddlerBuilderParams_descriptor,
        new java.lang.String[] { "BackoffArcLabel", "AddWeightToBackoffArcs", "RhoSymbol", "UseAlternativeOverlapSemantics", "AlternativeOverlapSemanticsOptions", "TwiddleOnlyOnce", "RetwiddlePenalty", "RetwiddleOptions", });
    internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_descriptor =
      internal_static_greco_FstTwiddlerBuilderParams_descriptor.getNestedTypes().get(0);
    internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_greco_FstTwiddlerBuilderParams_AlternativeOverlapSemanticsOptions_descriptor,
        new java.lang.String[] { "UseLongestMatch", "UseFullPhraseWeight", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
