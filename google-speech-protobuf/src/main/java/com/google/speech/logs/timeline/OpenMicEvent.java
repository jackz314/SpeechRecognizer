// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logs/proto/speech/service/timeline_event.proto

package com.google.speech.logs.timeline;

/**
 * Protobuf type {@code speech.logs.timeline.OpenMicEvent}
 */
public final class OpenMicEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:speech.logs.timeline.OpenMicEvent)
    OpenMicEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OpenMicEvent.newBuilder() to construct.
  private OpenMicEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OpenMicEvent() {
    type_ = 0;
    openmicModelName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OpenMicEvent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.speech.logs.timeline.TimelineEventOuterClass.internal_static_speech_logs_timeline_OpenMicEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.speech.logs.timeline.TimelineEventOuterClass.internal_static_speech_logs_timeline_OpenMicEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.speech.logs.timeline.OpenMicEvent.class, com.google.speech.logs.timeline.OpenMicEvent.Builder.class);
  }

  /**
   * Protobuf enum {@code speech.logs.timeline.OpenMicEvent.OpenMicEventType}
   */
  public enum OpenMicEventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>OPEN_MIC = 1;</code>
     */
    OPEN_MIC(1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>OPEN_MIC = 1;</code>
     */
    public static final int OPEN_MIC_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OpenMicEventType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OpenMicEventType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return OPEN_MIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OpenMicEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OpenMicEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OpenMicEventType>() {
            public OpenMicEventType findValueByNumber(int number) {
              return OpenMicEventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.speech.logs.timeline.OpenMicEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final OpenMicEventType[] VALUES = values();

    public static OpenMicEventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OpenMicEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:speech.logs.timeline.OpenMicEvent.OpenMicEventType)
  }

  private int bitField0_;
  public static final int SCORE_FIELD_NUMBER = 1;
  private float score_;
  /**
   * <code>optional float score = 1;</code>
   * @return Whether the score field is set.
   */
  @java.lang.Override
  public boolean hasScore() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional float score = 1;</code>
   * @return The score.
   */
  @java.lang.Override
  public float getScore() {
    return score_;
  }

  public static final int ACOUSTIC_SCORE_FIELD_NUMBER = 10;
  private float acousticScore_;
  /**
   * <code>optional float acoustic_score = 10;</code>
   * @return Whether the acousticScore field is set.
   */
  @java.lang.Override
  public boolean hasAcousticScore() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional float acoustic_score = 10;</code>
   * @return The acousticScore.
   */
  @java.lang.Override
  public float getAcousticScore() {
    return acousticScore_;
  }

  public static final int SEMANTIC_FILTER_THRESHOLD_FIELD_NUMBER = 2;
  private float semanticFilterThreshold_;
  /**
   * <code>optional float semantic_filter_threshold = 2;</code>
   * @return Whether the semanticFilterThreshold field is set.
   */
  @java.lang.Override
  public boolean hasSemanticFilterThreshold() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional float semantic_filter_threshold = 2;</code>
   * @return The semanticFilterThreshold.
   */
  @java.lang.Override
  public float getSemanticFilterThreshold() {
    return semanticFilterThreshold_;
  }

  public static final int OPEN_MIC_THRESHOLD_FIELD_NUMBER = 3;
  private float openMicThreshold_;
  /**
   * <code>optional float open_mic_threshold = 3;</code>
   * @return Whether the openMicThreshold field is set.
   */
  @java.lang.Override
  public boolean hasOpenMicThreshold() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional float open_mic_threshold = 3;</code>
   * @return The openMicThreshold.
   */
  @java.lang.Override
  public float getOpenMicThreshold() {
    return openMicThreshold_;
  }

  public static final int GANACHE_OPEN_MIC_THRESHOLD_FIELD_NUMBER = 4;
  private float ganacheOpenMicThreshold_;
  /**
   * <code>optional float ganache_open_mic_threshold = 4;</code>
   * @return Whether the ganacheOpenMicThreshold field is set.
   */
  @java.lang.Override
  public boolean hasGanacheOpenMicThreshold() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>optional float ganache_open_mic_threshold = 4;</code>
   * @return The ganacheOpenMicThreshold.
   */
  @java.lang.Override
  public float getGanacheOpenMicThreshold() {
    return ganacheOpenMicThreshold_;
  }

  public static final int TYPE_FIELD_NUMBER = 5;
  private int type_;
  /**
   * <code>optional .speech.logs.timeline.OpenMicEvent.OpenMicEventType type = 5;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <code>optional .speech.logs.timeline.OpenMicEvent.OpenMicEventType type = 5;</code>
   * @return The type.
   */
  @java.lang.Override public com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType getType() {
    @SuppressWarnings("deprecation")
    com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType result = com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType.valueOf(type_);
    return result == null ? com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType.UNKNOWN : result;
  }

  public static final int SUPPORTS_SEMANTIC_FILTER_FIELD_NUMBER = 6;
  private boolean supportsSemanticFilter_;
  /**
   * <code>optional bool supports_semantic_filter = 6;</code>
   * @return Whether the supportsSemanticFilter field is set.
   */
  @java.lang.Override
  public boolean hasSupportsSemanticFilter() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>optional bool supports_semantic_filter = 6;</code>
   * @return The supportsSemanticFilter.
   */
  @java.lang.Override
  public boolean getSupportsSemanticFilter() {
    return supportsSemanticFilter_;
  }

  public static final int SUPPORTS_OPENMIC_FIELD_NUMBER = 7;
  private boolean supportsOpenmic_;
  /**
   * <code>optional bool supports_openmic = 7;</code>
   * @return Whether the supportsOpenmic field is set.
   */
  @java.lang.Override
  public boolean hasSupportsOpenmic() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <code>optional bool supports_openmic = 7;</code>
   * @return The supportsOpenmic.
   */
  @java.lang.Override
  public boolean getSupportsOpenmic() {
    return supportsOpenmic_;
  }

  public static final int SUPPORTS_LPH_FILTER_FIELD_NUMBER = 8;
  private boolean supportsLphFilter_;
  /**
   * <code>optional bool supports_lph_filter = 8;</code>
   * @return Whether the supportsLphFilter field is set.
   */
  @java.lang.Override
  public boolean hasSupportsLphFilter() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <code>optional bool supports_lph_filter = 8;</code>
   * @return The supportsLphFilter.
   */
  @java.lang.Override
  public boolean getSupportsLphFilter() {
    return supportsLphFilter_;
  }

  public static final int LPH_FILTER_THRESHOLD_FIELD_NUMBER = 9;
  private float lphFilterThreshold_;
  /**
   * <code>optional float lph_filter_threshold = 9;</code>
   * @return Whether the lphFilterThreshold field is set.
   */
  @java.lang.Override
  public boolean hasLphFilterThreshold() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <code>optional float lph_filter_threshold = 9;</code>
   * @return The lphFilterThreshold.
   */
  @java.lang.Override
  public float getLphFilterThreshold() {
    return lphFilterThreshold_;
  }

  public static final int OPENMIC_MODEL_NAME_FIELD_NUMBER = 11;
  private volatile java.lang.Object openmicModelName_;
  /**
   * <code>optional string openmic_model_name = 11;</code>
   * @return Whether the openmicModelName field is set.
   */
  @java.lang.Override
  public boolean hasOpenmicModelName() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <code>optional string openmic_model_name = 11;</code>
   * @return The openmicModelName.
   */
  @java.lang.Override
  public java.lang.String getOpenmicModelName() {
    java.lang.Object ref = openmicModelName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        openmicModelName_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string openmic_model_name = 11;</code>
   * @return The bytes for openmicModelName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOpenmicModelNameBytes() {
    java.lang.Object ref = openmicModelName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      openmicModelName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.speech.logs.timeline.OpenMicEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.speech.logs.timeline.OpenMicEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code speech.logs.timeline.OpenMicEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:speech.logs.timeline.OpenMicEvent)
      com.google.speech.logs.timeline.OpenMicEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.speech.logs.timeline.TimelineEventOuterClass.internal_static_speech_logs_timeline_OpenMicEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.speech.logs.timeline.TimelineEventOuterClass.internal_static_speech_logs_timeline_OpenMicEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.speech.logs.timeline.OpenMicEvent.class, com.google.speech.logs.timeline.OpenMicEvent.Builder.class);
    }

    // Construct using com.google.speech.logs.timeline.OpenMicEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      score_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000001);
      acousticScore_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000002);
      semanticFilterThreshold_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000004);
      openMicThreshold_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000008);
      ganacheOpenMicThreshold_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000010);
      type_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      supportsSemanticFilter_ = false;
      bitField0_ = (bitField0_ & ~0x00000040);
      supportsOpenmic_ = false;
      bitField0_ = (bitField0_ & ~0x00000080);
      supportsLphFilter_ = false;
      bitField0_ = (bitField0_ & ~0x00000100);
      lphFilterThreshold_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000200);
      openmicModelName_ = "";
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.speech.logs.timeline.TimelineEventOuterClass.internal_static_speech_logs_timeline_OpenMicEvent_descriptor;
    }

    @java.lang.Override
    public com.google.speech.logs.timeline.OpenMicEvent getDefaultInstanceForType() {
      return com.google.speech.logs.timeline.OpenMicEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.speech.logs.timeline.OpenMicEvent build() {
      com.google.speech.logs.timeline.OpenMicEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.speech.logs.timeline.OpenMicEvent buildPartial() {
      com.google.speech.logs.timeline.OpenMicEvent result = new com.google.speech.logs.timeline.OpenMicEvent(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.score_ = score_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.acousticScore_ = acousticScore_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.semanticFilterThreshold_ = semanticFilterThreshold_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.openMicThreshold_ = openMicThreshold_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.ganacheOpenMicThreshold_ = ganacheOpenMicThreshold_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        to_bitField0_ |= 0x00000020;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.supportsSemanticFilter_ = supportsSemanticFilter_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.supportsOpenmic_ = supportsOpenmic_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.supportsLphFilter_ = supportsLphFilter_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.lphFilterThreshold_ = lphFilterThreshold_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        to_bitField0_ |= 0x00000400;
      }
      result.openmicModelName_ = openmicModelName_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    private int bitField0_;

    private float score_ ;
    /**
     * <code>optional float score = 1;</code>
     * @return Whether the score field is set.
     */
    @java.lang.Override
    public boolean hasScore() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float score = 1;</code>
     * @return The score.
     */
    @java.lang.Override
    public float getScore() {
      return score_;
    }
    /**
     * <code>optional float score = 1;</code>
     * @param value The score to set.
     * @return This builder for chaining.
     */
    public Builder setScore(float value) {
      bitField0_ |= 0x00000001;
      score_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float score = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearScore() {
      bitField0_ = (bitField0_ & ~0x00000001);
      score_ = 0F;
      onChanged();
      return this;
    }

    private float acousticScore_ ;
    /**
     * <code>optional float acoustic_score = 10;</code>
     * @return Whether the acousticScore field is set.
     */
    @java.lang.Override
    public boolean hasAcousticScore() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float acoustic_score = 10;</code>
     * @return The acousticScore.
     */
    @java.lang.Override
    public float getAcousticScore() {
      return acousticScore_;
    }
    /**
     * <code>optional float acoustic_score = 10;</code>
     * @param value The acousticScore to set.
     * @return This builder for chaining.
     */
    public Builder setAcousticScore(float value) {
      bitField0_ |= 0x00000002;
      acousticScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float acoustic_score = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearAcousticScore() {
      bitField0_ = (bitField0_ & ~0x00000002);
      acousticScore_ = 0F;
      onChanged();
      return this;
    }

    private float semanticFilterThreshold_ ;
    /**
     * <code>optional float semantic_filter_threshold = 2;</code>
     * @return Whether the semanticFilterThreshold field is set.
     */
    @java.lang.Override
    public boolean hasSemanticFilterThreshold() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float semantic_filter_threshold = 2;</code>
     * @return The semanticFilterThreshold.
     */
    @java.lang.Override
    public float getSemanticFilterThreshold() {
      return semanticFilterThreshold_;
    }
    /**
     * <code>optional float semantic_filter_threshold = 2;</code>
     * @param value The semanticFilterThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setSemanticFilterThreshold(float value) {
      bitField0_ |= 0x00000004;
      semanticFilterThreshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float semantic_filter_threshold = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSemanticFilterThreshold() {
      bitField0_ = (bitField0_ & ~0x00000004);
      semanticFilterThreshold_ = 0F;
      onChanged();
      return this;
    }

    private float openMicThreshold_ ;
    /**
     * <code>optional float open_mic_threshold = 3;</code>
     * @return Whether the openMicThreshold field is set.
     */
    @java.lang.Override
    public boolean hasOpenMicThreshold() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional float open_mic_threshold = 3;</code>
     * @return The openMicThreshold.
     */
    @java.lang.Override
    public float getOpenMicThreshold() {
      return openMicThreshold_;
    }
    /**
     * <code>optional float open_mic_threshold = 3;</code>
     * @param value The openMicThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setOpenMicThreshold(float value) {
      bitField0_ |= 0x00000008;
      openMicThreshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float open_mic_threshold = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpenMicThreshold() {
      bitField0_ = (bitField0_ & ~0x00000008);
      openMicThreshold_ = 0F;
      onChanged();
      return this;
    }

    private float ganacheOpenMicThreshold_ ;
    /**
     * <code>optional float ganache_open_mic_threshold = 4;</code>
     * @return Whether the ganacheOpenMicThreshold field is set.
     */
    @java.lang.Override
    public boolean hasGanacheOpenMicThreshold() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float ganache_open_mic_threshold = 4;</code>
     * @return The ganacheOpenMicThreshold.
     */
    @java.lang.Override
    public float getGanacheOpenMicThreshold() {
      return ganacheOpenMicThreshold_;
    }
    /**
     * <code>optional float ganache_open_mic_threshold = 4;</code>
     * @param value The ganacheOpenMicThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setGanacheOpenMicThreshold(float value) {
      bitField0_ |= 0x00000010;
      ganacheOpenMicThreshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float ganache_open_mic_threshold = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearGanacheOpenMicThreshold() {
      bitField0_ = (bitField0_ & ~0x00000010);
      ganacheOpenMicThreshold_ = 0F;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <code>optional .speech.logs.timeline.OpenMicEvent.OpenMicEventType type = 5;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .speech.logs.timeline.OpenMicEvent.OpenMicEventType type = 5;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType getType() {
      @SuppressWarnings("deprecation")
      com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType result = com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType.valueOf(type_);
      return result == null ? com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType.UNKNOWN : result;
    }
    /**
     * <code>optional .speech.logs.timeline.OpenMicEvent.OpenMicEventType type = 5;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.speech.logs.timeline.OpenMicEvent.OpenMicEventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .speech.logs.timeline.OpenMicEvent.OpenMicEventType type = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000020);
      type_ = 0;
      onChanged();
      return this;
    }

    private boolean supportsSemanticFilter_ ;
    /**
     * <code>optional bool supports_semantic_filter = 6;</code>
     * @return Whether the supportsSemanticFilter field is set.
     */
    @java.lang.Override
    public boolean hasSupportsSemanticFilter() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool supports_semantic_filter = 6;</code>
     * @return The supportsSemanticFilter.
     */
    @java.lang.Override
    public boolean getSupportsSemanticFilter() {
      return supportsSemanticFilter_;
    }
    /**
     * <code>optional bool supports_semantic_filter = 6;</code>
     * @param value The supportsSemanticFilter to set.
     * @return This builder for chaining.
     */
    public Builder setSupportsSemanticFilter(boolean value) {
      bitField0_ |= 0x00000040;
      supportsSemanticFilter_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool supports_semantic_filter = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSupportsSemanticFilter() {
      bitField0_ = (bitField0_ & ~0x00000040);
      supportsSemanticFilter_ = false;
      onChanged();
      return this;
    }

    private boolean supportsOpenmic_ ;
    /**
     * <code>optional bool supports_openmic = 7;</code>
     * @return Whether the supportsOpenmic field is set.
     */
    @java.lang.Override
    public boolean hasSupportsOpenmic() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool supports_openmic = 7;</code>
     * @return The supportsOpenmic.
     */
    @java.lang.Override
    public boolean getSupportsOpenmic() {
      return supportsOpenmic_;
    }
    /**
     * <code>optional bool supports_openmic = 7;</code>
     * @param value The supportsOpenmic to set.
     * @return This builder for chaining.
     */
    public Builder setSupportsOpenmic(boolean value) {
      bitField0_ |= 0x00000080;
      supportsOpenmic_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool supports_openmic = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSupportsOpenmic() {
      bitField0_ = (bitField0_ & ~0x00000080);
      supportsOpenmic_ = false;
      onChanged();
      return this;
    }

    private boolean supportsLphFilter_ ;
    /**
     * <code>optional bool supports_lph_filter = 8;</code>
     * @return Whether the supportsLphFilter field is set.
     */
    @java.lang.Override
    public boolean hasSupportsLphFilter() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool supports_lph_filter = 8;</code>
     * @return The supportsLphFilter.
     */
    @java.lang.Override
    public boolean getSupportsLphFilter() {
      return supportsLphFilter_;
    }
    /**
     * <code>optional bool supports_lph_filter = 8;</code>
     * @param value The supportsLphFilter to set.
     * @return This builder for chaining.
     */
    public Builder setSupportsLphFilter(boolean value) {
      bitField0_ |= 0x00000100;
      supportsLphFilter_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool supports_lph_filter = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSupportsLphFilter() {
      bitField0_ = (bitField0_ & ~0x00000100);
      supportsLphFilter_ = false;
      onChanged();
      return this;
    }

    private float lphFilterThreshold_ ;
    /**
     * <code>optional float lph_filter_threshold = 9;</code>
     * @return Whether the lphFilterThreshold field is set.
     */
    @java.lang.Override
    public boolean hasLphFilterThreshold() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional float lph_filter_threshold = 9;</code>
     * @return The lphFilterThreshold.
     */
    @java.lang.Override
    public float getLphFilterThreshold() {
      return lphFilterThreshold_;
    }
    /**
     * <code>optional float lph_filter_threshold = 9;</code>
     * @param value The lphFilterThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setLphFilterThreshold(float value) {
      bitField0_ |= 0x00000200;
      lphFilterThreshold_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float lph_filter_threshold = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearLphFilterThreshold() {
      bitField0_ = (bitField0_ & ~0x00000200);
      lphFilterThreshold_ = 0F;
      onChanged();
      return this;
    }

    private java.lang.Object openmicModelName_ = "";
    /**
     * <code>optional string openmic_model_name = 11;</code>
     * @return Whether the openmicModelName field is set.
     */
    public boolean hasOpenmicModelName() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional string openmic_model_name = 11;</code>
     * @return The openmicModelName.
     */
    public java.lang.String getOpenmicModelName() {
      java.lang.Object ref = openmicModelName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          openmicModelName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string openmic_model_name = 11;</code>
     * @return The bytes for openmicModelName.
     */
    public com.google.protobuf.ByteString
        getOpenmicModelNameBytes() {
      java.lang.Object ref = openmicModelName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        openmicModelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string openmic_model_name = 11;</code>
     * @param value The openmicModelName to set.
     * @return This builder for chaining.
     */
    public Builder setOpenmicModelName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      openmicModelName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string openmic_model_name = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpenmicModelName() {
      bitField0_ = (bitField0_ & ~0x00000400);
      openmicModelName_ = getDefaultInstance().getOpenmicModelName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string openmic_model_name = 11;</code>
     * @param value The bytes for openmicModelName to set.
     * @return This builder for chaining.
     */
    public Builder setOpenmicModelNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      openmicModelName_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:speech.logs.timeline.OpenMicEvent)
  }

  // @@protoc_insertion_point(class_scope:speech.logs.timeline.OpenMicEvent)
  private static final com.google.speech.logs.timeline.OpenMicEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.speech.logs.timeline.OpenMicEvent();
  }

  public static com.google.speech.logs.timeline.OpenMicEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<OpenMicEvent>
      PARSER = new com.google.protobuf.AbstractParser<OpenMicEvent>() {
    @java.lang.Override
    public OpenMicEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(
                builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<OpenMicEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OpenMicEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.speech.logs.timeline.OpenMicEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

