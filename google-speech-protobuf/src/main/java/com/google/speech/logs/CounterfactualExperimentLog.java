// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logs/proto/speech/service/recognizer_log.proto

package com.google.speech.logs;

/**
 * Protobuf type {@code speech.logs.CounterfactualExperimentLog}
 */
public final class CounterfactualExperimentLog extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:speech.logs.CounterfactualExperimentLog)
    CounterfactualExperimentLogOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CounterfactualExperimentLog.newBuilder() to construct.
  private CounterfactualExperimentLog(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CounterfactualExperimentLog() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CounterfactualExperimentLog();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.speech.logs.CounterfactualExperimentLog.class, com.google.speech.logs.CounterfactualExperimentLog.Builder.class);
  }

  /**
   * Protobuf enum {@code speech.logs.CounterfactualExperimentLog.EnrollmentOutcome}
   */
  public enum EnrollmentOutcome
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_ENROLLMENT_OUTCOME = 0;</code>
     */
    UNKNOWN_ENROLLMENT_OUTCOME(0),
    /**
     * <code>DISABLED_BY_FEATURE_FLAG = 1;</code>
     */
    DISABLED_BY_FEATURE_FLAG(1),
    /**
     * <code>DISABLED_NO_COUNTERFACTUAL_EXPERIMENT = 2;</code>
     */
    DISABLED_NO_COUNTERFACTUAL_EXPERIMENT(2),
    /**
     * <code>DISABLED_MISSING_EXPERIMENT_STATE = 3;</code>
     */
    DISABLED_MISSING_EXPERIMENT_STATE(3),
    /**
     * <code>DISABLED_MULTIPLE_SELECTED_EXPERIMENTS = 4;</code>
     */
    DISABLED_MULTIPLE_SELECTED_EXPERIMENTS(4),
    /**
     * <code>DISABLED_MULTIPLE_COUNTERFACTUAL_ARMS = 5;</code>
     */
    DISABLED_MULTIPLE_COUNTERFACTUAL_ARMS(5),
    /**
     * <code>DISABLED_NO_COUNTERFACTUAL_ARM = 6;</code>
     */
    DISABLED_NO_COUNTERFACTUAL_ARM(6),
    /**
     * <code>DISABLED_GLOBAL_RATE_LIMIT = 7;</code>
     */
    DISABLED_GLOBAL_RATE_LIMIT(7),
    /**
     * <code>DISABLED_FAILED_DEBUG_INPUT_CONSTRUCTION = 9;</code>
     */
    DISABLED_FAILED_DEBUG_INPUT_CONSTRUCTION(9),
    /**
     * <code>DISABLED_FAILED_COUNTERFACTUAL_DIVERSION = 10;</code>
     */
    DISABLED_FAILED_COUNTERFACTUAL_DIVERSION(10),
    /**
     * <code>SUCCESS = 8;</code>
     */
    SUCCESS(8),
    ;

    /**
     * <code>UNKNOWN_ENROLLMENT_OUTCOME = 0;</code>
     */
    public static final int UNKNOWN_ENROLLMENT_OUTCOME_VALUE = 0;
    /**
     * <code>DISABLED_BY_FEATURE_FLAG = 1;</code>
     */
    public static final int DISABLED_BY_FEATURE_FLAG_VALUE = 1;
    /**
     * <code>DISABLED_NO_COUNTERFACTUAL_EXPERIMENT = 2;</code>
     */
    public static final int DISABLED_NO_COUNTERFACTUAL_EXPERIMENT_VALUE = 2;
    /**
     * <code>DISABLED_MISSING_EXPERIMENT_STATE = 3;</code>
     */
    public static final int DISABLED_MISSING_EXPERIMENT_STATE_VALUE = 3;
    /**
     * <code>DISABLED_MULTIPLE_SELECTED_EXPERIMENTS = 4;</code>
     */
    public static final int DISABLED_MULTIPLE_SELECTED_EXPERIMENTS_VALUE = 4;
    /**
     * <code>DISABLED_MULTIPLE_COUNTERFACTUAL_ARMS = 5;</code>
     */
    public static final int DISABLED_MULTIPLE_COUNTERFACTUAL_ARMS_VALUE = 5;
    /**
     * <code>DISABLED_NO_COUNTERFACTUAL_ARM = 6;</code>
     */
    public static final int DISABLED_NO_COUNTERFACTUAL_ARM_VALUE = 6;
    /**
     * <code>DISABLED_GLOBAL_RATE_LIMIT = 7;</code>
     */
    public static final int DISABLED_GLOBAL_RATE_LIMIT_VALUE = 7;
    /**
     * <code>DISABLED_FAILED_DEBUG_INPUT_CONSTRUCTION = 9;</code>
     */
    public static final int DISABLED_FAILED_DEBUG_INPUT_CONSTRUCTION_VALUE = 9;
    /**
     * <code>DISABLED_FAILED_COUNTERFACTUAL_DIVERSION = 10;</code>
     */
    public static final int DISABLED_FAILED_COUNTERFACTUAL_DIVERSION_VALUE = 10;
    /**
     * <code>SUCCESS = 8;</code>
     */
    public static final int SUCCESS_VALUE = 8;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EnrollmentOutcome valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EnrollmentOutcome forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ENROLLMENT_OUTCOME;
        case 1: return DISABLED_BY_FEATURE_FLAG;
        case 2: return DISABLED_NO_COUNTERFACTUAL_EXPERIMENT;
        case 3: return DISABLED_MISSING_EXPERIMENT_STATE;
        case 4: return DISABLED_MULTIPLE_SELECTED_EXPERIMENTS;
        case 5: return DISABLED_MULTIPLE_COUNTERFACTUAL_ARMS;
        case 6: return DISABLED_NO_COUNTERFACTUAL_ARM;
        case 7: return DISABLED_GLOBAL_RATE_LIMIT;
        case 9: return DISABLED_FAILED_DEBUG_INPUT_CONSTRUCTION;
        case 10: return DISABLED_FAILED_COUNTERFACTUAL_DIVERSION;
        case 8: return SUCCESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EnrollmentOutcome>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EnrollmentOutcome> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EnrollmentOutcome>() {
            public EnrollmentOutcome findValueByNumber(int number) {
              return EnrollmentOutcome.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.speech.logs.CounterfactualExperimentLog.getDescriptor().getEnumTypes().get(0);
    }

    private static final EnrollmentOutcome[] VALUES = values();

    public static EnrollmentOutcome valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EnrollmentOutcome(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:speech.logs.CounterfactualExperimentLog.EnrollmentOutcome)
  }

  public interface CounterfactualExperimentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speech.logs.CounterfactualExperimentLog.CounterfactualExperiment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 factual_experiment_id = 1;</code>
     * @return Whether the factualExperimentId field is set.
     */
    boolean hasFactualExperimentId();
    /**
     * <code>optional int32 factual_experiment_id = 1;</code>
     * @return The factualExperimentId.
     */
    int getFactualExperimentId();

    /**
     * <code>optional int32 counterfactual_experiment_id = 2;</code>
     * @return Whether the counterfactualExperimentId field is set.
     */
    boolean hasCounterfactualExperimentId();
    /**
     * <code>optional int32 counterfactual_experiment_id = 2;</code>
     * @return The counterfactualExperimentId.
     */
    int getCounterfactualExperimentId();

    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
     * @return Whether the enrollmentOutcome field is set.
     */
    boolean hasEnrollmentOutcome();
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
     * @return The enrollmentOutcome.
     */
    com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome getEnrollmentOutcome();

    /**
     * <code>optional bool top_hypothesis_diff = 4;</code>
     * @return Whether the topHypothesisDiff field is set.
     */
    boolean hasTopHypothesisDiff();
    /**
     * <code>optional bool top_hypothesis_diff = 4;</code>
     * @return The topHypothesisDiff.
     */
    boolean getTopHypothesisDiff();

    /**
     * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
     * @return Whether the rawCounterfactualTopHypothesis field is set.
     */
    boolean hasRawCounterfactualTopHypothesis();
    /**
     * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
     * @return The rawCounterfactualTopHypothesis.
     */
    java.lang.String getRawCounterfactualTopHypothesis();
    /**
     * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
     * @return The bytes for rawCounterfactualTopHypothesis.
     */
    com.google.protobuf.ByteString
        getRawCounterfactualTopHypothesisBytes();

    /**
     * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
     * @return Whether the normalizedTopHypothesisDiff field is set.
     */
    boolean hasNormalizedTopHypothesisDiff();
    /**
     * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
     * @return The normalizedTopHypothesisDiff.
     */
    boolean getNormalizedTopHypothesisDiff();

    /**
     * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
     * @return Whether the counterfactualPrenormHypothesis field is set.
     */
    boolean hasCounterfactualPrenormHypothesis();
    /**
     * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
     * @return The counterfactualPrenormHypothesis.
     */
    java.lang.String getCounterfactualPrenormHypothesis();
    /**
     * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
     * @return The bytes for counterfactualPrenormHypothesis.
     */
    com.google.protobuf.ByteString
        getCounterfactualPrenormHypothesisBytes();
  }
  /**
   * Protobuf type {@code speech.logs.CounterfactualExperimentLog.CounterfactualExperiment}
   */
  public static final class CounterfactualExperiment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speech.logs.CounterfactualExperimentLog.CounterfactualExperiment)
      CounterfactualExperimentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CounterfactualExperiment.newBuilder() to construct.
    private CounterfactualExperiment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CounterfactualExperiment() {
      enrollmentOutcome_ = 0;
      rawCounterfactualTopHypothesis_ = "";
      counterfactualPrenormHypothesis_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CounterfactualExperiment();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_CounterfactualExperiment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_CounterfactualExperiment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.class, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder.class);
    }

    private int bitField0_;
    public static final int FACTUAL_EXPERIMENT_ID_FIELD_NUMBER = 1;
    private int factualExperimentId_;
    /**
     * <code>optional int32 factual_experiment_id = 1;</code>
     * @return Whether the factualExperimentId field is set.
     */
    @java.lang.Override
    public boolean hasFactualExperimentId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 factual_experiment_id = 1;</code>
     * @return The factualExperimentId.
     */
    @java.lang.Override
    public int getFactualExperimentId() {
      return factualExperimentId_;
    }

    public static final int COUNTERFACTUAL_EXPERIMENT_ID_FIELD_NUMBER = 2;
    private int counterfactualExperimentId_;
    /**
     * <code>optional int32 counterfactual_experiment_id = 2;</code>
     * @return Whether the counterfactualExperimentId field is set.
     */
    @java.lang.Override
    public boolean hasCounterfactualExperimentId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 counterfactual_experiment_id = 2;</code>
     * @return The counterfactualExperimentId.
     */
    @java.lang.Override
    public int getCounterfactualExperimentId() {
      return counterfactualExperimentId_;
    }

    public static final int ENROLLMENT_OUTCOME_FIELD_NUMBER = 3;
    private int enrollmentOutcome_;
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
     * @return Whether the enrollmentOutcome field is set.
     */
    @java.lang.Override public boolean hasEnrollmentOutcome() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
     * @return The enrollmentOutcome.
     */
    @java.lang.Override public com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome getEnrollmentOutcome() {
      @SuppressWarnings("deprecation")
      com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome result = com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome.valueOf(enrollmentOutcome_);
      return result == null ? com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome.UNKNOWN_ENROLLMENT_OUTCOME : result;
    }

    public static final int TOP_HYPOTHESIS_DIFF_FIELD_NUMBER = 4;
    private boolean topHypothesisDiff_;
    /**
     * <code>optional bool top_hypothesis_diff = 4;</code>
     * @return Whether the topHypothesisDiff field is set.
     */
    @java.lang.Override
    public boolean hasTopHypothesisDiff() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool top_hypothesis_diff = 4;</code>
     * @return The topHypothesisDiff.
     */
    @java.lang.Override
    public boolean getTopHypothesisDiff() {
      return topHypothesisDiff_;
    }

    public static final int RAW_COUNTERFACTUAL_TOP_HYPOTHESIS_FIELD_NUMBER = 5;
    private volatile java.lang.Object rawCounterfactualTopHypothesis_;
    /**
     * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
     * @return Whether the rawCounterfactualTopHypothesis field is set.
     */
    @java.lang.Override
    public boolean hasRawCounterfactualTopHypothesis() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
     * @return The rawCounterfactualTopHypothesis.
     */
    @java.lang.Override
    public java.lang.String getRawCounterfactualTopHypothesis() {
      java.lang.Object ref = rawCounterfactualTopHypothesis_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rawCounterfactualTopHypothesis_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
     * @return The bytes for rawCounterfactualTopHypothesis.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRawCounterfactualTopHypothesisBytes() {
      java.lang.Object ref = rawCounterfactualTopHypothesis_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rawCounterfactualTopHypothesis_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMALIZED_TOP_HYPOTHESIS_DIFF_FIELD_NUMBER = 6;
    private boolean normalizedTopHypothesisDiff_;
    /**
     * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
     * @return Whether the normalizedTopHypothesisDiff field is set.
     */
    @java.lang.Override
    public boolean hasNormalizedTopHypothesisDiff() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
     * @return The normalizedTopHypothesisDiff.
     */
    @java.lang.Override
    public boolean getNormalizedTopHypothesisDiff() {
      return normalizedTopHypothesisDiff_;
    }

    public static final int COUNTERFACTUAL_PRENORM_HYPOTHESIS_FIELD_NUMBER = 7;
    private volatile java.lang.Object counterfactualPrenormHypothesis_;
    /**
     * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
     * @return Whether the counterfactualPrenormHypothesis field is set.
     */
    @java.lang.Override
    public boolean hasCounterfactualPrenormHypothesis() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
     * @return The counterfactualPrenormHypothesis.
     */
    @java.lang.Override
    public java.lang.String getCounterfactualPrenormHypothesis() {
      java.lang.Object ref = counterfactualPrenormHypothesis_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          counterfactualPrenormHypothesis_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
     * @return The bytes for counterfactualPrenormHypothesis.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCounterfactualPrenormHypothesisBytes() {
      java.lang.Object ref = counterfactualPrenormHypothesis_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        counterfactualPrenormHypothesis_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speech.logs.CounterfactualExperimentLog.CounterfactualExperiment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speech.logs.CounterfactualExperimentLog.CounterfactualExperiment)
        com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperimentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_CounterfactualExperiment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_CounterfactualExperiment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.class, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder.class);
      }

      // Construct using com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        factualExperimentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        counterfactualExperimentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        enrollmentOutcome_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        topHypothesisDiff_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        rawCounterfactualTopHypothesis_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        normalizedTopHypothesisDiff_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        counterfactualPrenormHypothesis_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_CounterfactualExperiment_descriptor;
      }

      @java.lang.Override
      public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment getDefaultInstanceForType() {
        return com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment build() {
        com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment buildPartial() {
        com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment result = new com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.factualExperimentId_ = factualExperimentId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.counterfactualExperimentId_ = counterfactualExperimentId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.enrollmentOutcome_ = enrollmentOutcome_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.topHypothesisDiff_ = topHypothesisDiff_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rawCounterfactualTopHypothesis_ = rawCounterfactualTopHypothesis_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.normalizedTopHypothesisDiff_ = normalizedTopHypothesisDiff_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.counterfactualPrenormHypothesis_ = counterfactualPrenormHypothesis_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private int factualExperimentId_ ;
      /**
       * <code>optional int32 factual_experiment_id = 1;</code>
       * @return Whether the factualExperimentId field is set.
       */
      @java.lang.Override
      public boolean hasFactualExperimentId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 factual_experiment_id = 1;</code>
       * @return The factualExperimentId.
       */
      @java.lang.Override
      public int getFactualExperimentId() {
        return factualExperimentId_;
      }
      /**
       * <code>optional int32 factual_experiment_id = 1;</code>
       * @param value The factualExperimentId to set.
       * @return This builder for chaining.
       */
      public Builder setFactualExperimentId(int value) {
        bitField0_ |= 0x00000001;
        factualExperimentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 factual_experiment_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFactualExperimentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        factualExperimentId_ = 0;
        onChanged();
        return this;
      }

      private int counterfactualExperimentId_ ;
      /**
       * <code>optional int32 counterfactual_experiment_id = 2;</code>
       * @return Whether the counterfactualExperimentId field is set.
       */
      @java.lang.Override
      public boolean hasCounterfactualExperimentId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 counterfactual_experiment_id = 2;</code>
       * @return The counterfactualExperimentId.
       */
      @java.lang.Override
      public int getCounterfactualExperimentId() {
        return counterfactualExperimentId_;
      }
      /**
       * <code>optional int32 counterfactual_experiment_id = 2;</code>
       * @param value The counterfactualExperimentId to set.
       * @return This builder for chaining.
       */
      public Builder setCounterfactualExperimentId(int value) {
        bitField0_ |= 0x00000002;
        counterfactualExperimentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 counterfactual_experiment_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCounterfactualExperimentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        counterfactualExperimentId_ = 0;
        onChanged();
        return this;
      }

      private int enrollmentOutcome_ = 0;
      /**
       * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
       * @return Whether the enrollmentOutcome field is set.
       */
      @java.lang.Override public boolean hasEnrollmentOutcome() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
       * @return The enrollmentOutcome.
       */
      @java.lang.Override
      public com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome getEnrollmentOutcome() {
        @SuppressWarnings("deprecation")
        com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome result = com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome.valueOf(enrollmentOutcome_);
        return result == null ? com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome.UNKNOWN_ENROLLMENT_OUTCOME : result;
      }
      /**
       * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
       * @param value The enrollmentOutcome to set.
       * @return This builder for chaining.
       */
      public Builder setEnrollmentOutcome(com.google.speech.logs.CounterfactualExperimentLog.EnrollmentOutcome value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        enrollmentOutcome_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .speech.logs.CounterfactualExperimentLog.EnrollmentOutcome enrollment_outcome = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnrollmentOutcome() {
        bitField0_ = (bitField0_ & ~0x00000004);
        enrollmentOutcome_ = 0;
        onChanged();
        return this;
      }

      private boolean topHypothesisDiff_ ;
      /**
       * <code>optional bool top_hypothesis_diff = 4;</code>
       * @return Whether the topHypothesisDiff field is set.
       */
      @java.lang.Override
      public boolean hasTopHypothesisDiff() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool top_hypothesis_diff = 4;</code>
       * @return The topHypothesisDiff.
       */
      @java.lang.Override
      public boolean getTopHypothesisDiff() {
        return topHypothesisDiff_;
      }
      /**
       * <code>optional bool top_hypothesis_diff = 4;</code>
       * @param value The topHypothesisDiff to set.
       * @return This builder for chaining.
       */
      public Builder setTopHypothesisDiff(boolean value) {
        bitField0_ |= 0x00000008;
        topHypothesisDiff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool top_hypothesis_diff = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTopHypothesisDiff() {
        bitField0_ = (bitField0_ & ~0x00000008);
        topHypothesisDiff_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object rawCounterfactualTopHypothesis_ = "";
      /**
       * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
       * @return Whether the rawCounterfactualTopHypothesis field is set.
       */
      public boolean hasRawCounterfactualTopHypothesis() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
       * @return The rawCounterfactualTopHypothesis.
       */
      public java.lang.String getRawCounterfactualTopHypothesis() {
        java.lang.Object ref = rawCounterfactualTopHypothesis_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            rawCounterfactualTopHypothesis_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
       * @return The bytes for rawCounterfactualTopHypothesis.
       */
      public com.google.protobuf.ByteString
          getRawCounterfactualTopHypothesisBytes() {
        java.lang.Object ref = rawCounterfactualTopHypothesis_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rawCounterfactualTopHypothesis_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
       * @param value The rawCounterfactualTopHypothesis to set.
       * @return This builder for chaining.
       */
      public Builder setRawCounterfactualTopHypothesis(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        rawCounterfactualTopHypothesis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawCounterfactualTopHypothesis() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rawCounterfactualTopHypothesis_ = getDefaultInstance().getRawCounterfactualTopHypothesis();
        onChanged();
        return this;
      }
      /**
       * <code>optional string raw_counterfactual_top_hypothesis = 5;</code>
       * @param value The bytes for rawCounterfactualTopHypothesis to set.
       * @return This builder for chaining.
       */
      public Builder setRawCounterfactualTopHypothesisBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        rawCounterfactualTopHypothesis_ = value;
        onChanged();
        return this;
      }

      private boolean normalizedTopHypothesisDiff_ ;
      /**
       * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
       * @return Whether the normalizedTopHypothesisDiff field is set.
       */
      @java.lang.Override
      public boolean hasNormalizedTopHypothesisDiff() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
       * @return The normalizedTopHypothesisDiff.
       */
      @java.lang.Override
      public boolean getNormalizedTopHypothesisDiff() {
        return normalizedTopHypothesisDiff_;
      }
      /**
       * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
       * @param value The normalizedTopHypothesisDiff to set.
       * @return This builder for chaining.
       */
      public Builder setNormalizedTopHypothesisDiff(boolean value) {
        bitField0_ |= 0x00000020;
        normalizedTopHypothesisDiff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool normalized_top_hypothesis_diff = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNormalizedTopHypothesisDiff() {
        bitField0_ = (bitField0_ & ~0x00000020);
        normalizedTopHypothesisDiff_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object counterfactualPrenormHypothesis_ = "";
      /**
       * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
       * @return Whether the counterfactualPrenormHypothesis field is set.
       */
      public boolean hasCounterfactualPrenormHypothesis() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
       * @return The counterfactualPrenormHypothesis.
       */
      public java.lang.String getCounterfactualPrenormHypothesis() {
        java.lang.Object ref = counterfactualPrenormHypothesis_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            counterfactualPrenormHypothesis_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
       * @return The bytes for counterfactualPrenormHypothesis.
       */
      public com.google.protobuf.ByteString
          getCounterfactualPrenormHypothesisBytes() {
        java.lang.Object ref = counterfactualPrenormHypothesis_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          counterfactualPrenormHypothesis_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
       * @param value The counterfactualPrenormHypothesis to set.
       * @return This builder for chaining.
       */
      public Builder setCounterfactualPrenormHypothesis(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        counterfactualPrenormHypothesis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCounterfactualPrenormHypothesis() {
        bitField0_ = (bitField0_ & ~0x00000040);
        counterfactualPrenormHypothesis_ = getDefaultInstance().getCounterfactualPrenormHypothesis();
        onChanged();
        return this;
      }
      /**
       * <code>optional string counterfactual_prenorm_hypothesis = 7;</code>
       * @param value The bytes for counterfactualPrenormHypothesis to set.
       * @return This builder for chaining.
       */
      public Builder setCounterfactualPrenormHypothesisBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        counterfactualPrenormHypothesis_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speech.logs.CounterfactualExperimentLog.CounterfactualExperiment)
    }

    // @@protoc_insertion_point(class_scope:speech.logs.CounterfactualExperimentLog.CounterfactualExperiment)
    private static final com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment();
    }

    public static com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CounterfactualExperiment>
        PARSER = new com.google.protobuf.AbstractParser<CounterfactualExperiment>() {
      @java.lang.Override
      public CounterfactualExperiment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CounterfactualExperiment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CounterfactualExperiment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int EXPERIMENT_FIELD_NUMBER = 1;
  private com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment_;
  /**
   * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
   * @return Whether the experiment field is set.
   */
  @java.lang.Override
  public boolean hasExperiment() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
   * @return The experiment.
   */
  @java.lang.Override
  public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment getExperiment() {
    return experiment_ == null ? com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.getDefaultInstance() : experiment_;
  }
  /**
   * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
   */
  @java.lang.Override
  public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperimentOrBuilder getExperimentOrBuilder() {
    return experiment_ == null ? com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.getDefaultInstance() : experiment_;
  }

  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.speech.logs.CounterfactualExperimentLog parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.speech.logs.CounterfactualExperimentLog prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code speech.logs.CounterfactualExperimentLog}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:speech.logs.CounterfactualExperimentLog)
      com.google.speech.logs.CounterfactualExperimentLogOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.speech.logs.CounterfactualExperimentLog.class, com.google.speech.logs.CounterfactualExperimentLog.Builder.class);
    }

    // Construct using com.google.speech.logs.CounterfactualExperimentLog.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getExperimentFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (experimentBuilder_ == null) {
        experiment_ = null;
      } else {
        experimentBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.speech.logs.RecognizerOuterClass.internal_static_speech_logs_CounterfactualExperimentLog_descriptor;
    }

    @java.lang.Override
    public com.google.speech.logs.CounterfactualExperimentLog getDefaultInstanceForType() {
      return com.google.speech.logs.CounterfactualExperimentLog.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.speech.logs.CounterfactualExperimentLog build() {
      com.google.speech.logs.CounterfactualExperimentLog result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.speech.logs.CounterfactualExperimentLog buildPartial() {
      com.google.speech.logs.CounterfactualExperimentLog result = new com.google.speech.logs.CounterfactualExperimentLog(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        if (experimentBuilder_ == null) {
          result.experiment_ = experiment_;
        } else {
          result.experiment_ = experimentBuilder_.build();
        }
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    private int bitField0_;

    private com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperimentOrBuilder> experimentBuilder_;
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     * @return Whether the experiment field is set.
     */
    public boolean hasExperiment() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     * @return The experiment.
     */
    public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment getExperiment() {
      if (experimentBuilder_ == null) {
        return experiment_ == null ? com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.getDefaultInstance() : experiment_;
      } else {
        return experimentBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    public Builder setExperiment(com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment value) {
      if (experimentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        experiment_ = value;
        onChanged();
      } else {
        experimentBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    public Builder setExperiment(
        com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder builderForValue) {
      if (experimentBuilder_ == null) {
        experiment_ = builderForValue.build();
        onChanged();
      } else {
        experimentBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    public Builder mergeExperiment(com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment value) {
      if (experimentBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
            experiment_ != null &&
            experiment_ != com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.getDefaultInstance()) {
          experiment_ =
            com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.newBuilder(experiment_).mergeFrom(value).buildPartial();
        } else {
          experiment_ = value;
        }
        onChanged();
      } else {
        experimentBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    public Builder clearExperiment() {
      if (experimentBuilder_ == null) {
        experiment_ = null;
        onChanged();
      } else {
        experimentBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder getExperimentBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getExperimentFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    public com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperimentOrBuilder getExperimentOrBuilder() {
      if (experimentBuilder_ != null) {
        return experimentBuilder_.getMessageOrBuilder();
      } else {
        return experiment_ == null ?
            com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.getDefaultInstance() : experiment_;
      }
    }
    /**
     * <code>optional .speech.logs.CounterfactualExperimentLog.CounterfactualExperiment experiment = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperimentOrBuilder> 
        getExperimentFieldBuilder() {
      if (experimentBuilder_ == null) {
        experimentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperiment.Builder, com.google.speech.logs.CounterfactualExperimentLog.CounterfactualExperimentOrBuilder>(
                getExperiment(),
                getParentForChildren(),
                isClean());
        experiment_ = null;
      }
      return experimentBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:speech.logs.CounterfactualExperimentLog)
  }

  // @@protoc_insertion_point(class_scope:speech.logs.CounterfactualExperimentLog)
  private static final com.google.speech.logs.CounterfactualExperimentLog DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.speech.logs.CounterfactualExperimentLog();
  }

  public static com.google.speech.logs.CounterfactualExperimentLog getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<CounterfactualExperimentLog>
      PARSER = new com.google.protobuf.AbstractParser<CounterfactualExperimentLog>() {
    @java.lang.Override
    public CounterfactualExperimentLog parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(
                builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CounterfactualExperimentLog> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CounterfactualExperimentLog> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.speech.logs.CounterfactualExperimentLog getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

