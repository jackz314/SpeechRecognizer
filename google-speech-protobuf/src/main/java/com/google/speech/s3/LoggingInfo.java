// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/service/s3/proto/logging-info.proto

package com.google.speech.s3;

public final class LoggingInfo {
  private LoggingInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(com.google.speech.s3.LoggingInfo.S3LoggingInfo.loggingInfo);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface S3LoggingInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speech.s3.S3LoggingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool gaia_logging_allowed = 1;</code>
     * @return Whether the gaiaLoggingAllowed field is set.
     */
    boolean hasGaiaLoggingAllowed();
    /**
     * <code>optional bool gaia_logging_allowed = 1;</code>
     * @return The gaiaLoggingAllowed.
     */
    boolean getGaiaLoggingAllowed();
  }
  /**
   * Protobuf type {@code speech.s3.S3LoggingInfo}
   */
  public static final class S3LoggingInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speech.s3.S3LoggingInfo)
      S3LoggingInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S3LoggingInfo.newBuilder() to construct.
    private S3LoggingInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S3LoggingInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new S3LoggingInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.speech.s3.LoggingInfo.internal_static_speech_s3_S3LoggingInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.speech.s3.LoggingInfo.internal_static_speech_s3_S3LoggingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.speech.s3.LoggingInfo.S3LoggingInfo.class, com.google.speech.s3.LoggingInfo.S3LoggingInfo.Builder.class);
    }

    private int bitField0_;
    public static final int GAIA_LOGGING_ALLOWED_FIELD_NUMBER = 1;
    private boolean gaiaLoggingAllowed_;
    /**
     * <code>optional bool gaia_logging_allowed = 1;</code>
     * @return Whether the gaiaLoggingAllowed field is set.
     */
    @java.lang.Override
    public boolean hasGaiaLoggingAllowed() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool gaia_logging_allowed = 1;</code>
     * @return The gaiaLoggingAllowed.
     */
    @java.lang.Override
    public boolean getGaiaLoggingAllowed() {
      return gaiaLoggingAllowed_;
    }

    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.speech.s3.LoggingInfo.S3LoggingInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speech.s3.S3LoggingInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speech.s3.S3LoggingInfo)
        com.google.speech.s3.LoggingInfo.S3LoggingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.speech.s3.LoggingInfo.internal_static_speech_s3_S3LoggingInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.speech.s3.LoggingInfo.internal_static_speech_s3_S3LoggingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.speech.s3.LoggingInfo.S3LoggingInfo.class, com.google.speech.s3.LoggingInfo.S3LoggingInfo.Builder.class);
      }

      // Construct using com.google.speech.s3.LoggingInfo.S3LoggingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        gaiaLoggingAllowed_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.speech.s3.LoggingInfo.internal_static_speech_s3_S3LoggingInfo_descriptor;
      }

      @java.lang.Override
      public com.google.speech.s3.LoggingInfo.S3LoggingInfo getDefaultInstanceForType() {
        return com.google.speech.s3.LoggingInfo.S3LoggingInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.speech.s3.LoggingInfo.S3LoggingInfo build() {
        com.google.speech.s3.LoggingInfo.S3LoggingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.speech.s3.LoggingInfo.S3LoggingInfo buildPartial() {
        com.google.speech.s3.LoggingInfo.S3LoggingInfo result = new com.google.speech.s3.LoggingInfo.S3LoggingInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.gaiaLoggingAllowed_ = gaiaLoggingAllowed_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private boolean gaiaLoggingAllowed_ ;
      /**
       * <code>optional bool gaia_logging_allowed = 1;</code>
       * @return Whether the gaiaLoggingAllowed field is set.
       */
      @java.lang.Override
      public boolean hasGaiaLoggingAllowed() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool gaia_logging_allowed = 1;</code>
       * @return The gaiaLoggingAllowed.
       */
      @java.lang.Override
      public boolean getGaiaLoggingAllowed() {
        return gaiaLoggingAllowed_;
      }
      /**
       * <code>optional bool gaia_logging_allowed = 1;</code>
       * @param value The gaiaLoggingAllowed to set.
       * @return This builder for chaining.
       */
      public Builder setGaiaLoggingAllowed(boolean value) {
        bitField0_ |= 0x00000001;
        gaiaLoggingAllowed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool gaia_logging_allowed = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGaiaLoggingAllowed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gaiaLoggingAllowed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speech.s3.S3LoggingInfo)
    }

    // @@protoc_insertion_point(class_scope:speech.s3.S3LoggingInfo)
    private static final com.google.speech.s3.LoggingInfo.S3LoggingInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.speech.s3.LoggingInfo.S3LoggingInfo();
    }

    public static com.google.speech.s3.LoggingInfo.S3LoggingInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<S3LoggingInfo>
        PARSER = new com.google.protobuf.AbstractParser<S3LoggingInfo>() {
      @java.lang.Override
      public S3LoggingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<S3LoggingInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<S3LoggingInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.speech.s3.LoggingInfo.S3LoggingInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int LOGGING_INFO_FIELD_NUMBER = 77499489;
    /**
     * <code>extend .speech.s3.S3Request { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.google.speech.s3.S3.S3Request,
        com.google.speech.s3.LoggingInfo.S3LoggingInfo> loggingInfo = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          com.google.speech.s3.LoggingInfo.S3LoggingInfo.getDefaultInstance(),
          0,
          com.google.speech.s3.LoggingInfo.S3LoggingInfo.class,
          com.google.speech.s3.LoggingInfo.S3LoggingInfo.getDefaultInstance());
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s3_S3LoggingInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s3_S3LoggingInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*speech/service/s3/proto/logging-info.p" +
      "roto\022\tspeech.s3\032\032speech/service/s3/s3.pr" +
      "oto\"v\n\rS3LoggingInfo\022\034\n\024gaia_logging_all" +
      "owed\030\001 \001(\0102G\n\014logging_info\022\024.speech.s3.S" +
      "3Request\030\341\230\372$ \001(\0132\030.speech.s3.S3LoggingI" +
      "nfoB\030\n\024com.google.speech.s3H\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.speech.s3.S3.getDescriptor(),
        });
    internal_static_speech_s3_S3LoggingInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_speech_s3_S3LoggingInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s3_S3LoggingInfo_descriptor,
        new java.lang.String[] { "GaiaLoggingAllowed", });
    com.google.speech.s3.S3.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
