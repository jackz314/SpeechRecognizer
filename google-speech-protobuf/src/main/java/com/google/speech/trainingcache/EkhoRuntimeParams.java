// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/training_cache/proto/config.proto

package com.google.speech.trainingcache;

/**
 * Protobuf type {@code speech.training_cache.EkhoRuntimeParams}
 */
public final class EkhoRuntimeParams extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:speech.training_cache.EkhoRuntimeParams)
    EkhoRuntimeParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EkhoRuntimeParams.newBuilder() to construct.
  private EkhoRuntimeParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EkhoRuntimeParams() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EkhoRuntimeParams();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.speech.trainingcache.Config.internal_static_speech_training_cache_EkhoRuntimeParams_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetHotwordCachingThresholds();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.speech.trainingcache.Config.internal_static_speech_training_cache_EkhoRuntimeParams_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.speech.trainingcache.EkhoRuntimeParams.class, com.google.speech.trainingcache.EkhoRuntimeParams.Builder.class);
  }

  private int bitField0_;
  public static final int CACHE_FAKE_HOTWORD_EVENT_FIELD_NUMBER = 1;
  private boolean cacheFakeHotwordEvent_;
  /**
   * <code>optional bool cache_fake_hotword_event = 1;</code>
   * @return Whether the cacheFakeHotwordEvent field is set.
   */
  @java.lang.Override
  public boolean hasCacheFakeHotwordEvent() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional bool cache_fake_hotword_event = 1;</code>
   * @return The cacheFakeHotwordEvent.
   */
  @java.lang.Override
  public boolean getCacheFakeHotwordEvent() {
    return cacheFakeHotwordEvent_;
  }

  public static final int CACHE_SODA_EVENT_FIELD_NUMBER = 2;
  private boolean cacheSodaEvent_;
  /**
   * <code>optional bool cache_soda_event = 2;</code>
   * @return Whether the cacheSodaEvent field is set.
   */
  @java.lang.Override
  public boolean hasCacheSodaEvent() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional bool cache_soda_event = 2;</code>
   * @return The cacheSodaEvent.
   */
  @java.lang.Override
  public boolean getCacheSodaEvent() {
    return cacheSodaEvent_;
  }

  public static final int CACHE_HOTWORD_TIMEOUT_FIELD_NUMBER = 3;
  private boolean cacheHotwordTimeout_;
  /**
   * <code>optional bool cache_hotword_timeout = 3;</code>
   * @return Whether the cacheHotwordTimeout field is set.
   */
  @java.lang.Override
  public boolean hasCacheHotwordTimeout() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional bool cache_hotword_timeout = 3;</code>
   * @return The cacheHotwordTimeout.
   */
  @java.lang.Override
  public boolean getCacheHotwordTimeout() {
    return cacheHotwordTimeout_;
  }

  public static final int CACHE_RECOGNITION_FIELD_NUMBER = 4;
  private boolean cacheRecognition_;
  /**
   * <code>optional bool cache_recognition = 4;</code>
   * @return Whether the cacheRecognition field is set.
   */
  @java.lang.Override
  public boolean hasCacheRecognition() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional bool cache_recognition = 4;</code>
   * @return The cacheRecognition.
   */
  @java.lang.Override
  public boolean getCacheRecognition() {
    return cacheRecognition_;
  }

  public static final int HOTWORD_CACHING_THRESHOLDS_FIELD_NUMBER = 5;
  private static final class HotwordCachingThresholdsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Float> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Float>newDefaultInstance(
                com.google.speech.trainingcache.Config.internal_static_speech_training_cache_EkhoRuntimeParams_HotwordCachingThresholdsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.FLOAT,
                0F);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Float> hotwordCachingThresholds_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
  internalGetHotwordCachingThresholds() {
    if (hotwordCachingThresholds_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          HotwordCachingThresholdsDefaultEntryHolder.defaultEntry);
    }
    return hotwordCachingThresholds_;
  }

  public int getHotwordCachingThresholdsCount() {
    return internalGetHotwordCachingThresholds().getMap().size();
  }
  /**
   * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
   */

  @java.lang.Override
  public boolean containsHotwordCachingThresholds(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetHotwordCachingThresholds().getMap().containsKey(key);
  }
  /**
   * Use {@link #getHotwordCachingThresholdsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Float> getHotwordCachingThresholds() {
    return getHotwordCachingThresholdsMap();
  }
  /**
   * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Float> getHotwordCachingThresholdsMap() {
    return internalGetHotwordCachingThresholds().getMap();
  }
  /**
   * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
   */
  @java.lang.Override

  public float getHotwordCachingThresholdsOrDefault(
      java.lang.String key,
      float defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Float> map =
        internalGetHotwordCachingThresholds().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
   */
  @java.lang.Override

  public float getHotwordCachingThresholdsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Float> map =
        internalGetHotwordCachingThresholds().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.speech.trainingcache.EkhoRuntimeParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.speech.trainingcache.EkhoRuntimeParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code speech.training_cache.EkhoRuntimeParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:speech.training_cache.EkhoRuntimeParams)
      com.google.speech.trainingcache.EkhoRuntimeParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.speech.trainingcache.Config.internal_static_speech_training_cache_EkhoRuntimeParams_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetHotwordCachingThresholds();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableHotwordCachingThresholds();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.speech.trainingcache.Config.internal_static_speech_training_cache_EkhoRuntimeParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.speech.trainingcache.EkhoRuntimeParams.class, com.google.speech.trainingcache.EkhoRuntimeParams.Builder.class);
    }

    // Construct using com.google.speech.trainingcache.EkhoRuntimeParams.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      cacheFakeHotwordEvent_ = false;
      bitField0_ = (bitField0_ & ~0x00000001);
      cacheSodaEvent_ = false;
      bitField0_ = (bitField0_ & ~0x00000002);
      cacheHotwordTimeout_ = false;
      bitField0_ = (bitField0_ & ~0x00000004);
      cacheRecognition_ = false;
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableHotwordCachingThresholds().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.speech.trainingcache.Config.internal_static_speech_training_cache_EkhoRuntimeParams_descriptor;
    }

    @java.lang.Override
    public com.google.speech.trainingcache.EkhoRuntimeParams getDefaultInstanceForType() {
      return com.google.speech.trainingcache.EkhoRuntimeParams.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.speech.trainingcache.EkhoRuntimeParams build() {
      com.google.speech.trainingcache.EkhoRuntimeParams result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.speech.trainingcache.EkhoRuntimeParams buildPartial() {
      com.google.speech.trainingcache.EkhoRuntimeParams result = new com.google.speech.trainingcache.EkhoRuntimeParams(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.cacheFakeHotwordEvent_ = cacheFakeHotwordEvent_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.cacheSodaEvent_ = cacheSodaEvent_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.cacheHotwordTimeout_ = cacheHotwordTimeout_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.cacheRecognition_ = cacheRecognition_;
        to_bitField0_ |= 0x00000008;
      }
      result.hotwordCachingThresholds_ = internalGetHotwordCachingThresholds();
      result.hotwordCachingThresholds_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    private int bitField0_;

    private boolean cacheFakeHotwordEvent_ ;
    /**
     * <code>optional bool cache_fake_hotword_event = 1;</code>
     * @return Whether the cacheFakeHotwordEvent field is set.
     */
    @java.lang.Override
    public boolean hasCacheFakeHotwordEvent() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool cache_fake_hotword_event = 1;</code>
     * @return The cacheFakeHotwordEvent.
     */
    @java.lang.Override
    public boolean getCacheFakeHotwordEvent() {
      return cacheFakeHotwordEvent_;
    }
    /**
     * <code>optional bool cache_fake_hotword_event = 1;</code>
     * @param value The cacheFakeHotwordEvent to set.
     * @return This builder for chaining.
     */
    public Builder setCacheFakeHotwordEvent(boolean value) {
      bitField0_ |= 0x00000001;
      cacheFakeHotwordEvent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool cache_fake_hotword_event = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCacheFakeHotwordEvent() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cacheFakeHotwordEvent_ = false;
      onChanged();
      return this;
    }

    private boolean cacheSodaEvent_ ;
    /**
     * <code>optional bool cache_soda_event = 2;</code>
     * @return Whether the cacheSodaEvent field is set.
     */
    @java.lang.Override
    public boolean hasCacheSodaEvent() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool cache_soda_event = 2;</code>
     * @return The cacheSodaEvent.
     */
    @java.lang.Override
    public boolean getCacheSodaEvent() {
      return cacheSodaEvent_;
    }
    /**
     * <code>optional bool cache_soda_event = 2;</code>
     * @param value The cacheSodaEvent to set.
     * @return This builder for chaining.
     */
    public Builder setCacheSodaEvent(boolean value) {
      bitField0_ |= 0x00000002;
      cacheSodaEvent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool cache_soda_event = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCacheSodaEvent() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cacheSodaEvent_ = false;
      onChanged();
      return this;
    }

    private boolean cacheHotwordTimeout_ ;
    /**
     * <code>optional bool cache_hotword_timeout = 3;</code>
     * @return Whether the cacheHotwordTimeout field is set.
     */
    @java.lang.Override
    public boolean hasCacheHotwordTimeout() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool cache_hotword_timeout = 3;</code>
     * @return The cacheHotwordTimeout.
     */
    @java.lang.Override
    public boolean getCacheHotwordTimeout() {
      return cacheHotwordTimeout_;
    }
    /**
     * <code>optional bool cache_hotword_timeout = 3;</code>
     * @param value The cacheHotwordTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setCacheHotwordTimeout(boolean value) {
      bitField0_ |= 0x00000004;
      cacheHotwordTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool cache_hotword_timeout = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCacheHotwordTimeout() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cacheHotwordTimeout_ = false;
      onChanged();
      return this;
    }

    private boolean cacheRecognition_ ;
    /**
     * <code>optional bool cache_recognition = 4;</code>
     * @return Whether the cacheRecognition field is set.
     */
    @java.lang.Override
    public boolean hasCacheRecognition() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool cache_recognition = 4;</code>
     * @return The cacheRecognition.
     */
    @java.lang.Override
    public boolean getCacheRecognition() {
      return cacheRecognition_;
    }
    /**
     * <code>optional bool cache_recognition = 4;</code>
     * @param value The cacheRecognition to set.
     * @return This builder for chaining.
     */
    public Builder setCacheRecognition(boolean value) {
      bitField0_ |= 0x00000008;
      cacheRecognition_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool cache_recognition = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCacheRecognition() {
      bitField0_ = (bitField0_ & ~0x00000008);
      cacheRecognition_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> hotwordCachingThresholds_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetHotwordCachingThresholds() {
      if (hotwordCachingThresholds_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HotwordCachingThresholdsDefaultEntryHolder.defaultEntry);
      }
      return hotwordCachingThresholds_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetMutableHotwordCachingThresholds() {
      onChanged();;
      if (hotwordCachingThresholds_ == null) {
        hotwordCachingThresholds_ = com.google.protobuf.MapField.newMapField(
            HotwordCachingThresholdsDefaultEntryHolder.defaultEntry);
      }
      if (!hotwordCachingThresholds_.isMutable()) {
        hotwordCachingThresholds_ = hotwordCachingThresholds_.copy();
      }
      return hotwordCachingThresholds_;
    }

    public int getHotwordCachingThresholdsCount() {
      return internalGetHotwordCachingThresholds().getMap().size();
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */

    @java.lang.Override
    public boolean containsHotwordCachingThresholds(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetHotwordCachingThresholds().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHotwordCachingThresholdsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getHotwordCachingThresholds() {
      return getHotwordCachingThresholdsMap();
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Float> getHotwordCachingThresholdsMap() {
      return internalGetHotwordCachingThresholds().getMap();
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */
    @java.lang.Override

    public float getHotwordCachingThresholdsOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetHotwordCachingThresholds().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */
    @java.lang.Override

    public float getHotwordCachingThresholdsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetHotwordCachingThresholds().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearHotwordCachingThresholds() {
      internalGetMutableHotwordCachingThresholds().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */

    public Builder removeHotwordCachingThresholds(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableHotwordCachingThresholds().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float>
    getMutableHotwordCachingThresholds() {
      return internalGetMutableHotwordCachingThresholds().getMutableMap();
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */
    public Builder putHotwordCachingThresholds(
        java.lang.String key,
        float value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      internalGetMutableHotwordCachingThresholds().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, float&gt; hotword_caching_thresholds = 5;</code>
     */

    public Builder putAllHotwordCachingThresholds(
        java.util.Map<java.lang.String, java.lang.Float> values) {
      internalGetMutableHotwordCachingThresholds().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:speech.training_cache.EkhoRuntimeParams)
  }

  // @@protoc_insertion_point(class_scope:speech.training_cache.EkhoRuntimeParams)
  private static final com.google.speech.trainingcache.EkhoRuntimeParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.speech.trainingcache.EkhoRuntimeParams();
  }

  public static com.google.speech.trainingcache.EkhoRuntimeParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EkhoRuntimeParams>
      PARSER = new com.google.protobuf.AbstractParser<EkhoRuntimeParams>() {
    @java.lang.Override
    public EkhoRuntimeParams parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(
                builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EkhoRuntimeParams> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EkhoRuntimeParams> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.speech.trainingcache.EkhoRuntimeParams getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

