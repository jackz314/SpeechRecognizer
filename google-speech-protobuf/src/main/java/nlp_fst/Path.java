// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/fst/path.proto

package nlp_fst;

public final class Path {
  private Path() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SymbolicPathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nlp_fst.SymbolicPath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 ilabel = 1;</code>
     * @return A list containing the ilabel.
     */
    java.util.List<java.lang.Long> getIlabelList();
    /**
     * <code>repeated int64 ilabel = 1;</code>
     * @return The count of ilabel.
     */
    int getIlabelCount();
    /**
     * <code>repeated int64 ilabel = 1;</code>
     * @param index The index of the element to return.
     * @return The ilabel at the given index.
     */
    long getIlabel(int index);

    /**
     * <code>repeated int64 olabel = 2;</code>
     * @return A list containing the olabel.
     */
    java.util.List<java.lang.Long> getOlabelList();
    /**
     * <code>repeated int64 olabel = 2;</code>
     * @return The count of olabel.
     */
    int getOlabelCount();
    /**
     * <code>repeated int64 olabel = 2;</code>
     * @param index The index of the element to return.
     * @return The olabel at the given index.
     */
    long getOlabel(int index);

    /**
     * <code>repeated string isymbol = 4;</code>
     * @return A list containing the isymbol.
     */
    java.util.List<java.lang.String>
        getIsymbolList();
    /**
     * <code>repeated string isymbol = 4;</code>
     * @return The count of isymbol.
     */
    int getIsymbolCount();
    /**
     * <code>repeated string isymbol = 4;</code>
     * @param index The index of the element to return.
     * @return The isymbol at the given index.
     */
    java.lang.String getIsymbol(int index);
    /**
     * <code>repeated string isymbol = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the isymbol at the given index.
     */
    com.google.protobuf.ByteString
        getIsymbolBytes(int index);

    /**
     * <code>repeated string osymbol = 5;</code>
     * @return A list containing the osymbol.
     */
    java.util.List<java.lang.String>
        getOsymbolList();
    /**
     * <code>repeated string osymbol = 5;</code>
     * @return The count of osymbol.
     */
    int getOsymbolCount();
    /**
     * <code>repeated string osymbol = 5;</code>
     * @param index The index of the element to return.
     * @return The osymbol at the given index.
     */
    java.lang.String getOsymbol(int index);
    /**
     * <code>repeated string osymbol = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the osymbol at the given index.
     */
    com.google.protobuf.ByteString
        getOsymbolBytes(int index);

    /**
     * <code>required float weight = 3;</code>
     * @return Whether the weight field is set.
     */
    boolean hasWeight();
    /**
     * <code>required float weight = 3;</code>
     * @return The weight.
     */
    float getWeight();
  }
  /**
   * Protobuf type {@code nlp_fst.SymbolicPath}
   */
  public static final class SymbolicPath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nlp_fst.SymbolicPath)
      SymbolicPathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SymbolicPath.newBuilder() to construct.
    private SymbolicPath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolicPath() {
      ilabel_ = emptyLongList();
      olabel_ = emptyLongList();
      isymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      osymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SymbolicPath();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nlp_fst.Path.internal_static_nlp_fst_SymbolicPath_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nlp_fst.Path.internal_static_nlp_fst_SymbolicPath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nlp_fst.Path.SymbolicPath.class, nlp_fst.Path.SymbolicPath.Builder.class);
    }

    private int bitField0_;
    public static final int ILABEL_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.LongList ilabel_;
    /**
     * <code>repeated int64 ilabel = 1;</code>
     * @return A list containing the ilabel.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getIlabelList() {
      return ilabel_;
    }
    /**
     * <code>repeated int64 ilabel = 1;</code>
     * @return The count of ilabel.
     */
    public int getIlabelCount() {
      return ilabel_.size();
    }
    /**
     * <code>repeated int64 ilabel = 1;</code>
     * @param index The index of the element to return.
     * @return The ilabel at the given index.
     */
    public long getIlabel(int index) {
      return ilabel_.getLong(index);
    }

    public static final int OLABEL_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.LongList olabel_;
    /**
     * <code>repeated int64 olabel = 2;</code>
     * @return A list containing the olabel.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getOlabelList() {
      return olabel_;
    }
    /**
     * <code>repeated int64 olabel = 2;</code>
     * @return The count of olabel.
     */
    public int getOlabelCount() {
      return olabel_.size();
    }
    /**
     * <code>repeated int64 olabel = 2;</code>
     * @param index The index of the element to return.
     * @return The olabel at the given index.
     */
    public long getOlabel(int index) {
      return olabel_.getLong(index);
    }

    public static final int ISYMBOL_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList isymbol_;
    /**
     * <code>repeated string isymbol = 4;</code>
     * @return A list containing the isymbol.
     */
    public com.google.protobuf.ProtocolStringList
        getIsymbolList() {
      return isymbol_;
    }
    /**
     * <code>repeated string isymbol = 4;</code>
     * @return The count of isymbol.
     */
    public int getIsymbolCount() {
      return isymbol_.size();
    }
    /**
     * <code>repeated string isymbol = 4;</code>
     * @param index The index of the element to return.
     * @return The isymbol at the given index.
     */
    public java.lang.String getIsymbol(int index) {
      return isymbol_.get(index);
    }
    /**
     * <code>repeated string isymbol = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the isymbol at the given index.
     */
    public com.google.protobuf.ByteString
        getIsymbolBytes(int index) {
      return isymbol_.getByteString(index);
    }

    public static final int OSYMBOL_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList osymbol_;
    /**
     * <code>repeated string osymbol = 5;</code>
     * @return A list containing the osymbol.
     */
    public com.google.protobuf.ProtocolStringList
        getOsymbolList() {
      return osymbol_;
    }
    /**
     * <code>repeated string osymbol = 5;</code>
     * @return The count of osymbol.
     */
    public int getOsymbolCount() {
      return osymbol_.size();
    }
    /**
     * <code>repeated string osymbol = 5;</code>
     * @param index The index of the element to return.
     * @return The osymbol at the given index.
     */
    public java.lang.String getOsymbol(int index) {
      return osymbol_.get(index);
    }
    /**
     * <code>repeated string osymbol = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the osymbol at the given index.
     */
    public com.google.protobuf.ByteString
        getOsymbolBytes(int index) {
      return osymbol_.getByteString(index);
    }

    public static final int WEIGHT_FIELD_NUMBER = 3;
    private float weight_;
    /**
     * <code>required float weight = 3;</code>
     * @return Whether the weight field is set.
     */
    @java.lang.Override
    public boolean hasWeight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required float weight = 3;</code>
     * @return The weight.
     */
    @java.lang.Override
    public float getWeight() {
      return weight_;
    }

    public static nlp_fst.Path.SymbolicPath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nlp_fst.Path.SymbolicPath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nlp_fst.Path.SymbolicPath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nlp_fst.Path.SymbolicPath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nlp_fst.SymbolicPath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nlp_fst.SymbolicPath)
        nlp_fst.Path.SymbolicPathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nlp_fst.Path.internal_static_nlp_fst_SymbolicPath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nlp_fst.Path.internal_static_nlp_fst_SymbolicPath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nlp_fst.Path.SymbolicPath.class, nlp_fst.Path.SymbolicPath.Builder.class);
      }

      // Construct using nlp_fst.Path.SymbolicPath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ilabel_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        olabel_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        isymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        osymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        weight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nlp_fst.Path.internal_static_nlp_fst_SymbolicPath_descriptor;
      }

      @java.lang.Override
      public nlp_fst.Path.SymbolicPath getDefaultInstanceForType() {
        return nlp_fst.Path.SymbolicPath.getDefaultInstance();
      }

      @java.lang.Override
      public nlp_fst.Path.SymbolicPath build() {
        nlp_fst.Path.SymbolicPath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nlp_fst.Path.SymbolicPath buildPartial() {
        nlp_fst.Path.SymbolicPath result = new nlp_fst.Path.SymbolicPath(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          ilabel_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ilabel_ = ilabel_;
        if (((bitField0_ & 0x00000002) != 0)) {
          olabel_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.olabel_ = olabel_;
        if (((bitField0_ & 0x00000004) != 0)) {
          isymbol_ = isymbol_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.isymbol_ = isymbol_;
        if (((bitField0_ & 0x00000008) != 0)) {
          osymbol_ = osymbol_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.osymbol_ = osymbol_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.weight_ = weight_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList ilabel_ = emptyLongList();
      private void ensureIlabelIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ilabel_ = mutableCopy(ilabel_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @return A list containing the ilabel.
       */
      public java.util.List<java.lang.Long>
          getIlabelList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(ilabel_) : ilabel_;
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @return The count of ilabel.
       */
      public int getIlabelCount() {
        return ilabel_.size();
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @param index The index of the element to return.
       * @return The ilabel at the given index.
       */
      public long getIlabel(int index) {
        return ilabel_.getLong(index);
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @param index The index to set the value at.
       * @param value The ilabel to set.
       * @return This builder for chaining.
       */
      public Builder setIlabel(
          int index, long value) {
        ensureIlabelIsMutable();
        ilabel_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @param value The ilabel to add.
       * @return This builder for chaining.
       */
      public Builder addIlabel(long value) {
        ensureIlabelIsMutable();
        ilabel_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @param values The ilabel to add.
       * @return This builder for chaining.
       */
      public Builder addAllIlabel(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureIlabelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ilabel_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ilabel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIlabel() {
        ilabel_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList olabel_ = emptyLongList();
      private void ensureOlabelIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          olabel_ = mutableCopy(olabel_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @return A list containing the olabel.
       */
      public java.util.List<java.lang.Long>
          getOlabelList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(olabel_) : olabel_;
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @return The count of olabel.
       */
      public int getOlabelCount() {
        return olabel_.size();
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @param index The index of the element to return.
       * @return The olabel at the given index.
       */
      public long getOlabel(int index) {
        return olabel_.getLong(index);
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @param index The index to set the value at.
       * @param value The olabel to set.
       * @return This builder for chaining.
       */
      public Builder setOlabel(
          int index, long value) {
        ensureOlabelIsMutable();
        olabel_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @param value The olabel to add.
       * @return This builder for chaining.
       */
      public Builder addOlabel(long value) {
        ensureOlabelIsMutable();
        olabel_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @param values The olabel to add.
       * @return This builder for chaining.
       */
      public Builder addAllOlabel(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureOlabelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, olabel_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 olabel = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOlabel() {
        olabel_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList isymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureIsymbolIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          isymbol_ = new com.google.protobuf.LazyStringArrayList(isymbol_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @return A list containing the isymbol.
       */
      public com.google.protobuf.ProtocolStringList
          getIsymbolList() {
        return isymbol_.getUnmodifiableView();
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @return The count of isymbol.
       */
      public int getIsymbolCount() {
        return isymbol_.size();
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @param index The index of the element to return.
       * @return The isymbol at the given index.
       */
      public java.lang.String getIsymbol(int index) {
        return isymbol_.get(index);
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the isymbol at the given index.
       */
      public com.google.protobuf.ByteString
          getIsymbolBytes(int index) {
        return isymbol_.getByteString(index);
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @param index The index to set the value at.
       * @param value The isymbol to set.
       * @return This builder for chaining.
       */
      public Builder setIsymbol(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIsymbolIsMutable();
        isymbol_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @param value The isymbol to add.
       * @return This builder for chaining.
       */
      public Builder addIsymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIsymbolIsMutable();
        isymbol_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @param values The isymbol to add.
       * @return This builder for chaining.
       */
      public Builder addAllIsymbol(
          java.lang.Iterable<java.lang.String> values) {
        ensureIsymbolIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, isymbol_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsymbol() {
        isymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string isymbol = 4;</code>
       * @param value The bytes of the isymbol to add.
       * @return This builder for chaining.
       */
      public Builder addIsymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIsymbolIsMutable();
        isymbol_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList osymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOsymbolIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          osymbol_ = new com.google.protobuf.LazyStringArrayList(osymbol_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @return A list containing the osymbol.
       */
      public com.google.protobuf.ProtocolStringList
          getOsymbolList() {
        return osymbol_.getUnmodifiableView();
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @return The count of osymbol.
       */
      public int getOsymbolCount() {
        return osymbol_.size();
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @param index The index of the element to return.
       * @return The osymbol at the given index.
       */
      public java.lang.String getOsymbol(int index) {
        return osymbol_.get(index);
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the osymbol at the given index.
       */
      public com.google.protobuf.ByteString
          getOsymbolBytes(int index) {
        return osymbol_.getByteString(index);
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @param index The index to set the value at.
       * @param value The osymbol to set.
       * @return This builder for chaining.
       */
      public Builder setOsymbol(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOsymbolIsMutable();
        osymbol_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @param value The osymbol to add.
       * @return This builder for chaining.
       */
      public Builder addOsymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOsymbolIsMutable();
        osymbol_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @param values The osymbol to add.
       * @return This builder for chaining.
       */
      public Builder addAllOsymbol(
          java.lang.Iterable<java.lang.String> values) {
        ensureOsymbolIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, osymbol_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOsymbol() {
        osymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string osymbol = 5;</code>
       * @param value The bytes of the osymbol to add.
       * @return This builder for chaining.
       */
      public Builder addOsymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOsymbolIsMutable();
        osymbol_.add(value);
        onChanged();
        return this;
      }

      private float weight_ ;
      /**
       * <code>required float weight = 3;</code>
       * @return Whether the weight field is set.
       */
      @java.lang.Override
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required float weight = 3;</code>
       * @return The weight.
       */
      @java.lang.Override
      public float getWeight() {
        return weight_;
      }
      /**
       * <code>required float weight = 3;</code>
       * @param value The weight to set.
       * @return This builder for chaining.
       */
      public Builder setWeight(float value) {
        bitField0_ |= 0x00000010;
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float weight = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        weight_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nlp_fst.SymbolicPath)
    }

    // @@protoc_insertion_point(class_scope:nlp_fst.SymbolicPath)
    private static final nlp_fst.Path.SymbolicPath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nlp_fst.Path.SymbolicPath();
    }

    public static nlp_fst.Path.SymbolicPath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SymbolicPath>
        PARSER = new com.google.protobuf.AbstractParser<SymbolicPath>() {
      @java.lang.Override
      public SymbolicPath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SymbolicPath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolicPath> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nlp_fst.Path.SymbolicPath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SymbolicPathsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nlp_fst.SymbolicPaths)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    java.util.List<nlp_fst.Path.SymbolicPath> 
        getPathList();
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    nlp_fst.Path.SymbolicPath getPath(int index);
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    int getPathCount();
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    java.util.List<? extends nlp_fst.Path.SymbolicPathOrBuilder> 
        getPathOrBuilderList();
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    nlp_fst.Path.SymbolicPathOrBuilder getPathOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nlp_fst.SymbolicPaths}
   */
  public static final class SymbolicPaths extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nlp_fst.SymbolicPaths)
      SymbolicPathsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SymbolicPaths.newBuilder() to construct.
    private SymbolicPaths(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolicPaths() {
      path_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SymbolicPaths();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nlp_fst.Path.internal_static_nlp_fst_SymbolicPaths_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nlp_fst.Path.internal_static_nlp_fst_SymbolicPaths_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nlp_fst.Path.SymbolicPaths.class, nlp_fst.Path.SymbolicPaths.Builder.class);
    }

    public static final int PATH_FIELD_NUMBER = 1;
    private java.util.List<nlp_fst.Path.SymbolicPath> path_;
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    @java.lang.Override
    public java.util.List<nlp_fst.Path.SymbolicPath> getPathList() {
      return path_;
    }
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends nlp_fst.Path.SymbolicPathOrBuilder> 
        getPathOrBuilderList() {
      return path_;
    }
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    @java.lang.Override
    public int getPathCount() {
      return path_.size();
    }
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    @java.lang.Override
    public nlp_fst.Path.SymbolicPath getPath(int index) {
      return path_.get(index);
    }
    /**
     * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
     */
    @java.lang.Override
    public nlp_fst.Path.SymbolicPathOrBuilder getPathOrBuilder(
        int index) {
      return path_.get(index);
    }

    public static nlp_fst.Path.SymbolicPaths parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPaths parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nlp_fst.Path.SymbolicPaths parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nlp_fst.Path.SymbolicPaths parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nlp_fst.Path.SymbolicPaths prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nlp_fst.SymbolicPaths}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nlp_fst.SymbolicPaths)
        nlp_fst.Path.SymbolicPathsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nlp_fst.Path.internal_static_nlp_fst_SymbolicPaths_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nlp_fst.Path.internal_static_nlp_fst_SymbolicPaths_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nlp_fst.Path.SymbolicPaths.class, nlp_fst.Path.SymbolicPaths.Builder.class);
      }

      // Construct using nlp_fst.Path.SymbolicPaths.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPathFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pathBuilder_ == null) {
          path_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pathBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nlp_fst.Path.internal_static_nlp_fst_SymbolicPaths_descriptor;
      }

      @java.lang.Override
      public nlp_fst.Path.SymbolicPaths getDefaultInstanceForType() {
        return nlp_fst.Path.SymbolicPaths.getDefaultInstance();
      }

      @java.lang.Override
      public nlp_fst.Path.SymbolicPaths build() {
        nlp_fst.Path.SymbolicPaths result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nlp_fst.Path.SymbolicPaths buildPartial() {
        nlp_fst.Path.SymbolicPaths result = new nlp_fst.Path.SymbolicPaths(this);
        int from_bitField0_ = bitField0_;
        if (pathBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            path_ = java.util.Collections.unmodifiableList(path_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.path_ = path_;
        } else {
          result.path_ = pathBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private java.util.List<nlp_fst.Path.SymbolicPath> path_ =
        java.util.Collections.emptyList();
      private void ensurePathIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          path_ = new java.util.ArrayList<nlp_fst.Path.SymbolicPath>(path_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nlp_fst.Path.SymbolicPath, nlp_fst.Path.SymbolicPath.Builder, nlp_fst.Path.SymbolicPathOrBuilder> pathBuilder_;

      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public java.util.List<nlp_fst.Path.SymbolicPath> getPathList() {
        if (pathBuilder_ == null) {
          return java.util.Collections.unmodifiableList(path_);
        } else {
          return pathBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public int getPathCount() {
        if (pathBuilder_ == null) {
          return path_.size();
        } else {
          return pathBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public nlp_fst.Path.SymbolicPath getPath(int index) {
        if (pathBuilder_ == null) {
          return path_.get(index);
        } else {
          return pathBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder setPath(
          int index, nlp_fst.Path.SymbolicPath value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.set(index, value);
          onChanged();
        } else {
          pathBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder setPath(
          int index, nlp_fst.Path.SymbolicPath.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.set(index, builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder addPath(nlp_fst.Path.SymbolicPath value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.add(value);
          onChanged();
        } else {
          pathBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder addPath(
          int index, nlp_fst.Path.SymbolicPath value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.add(index, value);
          onChanged();
        } else {
          pathBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder addPath(
          nlp_fst.Path.SymbolicPath.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.add(builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder addPath(
          int index, nlp_fst.Path.SymbolicPath.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.add(index, builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder addAllPath(
          java.lang.Iterable<? extends nlp_fst.Path.SymbolicPath> values) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, path_);
          onChanged();
        } else {
          pathBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder clearPath() {
        if (pathBuilder_ == null) {
          path_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pathBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public Builder removePath(int index) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.remove(index);
          onChanged();
        } else {
          pathBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public nlp_fst.Path.SymbolicPath.Builder getPathBuilder(
          int index) {
        return getPathFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public nlp_fst.Path.SymbolicPathOrBuilder getPathOrBuilder(
          int index) {
        if (pathBuilder_ == null) {
          return path_.get(index);  } else {
          return pathBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public java.util.List<? extends nlp_fst.Path.SymbolicPathOrBuilder> 
           getPathOrBuilderList() {
        if (pathBuilder_ != null) {
          return pathBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(path_);
        }
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public nlp_fst.Path.SymbolicPath.Builder addPathBuilder() {
        return getPathFieldBuilder().addBuilder(
            nlp_fst.Path.SymbolicPath.getDefaultInstance());
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public nlp_fst.Path.SymbolicPath.Builder addPathBuilder(
          int index) {
        return getPathFieldBuilder().addBuilder(
            index, nlp_fst.Path.SymbolicPath.getDefaultInstance());
      }
      /**
       * <code>repeated .nlp_fst.SymbolicPath path = 1;</code>
       */
      public java.util.List<nlp_fst.Path.SymbolicPath.Builder> 
           getPathBuilderList() {
        return getPathFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nlp_fst.Path.SymbolicPath, nlp_fst.Path.SymbolicPath.Builder, nlp_fst.Path.SymbolicPathOrBuilder> 
          getPathFieldBuilder() {
        if (pathBuilder_ == null) {
          pathBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nlp_fst.Path.SymbolicPath, nlp_fst.Path.SymbolicPath.Builder, nlp_fst.Path.SymbolicPathOrBuilder>(
                  path_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          path_ = null;
        }
        return pathBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:nlp_fst.SymbolicPaths)
    }

    // @@protoc_insertion_point(class_scope:nlp_fst.SymbolicPaths)
    private static final nlp_fst.Path.SymbolicPaths DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nlp_fst.Path.SymbolicPaths();
    }

    public static nlp_fst.Path.SymbolicPaths getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SymbolicPaths>
        PARSER = new com.google.protobuf.AbstractParser<SymbolicPaths>() {
      @java.lang.Override
      public SymbolicPaths parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SymbolicPaths> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolicPaths> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nlp_fst.Path.SymbolicPaths getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nlp_fst_SymbolicPath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nlp_fst_SymbolicPath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nlp_fst_SymbolicPaths_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nlp_fst_SymbolicPaths_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025speech/fst/path.proto\022\007nlp_fst\"`\n\014Symb" +
      "olicPath\022\016\n\006ilabel\030\001 \003(\003\022\016\n\006olabel\030\002 \003(\003" +
      "\022\017\n\007isymbol\030\004 \003(\t\022\017\n\007osymbol\030\005 \003(\t\022\016\n\006we" +
      "ight\030\003 \002(\002\"4\n\rSymbolicPaths\022#\n\004path\030\001 \003(" +
      "\0132\025.nlp_fst.SymbolicPathB\002H\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_nlp_fst_SymbolicPath_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_nlp_fst_SymbolicPath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nlp_fst_SymbolicPath_descriptor,
        new java.lang.String[] { "Ilabel", "Olabel", "Isymbol", "Osymbol", "Weight", });
    internal_static_nlp_fst_SymbolicPaths_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_nlp_fst_SymbolicPaths_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nlp_fst_SymbolicPaths_descriptor,
        new java.lang.String[] { "Path", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
