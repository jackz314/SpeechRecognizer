// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/s2p/speech_semantic_parsing.proto

package speech.s2p;

public final class SpeechSemanticParsingOuterClass {
  private SpeechSemanticParsingOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.messageSetExtension);
    registry.add(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.utteranceSemanticInfoExt);
    registry.add(speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.utteranceSemanticInfoExt);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SpeechSemanticParsingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speech.s2p.SpeechSemanticParsing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string canonical_input = 1;</code>
     * @return Whether the canonicalInput field is set.
     */
    boolean hasCanonicalInput();
    /**
     * <code>optional string canonical_input = 1;</code>
     * @return The canonicalInput.
     */
    java.lang.String getCanonicalInput();
    /**
     * <code>optional string canonical_input = 1;</code>
     * @return The bytes for canonicalInput.
     */
    com.google.protobuf.ByteString
        getCanonicalInputBytes();

    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult> 
        getParseResultsList();
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult getParseResults(int index);
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    int getParseResultsCount();
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder> 
        getParseResultsOrBuilderList();
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder getParseResultsOrBuilder(
        int index);

    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult> 
        getAquaNnResultList();
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult getAquaNnResult(int index);
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    int getAquaNnResultCount();
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder> 
        getAquaNnResultOrBuilderList();
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder getAquaNnResultOrBuilder(
        int index);

    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
     * @return Whether the truthSemanticInfo field is set.
     */
    boolean hasTruthSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
     * @return The truthSemanticInfo.
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getTruthSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getTruthSemanticInfoOrBuilder();

    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
     * @return Whether the hypSemanticInfo field is set.
     */
    boolean hasHypSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
     * @return The hypSemanticInfo.
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getHypSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getHypSemanticInfoOrBuilder();

    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
     * @return Whether the prodSemanticInfo field is set.
     */
    boolean hasProdSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
     * @return The prodSemanticInfo.
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getProdSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getProdSemanticInfoOrBuilder();

    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
     * @return Whether the logSemanticInfo field is set.
     */
    boolean hasLogSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
     * @return The logSemanticInfo.
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getLogSemanticInfo();
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getLogSemanticInfoOrBuilder();
  }
  /**
   * Protobuf type {@code speech.s2p.SpeechSemanticParsing}
   */
  public static final class SpeechSemanticParsing extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speech.s2p.SpeechSemanticParsing)
      SpeechSemanticParsingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SpeechSemanticParsing.newBuilder() to construct.
    private SpeechSemanticParsing(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeechSemanticParsing() {
      canonicalInput_ = "";
      parseResults_ = java.util.Collections.emptyList();
      aquaNnResult_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SpeechSemanticParsing();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.Builder.class);
    }

    public interface StrippedParseResultOrBuilder extends
        // @@protoc_insertion_point(interface_extends:speech.s2p.SpeechSemanticParsing.StrippedParseResult)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent> 
          getMappedIntentsList();
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent getMappedIntents(int index);
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      int getMappedIntentsCount();
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder> 
          getMappedIntentsOrBuilderList();
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder getMappedIntentsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code speech.s2p.SpeechSemanticParsing.StrippedParseResult}
     */
    public static final class StrippedParseResult extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:speech.s2p.SpeechSemanticParsing.StrippedParseResult)
        StrippedParseResultOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use StrippedParseResult.newBuilder() to construct.
      private StrippedParseResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StrippedParseResult() {
        mappedIntents_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new StrippedParseResult();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder.class);
      }

      public interface MappedIntentOrBuilder extends
          // @@protoc_insertion_point(interface_extends:speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string intent = 2;</code>
         * @return Whether the intent field is set.
         */
        boolean hasIntent();
        /**
         * <code>optional string intent = 2;</code>
         * @return The intent.
         */
        java.lang.String getIntent();
        /**
         * <code>optional string intent = 2;</code>
         * @return The bytes for intent.
         */
        com.google.protobuf.ByteString
            getIntentBytes();
      }
      /**
       * Protobuf type {@code speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent}
       */
      public static final class MappedIntent extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent)
          MappedIntentOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MappedIntent.newBuilder() to construct.
        private MappedIntent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MappedIntent() {
          intent_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new MappedIntent();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder.class);
        }

        private int bitField0_;
        public static final int INTENT_FIELD_NUMBER = 2;
        private volatile java.lang.Object intent_;
        /**
         * <code>optional string intent = 2;</code>
         * @return Whether the intent field is set.
         */
        @java.lang.Override
        public boolean hasIntent() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string intent = 2;</code>
         * @return The intent.
         */
        @java.lang.Override
        public java.lang.String getIntent() {
          java.lang.Object ref = intent_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              intent_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string intent = 2;</code>
         * @return The bytes for intent.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getIntentBytes() {
          java.lang.Object ref = intent_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            intent_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent)
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder.class);
          }

          // Construct using speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            intent_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_descriptor;
          }

          @java.lang.Override
          public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent getDefaultInstanceForType() {
            return speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.getDefaultInstance();
          }

          @java.lang.Override
          public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent build() {
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent buildPartial() {
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent result = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.intent_ = intent_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          private int bitField0_;

          private java.lang.Object intent_ = "";
          /**
           * <code>optional string intent = 2;</code>
           * @return Whether the intent field is set.
           */
          public boolean hasIntent() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional string intent = 2;</code>
           * @return The intent.
           */
          public java.lang.String getIntent() {
            java.lang.Object ref = intent_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                intent_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string intent = 2;</code>
           * @return The bytes for intent.
           */
          public com.google.protobuf.ByteString
              getIntentBytes() {
            java.lang.Object ref = intent_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              intent_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string intent = 2;</code>
           * @param value The intent to set.
           * @return This builder for chaining.
           */
          public Builder setIntent(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            intent_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string intent = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearIntent() {
            bitField0_ = (bitField0_ & ~0x00000001);
            intent_ = getDefaultInstance().getIntent();
            onChanged();
            return this;
          }
          /**
           * <code>optional string intent = 2;</code>
           * @param value The bytes for intent to set.
           * @return This builder for chaining.
           */
          public Builder setIntentBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            intent_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent)
        }

        // @@protoc_insertion_point(class_scope:speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent)
        private static final speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent();
        }

        public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<MappedIntent>
            PARSER = new com.google.protobuf.AbstractParser<MappedIntent>() {
          @java.lang.Override
          public MappedIntent parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(
                      builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<MappedIntent> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MappedIntent> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int MAPPED_INTENTS_FIELD_NUMBER = 3;
      private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent> mappedIntents_;
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      @java.lang.Override
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent> getMappedIntentsList() {
        return mappedIntents_;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder> 
          getMappedIntentsOrBuilderList() {
        return mappedIntents_;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      @java.lang.Override
      public int getMappedIntentsCount() {
        return mappedIntents_.size();
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent getMappedIntents(int index) {
        return mappedIntents_.get(index);
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
       */
      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder getMappedIntentsOrBuilder(
          int index) {
        return mappedIntents_.get(index);
      }

      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code speech.s2p.SpeechSemanticParsing.StrippedParseResult}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:speech.s2p.SpeechSemanticParsing.StrippedParseResult)
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder.class);
        }

        // Construct using speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getMappedIntentsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (mappedIntentsBuilder_ == null) {
            mappedIntents_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            mappedIntentsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor;
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult getDefaultInstanceForType() {
          return speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.getDefaultInstance();
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult build() {
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult buildPartial() {
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult result = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult(this);
          int from_bitField0_ = bitField0_;
          if (mappedIntentsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              mappedIntents_ = java.util.Collections.unmodifiableList(mappedIntents_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.mappedIntents_ = mappedIntents_;
          } else {
            result.mappedIntents_ = mappedIntentsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        private int bitField0_;

        private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent> mappedIntents_ =
          java.util.Collections.emptyList();
        private void ensureMappedIntentsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            mappedIntents_ = new java.util.ArrayList<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent>(mappedIntents_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder> mappedIntentsBuilder_;

        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent> getMappedIntentsList() {
          if (mappedIntentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(mappedIntents_);
          } else {
            return mappedIntentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public int getMappedIntentsCount() {
          if (mappedIntentsBuilder_ == null) {
            return mappedIntents_.size();
          } else {
            return mappedIntentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent getMappedIntents(int index) {
          if (mappedIntentsBuilder_ == null) {
            return mappedIntents_.get(index);
          } else {
            return mappedIntentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder setMappedIntents(
            int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent value) {
          if (mappedIntentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMappedIntentsIsMutable();
            mappedIntents_.set(index, value);
            onChanged();
          } else {
            mappedIntentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder setMappedIntents(
            int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder builderForValue) {
          if (mappedIntentsBuilder_ == null) {
            ensureMappedIntentsIsMutable();
            mappedIntents_.set(index, builderForValue.build());
            onChanged();
          } else {
            mappedIntentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder addMappedIntents(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent value) {
          if (mappedIntentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMappedIntentsIsMutable();
            mappedIntents_.add(value);
            onChanged();
          } else {
            mappedIntentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder addMappedIntents(
            int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent value) {
          if (mappedIntentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMappedIntentsIsMutable();
            mappedIntents_.add(index, value);
            onChanged();
          } else {
            mappedIntentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder addMappedIntents(
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder builderForValue) {
          if (mappedIntentsBuilder_ == null) {
            ensureMappedIntentsIsMutable();
            mappedIntents_.add(builderForValue.build());
            onChanged();
          } else {
            mappedIntentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder addMappedIntents(
            int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder builderForValue) {
          if (mappedIntentsBuilder_ == null) {
            ensureMappedIntentsIsMutable();
            mappedIntents_.add(index, builderForValue.build());
            onChanged();
          } else {
            mappedIntentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder addAllMappedIntents(
            java.lang.Iterable<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent> values) {
          if (mappedIntentsBuilder_ == null) {
            ensureMappedIntentsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mappedIntents_);
            onChanged();
          } else {
            mappedIntentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder clearMappedIntents() {
          if (mappedIntentsBuilder_ == null) {
            mappedIntents_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            mappedIntentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public Builder removeMappedIntents(int index) {
          if (mappedIntentsBuilder_ == null) {
            ensureMappedIntentsIsMutable();
            mappedIntents_.remove(index);
            onChanged();
          } else {
            mappedIntentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder getMappedIntentsBuilder(
            int index) {
          return getMappedIntentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder getMappedIntentsOrBuilder(
            int index) {
          if (mappedIntentsBuilder_ == null) {
            return mappedIntents_.get(index);  } else {
            return mappedIntentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder> 
             getMappedIntentsOrBuilderList() {
          if (mappedIntentsBuilder_ != null) {
            return mappedIntentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(mappedIntents_);
          }
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder addMappedIntentsBuilder() {
          return getMappedIntentsFieldBuilder().addBuilder(
              speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.getDefaultInstance());
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder addMappedIntentsBuilder(
            int index) {
          return getMappedIntentsFieldBuilder().addBuilder(
              index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.getDefaultInstance());
        }
        /**
         * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult.MappedIntent mapped_intents = 3;</code>
         */
        public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder> 
             getMappedIntentsBuilderList() {
          return getMappedIntentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder> 
            getMappedIntentsFieldBuilder() {
          if (mappedIntentsBuilder_ == null) {
            mappedIntentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntent.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.MappedIntentOrBuilder>(
                    mappedIntents_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            mappedIntents_ = null;
          }
          return mappedIntentsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:speech.s2p.SpeechSemanticParsing.StrippedParseResult)
      }

      // @@protoc_insertion_point(class_scope:speech.s2p.SpeechSemanticParsing.StrippedParseResult)
      private static final speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult();
      }

      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<StrippedParseResult>
          PARSER = new com.google.protobuf.AbstractParser<StrippedParseResult>() {
        @java.lang.Override
        public StrippedParseResult parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(
                    builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<StrippedParseResult> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StrippedParseResult> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AquaNnResultOrBuilder extends
        // @@protoc_insertion_point(interface_extends:speech.s2p.SpeechSemanticParsing.AquaNnResult)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string model_path = 1;</code>
       * @return Whether the modelPath field is set.
       */
      boolean hasModelPath();
      /**
       * <code>optional string model_path = 1;</code>
       * @return The modelPath.
       */
      java.lang.String getModelPath();
      /**
       * <code>optional string model_path = 1;</code>
       * @return The bytes for modelPath.
       */
      com.google.protobuf.ByteString
          getModelPathBytes();

      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> 
          getSemanticInfoList();
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      speech.s2p.SemanticInfoOuterClass.SemanticInfo getSemanticInfo(int index);
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      int getSemanticInfoCount();
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      java.util.List<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
          getSemanticInfoOrBuilderList();
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder getSemanticInfoOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code speech.s2p.SpeechSemanticParsing.AquaNnResult}
     */
    public static final class AquaNnResult extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:speech.s2p.SpeechSemanticParsing.AquaNnResult)
        AquaNnResultOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AquaNnResult.newBuilder() to construct.
      private AquaNnResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AquaNnResult() {
        modelPath_ = "";
        semanticInfo_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AquaNnResult();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder.class);
      }

      private int bitField0_;
      public static final int MODEL_PATH_FIELD_NUMBER = 1;
      private volatile java.lang.Object modelPath_;
      /**
       * <code>optional string model_path = 1;</code>
       * @return Whether the modelPath field is set.
       */
      @java.lang.Override
      public boolean hasModelPath() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string model_path = 1;</code>
       * @return The modelPath.
       */
      @java.lang.Override
      public java.lang.String getModelPath() {
        java.lang.Object ref = modelPath_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            modelPath_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string model_path = 1;</code>
       * @return The bytes for modelPath.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getModelPathBytes() {
        java.lang.Object ref = modelPath_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SEMANTIC_INFO_FIELD_NUMBER = 3;
      private java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> semanticInfo_;
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      @java.lang.Override
      public java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> getSemanticInfoList() {
        return semanticInfo_;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
          getSemanticInfoOrBuilderList() {
        return semanticInfo_;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      @java.lang.Override
      public int getSemanticInfoCount() {
        return semanticInfo_.size();
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      @java.lang.Override
      public speech.s2p.SemanticInfoOuterClass.SemanticInfo getSemanticInfo(int index) {
        return semanticInfo_.get(index);
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
       */
      @java.lang.Override
      public speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder getSemanticInfoOrBuilder(
          int index) {
        return semanticInfo_.get(index);
      }

      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code speech.s2p.SpeechSemanticParsing.AquaNnResult}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:speech.s2p.SpeechSemanticParsing.AquaNnResult)
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder.class);
        }

        // Construct using speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSemanticInfoFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          modelPath_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (semanticInfoBuilder_ == null) {
            semanticInfo_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            semanticInfoBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_descriptor;
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult getDefaultInstanceForType() {
          return speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.getDefaultInstance();
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult build() {
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult buildPartial() {
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult result = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.modelPath_ = modelPath_;
          if (semanticInfoBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              semanticInfo_ = java.util.Collections.unmodifiableList(semanticInfo_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.semanticInfo_ = semanticInfo_;
          } else {
            result.semanticInfo_ = semanticInfoBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        private int bitField0_;

        private java.lang.Object modelPath_ = "";
        /**
         * <code>optional string model_path = 1;</code>
         * @return Whether the modelPath field is set.
         */
        public boolean hasModelPath() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string model_path = 1;</code>
         * @return The modelPath.
         */
        public java.lang.String getModelPath() {
          java.lang.Object ref = modelPath_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              modelPath_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string model_path = 1;</code>
         * @return The bytes for modelPath.
         */
        public com.google.protobuf.ByteString
            getModelPathBytes() {
          java.lang.Object ref = modelPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            modelPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string model_path = 1;</code>
         * @param value The modelPath to set.
         * @return This builder for chaining.
         */
        public Builder setModelPath(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          modelPath_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string model_path = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearModelPath() {
          bitField0_ = (bitField0_ & ~0x00000001);
          modelPath_ = getDefaultInstance().getModelPath();
          onChanged();
          return this;
        }
        /**
         * <code>optional string model_path = 1;</code>
         * @param value The bytes for modelPath to set.
         * @return This builder for chaining.
         */
        public Builder setModelPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          modelPath_ = value;
          onChanged();
          return this;
        }

        private java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> semanticInfo_ =
          java.util.Collections.emptyList();
        private void ensureSemanticInfoIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            semanticInfo_ = new java.util.ArrayList<speech.s2p.SemanticInfoOuterClass.SemanticInfo>(semanticInfo_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            speech.s2p.SemanticInfoOuterClass.SemanticInfo, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder, speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> semanticInfoBuilder_;

        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> getSemanticInfoList() {
          if (semanticInfoBuilder_ == null) {
            return java.util.Collections.unmodifiableList(semanticInfo_);
          } else {
            return semanticInfoBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public int getSemanticInfoCount() {
          if (semanticInfoBuilder_ == null) {
            return semanticInfo_.size();
          } else {
            return semanticInfoBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public speech.s2p.SemanticInfoOuterClass.SemanticInfo getSemanticInfo(int index) {
          if (semanticInfoBuilder_ == null) {
            return semanticInfo_.get(index);
          } else {
            return semanticInfoBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder setSemanticInfo(
            int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo value) {
          if (semanticInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSemanticInfoIsMutable();
            semanticInfo_.set(index, value);
            onChanged();
          } else {
            semanticInfoBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder setSemanticInfo(
            int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder builderForValue) {
          if (semanticInfoBuilder_ == null) {
            ensureSemanticInfoIsMutable();
            semanticInfo_.set(index, builderForValue.build());
            onChanged();
          } else {
            semanticInfoBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder addSemanticInfo(speech.s2p.SemanticInfoOuterClass.SemanticInfo value) {
          if (semanticInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSemanticInfoIsMutable();
            semanticInfo_.add(value);
            onChanged();
          } else {
            semanticInfoBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder addSemanticInfo(
            int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo value) {
          if (semanticInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSemanticInfoIsMutable();
            semanticInfo_.add(index, value);
            onChanged();
          } else {
            semanticInfoBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder addSemanticInfo(
            speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder builderForValue) {
          if (semanticInfoBuilder_ == null) {
            ensureSemanticInfoIsMutable();
            semanticInfo_.add(builderForValue.build());
            onChanged();
          } else {
            semanticInfoBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder addSemanticInfo(
            int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder builderForValue) {
          if (semanticInfoBuilder_ == null) {
            ensureSemanticInfoIsMutable();
            semanticInfo_.add(index, builderForValue.build());
            onChanged();
          } else {
            semanticInfoBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder addAllSemanticInfo(
            java.lang.Iterable<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfo> values) {
          if (semanticInfoBuilder_ == null) {
            ensureSemanticInfoIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, semanticInfo_);
            onChanged();
          } else {
            semanticInfoBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder clearSemanticInfo() {
          if (semanticInfoBuilder_ == null) {
            semanticInfo_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            semanticInfoBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public Builder removeSemanticInfo(int index) {
          if (semanticInfoBuilder_ == null) {
            ensureSemanticInfoIsMutable();
            semanticInfo_.remove(index);
            onChanged();
          } else {
            semanticInfoBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder getSemanticInfoBuilder(
            int index) {
          return getSemanticInfoFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder getSemanticInfoOrBuilder(
            int index) {
          if (semanticInfoBuilder_ == null) {
            return semanticInfo_.get(index);  } else {
            return semanticInfoBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public java.util.List<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
             getSemanticInfoOrBuilderList() {
          if (semanticInfoBuilder_ != null) {
            return semanticInfoBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(semanticInfo_);
          }
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder addSemanticInfoBuilder() {
          return getSemanticInfoFieldBuilder().addBuilder(
              speech.s2p.SemanticInfoOuterClass.SemanticInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder addSemanticInfoBuilder(
            int index) {
          return getSemanticInfoFieldBuilder().addBuilder(
              index, speech.s2p.SemanticInfoOuterClass.SemanticInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .speech.s2p.SemanticInfo semantic_info = 3;</code>
         */
        public java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder> 
             getSemanticInfoBuilderList() {
          return getSemanticInfoFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            speech.s2p.SemanticInfoOuterClass.SemanticInfo, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder, speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
            getSemanticInfoFieldBuilder() {
          if (semanticInfoBuilder_ == null) {
            semanticInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                speech.s2p.SemanticInfoOuterClass.SemanticInfo, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder, speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder>(
                    semanticInfo_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            semanticInfo_ = null;
          }
          return semanticInfoBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:speech.s2p.SpeechSemanticParsing.AquaNnResult)
      }

      // @@protoc_insertion_point(class_scope:speech.s2p.SpeechSemanticParsing.AquaNnResult)
      private static final speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult();
      }

      public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AquaNnResult>
          PARSER = new com.google.protobuf.AbstractParser<AquaNnResult>() {
        @java.lang.Override
        public AquaNnResult parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(
                    builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<AquaNnResult> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AquaNnResult> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int CANONICAL_INPUT_FIELD_NUMBER = 1;
    private volatile java.lang.Object canonicalInput_;
    /**
     * <code>optional string canonical_input = 1;</code>
     * @return Whether the canonicalInput field is set.
     */
    @java.lang.Override
    public boolean hasCanonicalInput() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string canonical_input = 1;</code>
     * @return The canonicalInput.
     */
    @java.lang.Override
    public java.lang.String getCanonicalInput() {
      java.lang.Object ref = canonicalInput_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          canonicalInput_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string canonical_input = 1;</code>
     * @return The bytes for canonicalInput.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCanonicalInputBytes() {
      java.lang.Object ref = canonicalInput_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        canonicalInput_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARSE_RESULTS_FIELD_NUMBER = 2;
    private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult> parseResults_;
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    @java.lang.Override
    public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult> getParseResultsList() {
      return parseResults_;
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder> 
        getParseResultsOrBuilderList() {
      return parseResults_;
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    @java.lang.Override
    public int getParseResultsCount() {
      return parseResults_.size();
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult getParseResults(int index) {
      return parseResults_.get(index);
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder getParseResultsOrBuilder(
        int index) {
      return parseResults_.get(index);
    }

    public static final int AQUA_NN_RESULT_FIELD_NUMBER = 4;
    private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult> aquaNnResult_;
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    @java.lang.Override
    public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult> getAquaNnResultList() {
      return aquaNnResult_;
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder> 
        getAquaNnResultOrBuilderList() {
      return aquaNnResult_;
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    @java.lang.Override
    public int getAquaNnResultCount() {
      return aquaNnResult_.size();
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult getAquaNnResult(int index) {
      return aquaNnResult_.get(index);
    }
    /**
     * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder getAquaNnResultOrBuilder(
        int index) {
      return aquaNnResult_.get(index);
    }

    public static final int TRUTH_SEMANTIC_INFO_FIELD_NUMBER = 5;
    private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo truthSemanticInfo_;
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
     * @return Whether the truthSemanticInfo field is set.
     */
    @java.lang.Override
    public boolean hasTruthSemanticInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
     * @return The truthSemanticInfo.
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getTruthSemanticInfo() {
      return truthSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : truthSemanticInfo_;
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getTruthSemanticInfoOrBuilder() {
      return truthSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : truthSemanticInfo_;
    }

    public static final int HYP_SEMANTIC_INFO_FIELD_NUMBER = 6;
    private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo hypSemanticInfo_;
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
     * @return Whether the hypSemanticInfo field is set.
     */
    @java.lang.Override
    public boolean hasHypSemanticInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
     * @return The hypSemanticInfo.
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getHypSemanticInfo() {
      return hypSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : hypSemanticInfo_;
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getHypSemanticInfoOrBuilder() {
      return hypSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : hypSemanticInfo_;
    }

    public static final int PROD_SEMANTIC_INFO_FIELD_NUMBER = 7;
    private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo prodSemanticInfo_;
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
     * @return Whether the prodSemanticInfo field is set.
     */
    @java.lang.Override
    public boolean hasProdSemanticInfo() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
     * @return The prodSemanticInfo.
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getProdSemanticInfo() {
      return prodSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : prodSemanticInfo_;
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getProdSemanticInfoOrBuilder() {
      return prodSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : prodSemanticInfo_;
    }

    public static final int LOG_SEMANTIC_INFO_FIELD_NUMBER = 8;
    private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo logSemanticInfo_;
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
     * @return Whether the logSemanticInfo field is set.
     */
    @java.lang.Override
    public boolean hasLogSemanticInfo() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
     * @return The logSemanticInfo.
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getLogSemanticInfo() {
      return logSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : logSemanticInfo_;
    }
    /**
     * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getLogSemanticInfoOrBuilder() {
      return logSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : logSemanticInfo_;
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speech.s2p.SpeechSemanticParsing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speech.s2p.SpeechSemanticParsing)
        speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.class, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.Builder.class);
      }

      // Construct using speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParseResultsFieldBuilder();
          getAquaNnResultFieldBuilder();
          getTruthSemanticInfoFieldBuilder();
          getHypSemanticInfoFieldBuilder();
          getProdSemanticInfoFieldBuilder();
          getLogSemanticInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        canonicalInput_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (parseResultsBuilder_ == null) {
          parseResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          parseResultsBuilder_.clear();
        }
        if (aquaNnResultBuilder_ == null) {
          aquaNnResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          aquaNnResultBuilder_.clear();
        }
        if (truthSemanticInfoBuilder_ == null) {
          truthSemanticInfo_ = null;
        } else {
          truthSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (hypSemanticInfoBuilder_ == null) {
          hypSemanticInfo_ = null;
        } else {
          hypSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (prodSemanticInfoBuilder_ == null) {
          prodSemanticInfo_ = null;
        } else {
          prodSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (logSemanticInfoBuilder_ == null) {
          logSemanticInfo_ = null;
        } else {
          logSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_SpeechSemanticParsing_descriptor;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing getDefaultInstanceForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.getDefaultInstance();
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing build() {
        speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing buildPartial() {
        speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing result = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.canonicalInput_ = canonicalInput_;
        if (parseResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            parseResults_ = java.util.Collections.unmodifiableList(parseResults_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.parseResults_ = parseResults_;
        } else {
          result.parseResults_ = parseResultsBuilder_.build();
        }
        if (aquaNnResultBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            aquaNnResult_ = java.util.Collections.unmodifiableList(aquaNnResult_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.aquaNnResult_ = aquaNnResult_;
        } else {
          result.aquaNnResult_ = aquaNnResultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (truthSemanticInfoBuilder_ == null) {
            result.truthSemanticInfo_ = truthSemanticInfo_;
          } else {
            result.truthSemanticInfo_ = truthSemanticInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (hypSemanticInfoBuilder_ == null) {
            result.hypSemanticInfo_ = hypSemanticInfo_;
          } else {
            result.hypSemanticInfo_ = hypSemanticInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (prodSemanticInfoBuilder_ == null) {
            result.prodSemanticInfo_ = prodSemanticInfo_;
          } else {
            result.prodSemanticInfo_ = prodSemanticInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          if (logSemanticInfoBuilder_ == null) {
            result.logSemanticInfo_ = logSemanticInfo_;
          } else {
            result.logSemanticInfo_ = logSemanticInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private java.lang.Object canonicalInput_ = "";
      /**
       * <code>optional string canonical_input = 1;</code>
       * @return Whether the canonicalInput field is set.
       */
      public boolean hasCanonicalInput() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string canonical_input = 1;</code>
       * @return The canonicalInput.
       */
      public java.lang.String getCanonicalInput() {
        java.lang.Object ref = canonicalInput_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            canonicalInput_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string canonical_input = 1;</code>
       * @return The bytes for canonicalInput.
       */
      public com.google.protobuf.ByteString
          getCanonicalInputBytes() {
        java.lang.Object ref = canonicalInput_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          canonicalInput_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string canonical_input = 1;</code>
       * @param value The canonicalInput to set.
       * @return This builder for chaining.
       */
      public Builder setCanonicalInput(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        canonicalInput_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string canonical_input = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCanonicalInput() {
        bitField0_ = (bitField0_ & ~0x00000001);
        canonicalInput_ = getDefaultInstance().getCanonicalInput();
        onChanged();
        return this;
      }
      /**
       * <code>optional string canonical_input = 1;</code>
       * @param value The bytes for canonicalInput to set.
       * @return This builder for chaining.
       */
      public Builder setCanonicalInputBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        canonicalInput_ = value;
        onChanged();
        return this;
      }

      private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult> parseResults_ =
        java.util.Collections.emptyList();
      private void ensureParseResultsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          parseResults_ = new java.util.ArrayList<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult>(parseResults_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder> parseResultsBuilder_;

      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult> getParseResultsList() {
        if (parseResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parseResults_);
        } else {
          return parseResultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public int getParseResultsCount() {
        if (parseResultsBuilder_ == null) {
          return parseResults_.size();
        } else {
          return parseResultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult getParseResults(int index) {
        if (parseResultsBuilder_ == null) {
          return parseResults_.get(index);
        } else {
          return parseResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder setParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult value) {
        if (parseResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParseResultsIsMutable();
          parseResults_.set(index, value);
          onChanged();
        } else {
          parseResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder setParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder builderForValue) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          parseResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder addParseResults(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult value) {
        if (parseResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParseResultsIsMutable();
          parseResults_.add(value);
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder addParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult value) {
        if (parseResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParseResultsIsMutable();
          parseResults_.add(index, value);
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder addParseResults(
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder builderForValue) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.add(builderForValue.build());
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder addParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder builderForValue) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder addAllParseResults(
          java.lang.Iterable<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult> values) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parseResults_);
          onChanged();
        } else {
          parseResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder clearParseResults() {
        if (parseResultsBuilder_ == null) {
          parseResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          parseResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public Builder removeParseResults(int index) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.remove(index);
          onChanged();
        } else {
          parseResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder getParseResultsBuilder(
          int index) {
        return getParseResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder getParseResultsOrBuilder(
          int index) {
        if (parseResultsBuilder_ == null) {
          return parseResults_.get(index);  } else {
          return parseResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder> 
           getParseResultsOrBuilderList() {
        if (parseResultsBuilder_ != null) {
          return parseResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parseResults_);
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder addParseResultsBuilder() {
        return getParseResultsFieldBuilder().addBuilder(
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder addParseResultsBuilder(
          int index) {
        return getParseResultsFieldBuilder().addBuilder(
            index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.StrippedParseResult parse_results = 2;</code>
       */
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder> 
           getParseResultsBuilderList() {
        return getParseResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder> 
          getParseResultsFieldBuilder() {
        if (parseResultsBuilder_ == null) {
          parseResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.StrippedParseResultOrBuilder>(
                  parseResults_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          parseResults_ = null;
        }
        return parseResultsBuilder_;
      }

      private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult> aquaNnResult_ =
        java.util.Collections.emptyList();
      private void ensureAquaNnResultIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          aquaNnResult_ = new java.util.ArrayList<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult>(aquaNnResult_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder> aquaNnResultBuilder_;

      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult> getAquaNnResultList() {
        if (aquaNnResultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(aquaNnResult_);
        } else {
          return aquaNnResultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public int getAquaNnResultCount() {
        if (aquaNnResultBuilder_ == null) {
          return aquaNnResult_.size();
        } else {
          return aquaNnResultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult getAquaNnResult(int index) {
        if (aquaNnResultBuilder_ == null) {
          return aquaNnResult_.get(index);
        } else {
          return aquaNnResultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder setAquaNnResult(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult value) {
        if (aquaNnResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAquaNnResultIsMutable();
          aquaNnResult_.set(index, value);
          onChanged();
        } else {
          aquaNnResultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder setAquaNnResult(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder builderForValue) {
        if (aquaNnResultBuilder_ == null) {
          ensureAquaNnResultIsMutable();
          aquaNnResult_.set(index, builderForValue.build());
          onChanged();
        } else {
          aquaNnResultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder addAquaNnResult(speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult value) {
        if (aquaNnResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAquaNnResultIsMutable();
          aquaNnResult_.add(value);
          onChanged();
        } else {
          aquaNnResultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder addAquaNnResult(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult value) {
        if (aquaNnResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAquaNnResultIsMutable();
          aquaNnResult_.add(index, value);
          onChanged();
        } else {
          aquaNnResultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder addAquaNnResult(
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder builderForValue) {
        if (aquaNnResultBuilder_ == null) {
          ensureAquaNnResultIsMutable();
          aquaNnResult_.add(builderForValue.build());
          onChanged();
        } else {
          aquaNnResultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder addAquaNnResult(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder builderForValue) {
        if (aquaNnResultBuilder_ == null) {
          ensureAquaNnResultIsMutable();
          aquaNnResult_.add(index, builderForValue.build());
          onChanged();
        } else {
          aquaNnResultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder addAllAquaNnResult(
          java.lang.Iterable<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult> values) {
        if (aquaNnResultBuilder_ == null) {
          ensureAquaNnResultIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, aquaNnResult_);
          onChanged();
        } else {
          aquaNnResultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder clearAquaNnResult() {
        if (aquaNnResultBuilder_ == null) {
          aquaNnResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          aquaNnResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public Builder removeAquaNnResult(int index) {
        if (aquaNnResultBuilder_ == null) {
          ensureAquaNnResultIsMutable();
          aquaNnResult_.remove(index);
          onChanged();
        } else {
          aquaNnResultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder getAquaNnResultBuilder(
          int index) {
        return getAquaNnResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder getAquaNnResultOrBuilder(
          int index) {
        if (aquaNnResultBuilder_ == null) {
          return aquaNnResult_.get(index);  } else {
          return aquaNnResultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder> 
           getAquaNnResultOrBuilderList() {
        if (aquaNnResultBuilder_ != null) {
          return aquaNnResultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(aquaNnResult_);
        }
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder addAquaNnResultBuilder() {
        return getAquaNnResultFieldBuilder().addBuilder(
            speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder addAquaNnResultBuilder(
          int index) {
        return getAquaNnResultFieldBuilder().addBuilder(
            index, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.SpeechSemanticParsing.AquaNnResult aqua_nn_result = 4;</code>
       */
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder> 
           getAquaNnResultBuilderList() {
        return getAquaNnResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder> 
          getAquaNnResultFieldBuilder() {
        if (aquaNnResultBuilder_ == null) {
          aquaNnResultBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.AquaNnResultOrBuilder>(
                  aquaNnResult_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          aquaNnResult_ = null;
        }
        return aquaNnResultBuilder_;
      }

      private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo truthSemanticInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> truthSemanticInfoBuilder_;
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       * @return Whether the truthSemanticInfo field is set.
       */
      public boolean hasTruthSemanticInfo() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       * @return The truthSemanticInfo.
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getTruthSemanticInfo() {
        if (truthSemanticInfoBuilder_ == null) {
          return truthSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : truthSemanticInfo_;
        } else {
          return truthSemanticInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      public Builder setTruthSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (truthSemanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          truthSemanticInfo_ = value;
          onChanged();
        } else {
          truthSemanticInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      public Builder setTruthSemanticInfo(
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder builderForValue) {
        if (truthSemanticInfoBuilder_ == null) {
          truthSemanticInfo_ = builderForValue.build();
          onChanged();
        } else {
          truthSemanticInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      public Builder mergeTruthSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (truthSemanticInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              truthSemanticInfo_ != null &&
              truthSemanticInfo_ != speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance()) {
            truthSemanticInfo_ =
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.newBuilder(truthSemanticInfo_).mergeFrom(value).buildPartial();
          } else {
            truthSemanticInfo_ = value;
          }
          onChanged();
        } else {
          truthSemanticInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      public Builder clearTruthSemanticInfo() {
        if (truthSemanticInfoBuilder_ == null) {
          truthSemanticInfo_ = null;
          onChanged();
        } else {
          truthSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder getTruthSemanticInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTruthSemanticInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getTruthSemanticInfoOrBuilder() {
        if (truthSemanticInfoBuilder_ != null) {
          return truthSemanticInfoBuilder_.getMessageOrBuilder();
        } else {
          return truthSemanticInfo_ == null ?
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : truthSemanticInfo_;
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo truth_semantic_info = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> 
          getTruthSemanticInfoFieldBuilder() {
        if (truthSemanticInfoBuilder_ == null) {
          truthSemanticInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder>(
                  getTruthSemanticInfo(),
                  getParentForChildren(),
                  isClean());
          truthSemanticInfo_ = null;
        }
        return truthSemanticInfoBuilder_;
      }

      private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo hypSemanticInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> hypSemanticInfoBuilder_;
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       * @return Whether the hypSemanticInfo field is set.
       */
      public boolean hasHypSemanticInfo() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       * @return The hypSemanticInfo.
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getHypSemanticInfo() {
        if (hypSemanticInfoBuilder_ == null) {
          return hypSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : hypSemanticInfo_;
        } else {
          return hypSemanticInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      public Builder setHypSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (hypSemanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hypSemanticInfo_ = value;
          onChanged();
        } else {
          hypSemanticInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      public Builder setHypSemanticInfo(
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder builderForValue) {
        if (hypSemanticInfoBuilder_ == null) {
          hypSemanticInfo_ = builderForValue.build();
          onChanged();
        } else {
          hypSemanticInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      public Builder mergeHypSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (hypSemanticInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              hypSemanticInfo_ != null &&
              hypSemanticInfo_ != speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance()) {
            hypSemanticInfo_ =
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.newBuilder(hypSemanticInfo_).mergeFrom(value).buildPartial();
          } else {
            hypSemanticInfo_ = value;
          }
          onChanged();
        } else {
          hypSemanticInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      public Builder clearHypSemanticInfo() {
        if (hypSemanticInfoBuilder_ == null) {
          hypSemanticInfo_ = null;
          onChanged();
        } else {
          hypSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder getHypSemanticInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getHypSemanticInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getHypSemanticInfoOrBuilder() {
        if (hypSemanticInfoBuilder_ != null) {
          return hypSemanticInfoBuilder_.getMessageOrBuilder();
        } else {
          return hypSemanticInfo_ == null ?
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : hypSemanticInfo_;
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo hyp_semantic_info = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> 
          getHypSemanticInfoFieldBuilder() {
        if (hypSemanticInfoBuilder_ == null) {
          hypSemanticInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder>(
                  getHypSemanticInfo(),
                  getParentForChildren(),
                  isClean());
          hypSemanticInfo_ = null;
        }
        return hypSemanticInfoBuilder_;
      }

      private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo prodSemanticInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> prodSemanticInfoBuilder_;
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       * @return Whether the prodSemanticInfo field is set.
       */
      public boolean hasProdSemanticInfo() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       * @return The prodSemanticInfo.
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getProdSemanticInfo() {
        if (prodSemanticInfoBuilder_ == null) {
          return prodSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : prodSemanticInfo_;
        } else {
          return prodSemanticInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      public Builder setProdSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (prodSemanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          prodSemanticInfo_ = value;
          onChanged();
        } else {
          prodSemanticInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      public Builder setProdSemanticInfo(
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder builderForValue) {
        if (prodSemanticInfoBuilder_ == null) {
          prodSemanticInfo_ = builderForValue.build();
          onChanged();
        } else {
          prodSemanticInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      public Builder mergeProdSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (prodSemanticInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              prodSemanticInfo_ != null &&
              prodSemanticInfo_ != speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance()) {
            prodSemanticInfo_ =
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.newBuilder(prodSemanticInfo_).mergeFrom(value).buildPartial();
          } else {
            prodSemanticInfo_ = value;
          }
          onChanged();
        } else {
          prodSemanticInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      public Builder clearProdSemanticInfo() {
        if (prodSemanticInfoBuilder_ == null) {
          prodSemanticInfo_ = null;
          onChanged();
        } else {
          prodSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder getProdSemanticInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getProdSemanticInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getProdSemanticInfoOrBuilder() {
        if (prodSemanticInfoBuilder_ != null) {
          return prodSemanticInfoBuilder_.getMessageOrBuilder();
        } else {
          return prodSemanticInfo_ == null ?
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : prodSemanticInfo_;
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo prod_semantic_info = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> 
          getProdSemanticInfoFieldBuilder() {
        if (prodSemanticInfoBuilder_ == null) {
          prodSemanticInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder>(
                  getProdSemanticInfo(),
                  getParentForChildren(),
                  isClean());
          prodSemanticInfo_ = null;
        }
        return prodSemanticInfoBuilder_;
      }

      private speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo logSemanticInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> logSemanticInfoBuilder_;
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       * @return Whether the logSemanticInfo field is set.
       */
      public boolean hasLogSemanticInfo() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       * @return The logSemanticInfo.
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getLogSemanticInfo() {
        if (logSemanticInfoBuilder_ == null) {
          return logSemanticInfo_ == null ? speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : logSemanticInfo_;
        } else {
          return logSemanticInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      public Builder setLogSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (logSemanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logSemanticInfo_ = value;
          onChanged();
        } else {
          logSemanticInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      public Builder setLogSemanticInfo(
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder builderForValue) {
        if (logSemanticInfoBuilder_ == null) {
          logSemanticInfo_ = builderForValue.build();
          onChanged();
        } else {
          logSemanticInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      public Builder mergeLogSemanticInfo(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo value) {
        if (logSemanticInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
              logSemanticInfo_ != null &&
              logSemanticInfo_ != speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance()) {
            logSemanticInfo_ =
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.newBuilder(logSemanticInfo_).mergeFrom(value).buildPartial();
          } else {
            logSemanticInfo_ = value;
          }
          onChanged();
        } else {
          logSemanticInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      public Builder clearLogSemanticInfo() {
        if (logSemanticInfoBuilder_ == null) {
          logSemanticInfo_ = null;
          onChanged();
        } else {
          logSemanticInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder getLogSemanticInfoBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getLogSemanticInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder getLogSemanticInfoOrBuilder() {
        if (logSemanticInfoBuilder_ != null) {
          return logSemanticInfoBuilder_.getMessageOrBuilder();
        } else {
          return logSemanticInfo_ == null ?
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance() : logSemanticInfo_;
        }
      }
      /**
       * <code>optional .speech.s2p.UtteranceSemanticInfo log_semantic_info = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder> 
          getLogSemanticInfoFieldBuilder() {
        if (logSemanticInfoBuilder_ == null) {
          logSemanticInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder>(
                  getLogSemanticInfo(),
                  getParentForChildren(),
                  isClean());
          logSemanticInfo_ = null;
        }
        return logSemanticInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speech.s2p.SpeechSemanticParsing)
    }

    // @@protoc_insertion_point(class_scope:speech.s2p.SpeechSemanticParsing)
    private static final speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing();
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SpeechSemanticParsing>
        PARSER = new com.google.protobuf.AbstractParser<SpeechSemanticParsing>() {
      @java.lang.Override
      public SpeechSemanticParsing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SpeechSemanticParsing> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeechSemanticParsing> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int MESSAGE_SET_EXTENSION_FIELD_NUMBER = 173290560;
    /**
     * <code>extend .proto2.bridge.MessageSet { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        proto2.bridge.MessageSet,
        speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing> messageSetExtension = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.getDefaultInstance(),
          0,
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.class,
          speech.s2p.SpeechSemanticParsingOuterClass.SpeechSemanticParsing.getDefaultInstance());
  }

  public interface UtteranceSemanticInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speech.s2p.UtteranceSemanticInfo)
      com.google.protobuf.GeneratedMessageV3.
          ExtendableMessageOrBuilder<UtteranceSemanticInfo> {

    /**
     * <code>optional string transcript = 1;</code>
     * @return Whether the transcript field is set.
     */
    boolean hasTranscript();
    /**
     * <code>optional string transcript = 1;</code>
     * @return The transcript.
     */
    java.lang.String getTranscript();
    /**
     * <code>optional string transcript = 1;</code>
     * @return The bytes for transcript.
     */
    com.google.protobuf.ByteString
        getTranscriptBytes();

    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> 
        getSemanticInfoList();
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    speech.s2p.SemanticInfoOuterClass.SemanticInfo getSemanticInfo(int index);
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    int getSemanticInfoCount();
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    java.util.List<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
        getSemanticInfoOrBuilderList();
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder getSemanticInfoOrBuilder(
        int index);

    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult> 
        getParseResultsList();
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.ParseResult getParseResults(int index);
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    int getParseResultsCount();
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder> 
        getParseResultsOrBuilderList();
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder getParseResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code speech.s2p.UtteranceSemanticInfo}
   */
  public static final class UtteranceSemanticInfo extends
      com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
        UtteranceSemanticInfo> implements
      // @@protoc_insertion_point(message_implements:speech.s2p.UtteranceSemanticInfo)
      UtteranceSemanticInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UtteranceSemanticInfo.newBuilder() to construct.
    private UtteranceSemanticInfo(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, ?> builder) {
      super(builder);
    }
    private UtteranceSemanticInfo() {
      transcript_ = "";
      semanticInfo_ = java.util.Collections.emptyList();
      parseResults_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UtteranceSemanticInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_UtteranceSemanticInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_UtteranceSemanticInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.class, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder.class);
    }

    private int bitField0_;
    public static final int TRANSCRIPT_FIELD_NUMBER = 1;
    private volatile java.lang.Object transcript_;
    /**
     * <code>optional string transcript = 1;</code>
     * @return Whether the transcript field is set.
     */
    @java.lang.Override
    public boolean hasTranscript() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string transcript = 1;</code>
     * @return The transcript.
     */
    @java.lang.Override
    public java.lang.String getTranscript() {
      java.lang.Object ref = transcript_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          transcript_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string transcript = 1;</code>
     * @return The bytes for transcript.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTranscriptBytes() {
      java.lang.Object ref = transcript_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transcript_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEMANTIC_INFO_FIELD_NUMBER = 2;
    private java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> semanticInfo_;
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    @java.lang.Override
    public java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> getSemanticInfoList() {
      return semanticInfo_;
    }
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
        getSemanticInfoOrBuilderList() {
      return semanticInfo_;
    }
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    @java.lang.Override
    public int getSemanticInfoCount() {
      return semanticInfo_.size();
    }
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    @java.lang.Override
    public speech.s2p.SemanticInfoOuterClass.SemanticInfo getSemanticInfo(int index) {
      return semanticInfo_.get(index);
    }
    /**
     * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
     */
    @java.lang.Override
    public speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder getSemanticInfoOrBuilder(
        int index) {
      return semanticInfo_.get(index);
    }

    public static final int PARSE_RESULTS_FIELD_NUMBER = 3;
    private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult> parseResults_;
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    @java.lang.Override
    public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult> getParseResultsList() {
      return parseResults_;
    }
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder> 
        getParseResultsOrBuilderList() {
      return parseResults_;
    }
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    @java.lang.Override
    public int getParseResultsCount() {
      return parseResults_.size();
    }
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult getParseResults(int index) {
      return parseResults_.get(index);
    }
    /**
     * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
     */
    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder getParseResultsOrBuilder(
        int index) {
      return parseResults_.get(index);
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speech.s2p.UtteranceSemanticInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:speech.s2p.UtteranceSemanticInfo)
        speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_UtteranceSemanticInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_UtteranceSemanticInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.class, speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.Builder.class);
      }

      // Construct using speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSemanticInfoFieldBuilder();
          getParseResultsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        transcript_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (semanticInfoBuilder_ == null) {
          semanticInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          semanticInfoBuilder_.clear();
        }
        if (parseResultsBuilder_ == null) {
          parseResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          parseResultsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_UtteranceSemanticInfo_descriptor;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getDefaultInstanceForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance();
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo build() {
        speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo buildPartial() {
        speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo result = new speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.transcript_ = transcript_;
        if (semanticInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            semanticInfo_ = java.util.Collections.unmodifiableList(semanticInfo_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.semanticInfo_ = semanticInfo_;
        } else {
          result.semanticInfo_ = semanticInfoBuilder_.build();
        }
        if (parseResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            parseResults_ = java.util.Collections.unmodifiableList(parseResults_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.parseResults_ = parseResults_;
        } else {
          result.parseResults_ = parseResultsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public <Type> Builder setExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, Type> extension,
          Type value) {
        return super.setExtension(extension, value);
      }
      @java.lang.Override
      public <Type> Builder setExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, java.util.List<Type>> extension,
          int index, Type value) {
        return super.setExtension(extension, index, value);
      }
      @java.lang.Override
      public <Type> Builder addExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, java.util.List<Type>> extension,
          Type value) {
        return super.addExtension(extension, value);
      }
      @java.lang.Override
      public <Type> Builder clearExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo, ?> extension) {
        return super.clearExtension(extension);
      }
      private int bitField0_;

      private java.lang.Object transcript_ = "";
      /**
       * <code>optional string transcript = 1;</code>
       * @return Whether the transcript field is set.
       */
      public boolean hasTranscript() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string transcript = 1;</code>
       * @return The transcript.
       */
      public java.lang.String getTranscript() {
        java.lang.Object ref = transcript_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            transcript_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string transcript = 1;</code>
       * @return The bytes for transcript.
       */
      public com.google.protobuf.ByteString
          getTranscriptBytes() {
        java.lang.Object ref = transcript_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transcript_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string transcript = 1;</code>
       * @param value The transcript to set.
       * @return This builder for chaining.
       */
      public Builder setTranscript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transcript_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string transcript = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTranscript() {
        bitField0_ = (bitField0_ & ~0x00000001);
        transcript_ = getDefaultInstance().getTranscript();
        onChanged();
        return this;
      }
      /**
       * <code>optional string transcript = 1;</code>
       * @param value The bytes for transcript to set.
       * @return This builder for chaining.
       */
      public Builder setTranscriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transcript_ = value;
        onChanged();
        return this;
      }

      private java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> semanticInfo_ =
        java.util.Collections.emptyList();
      private void ensureSemanticInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          semanticInfo_ = new java.util.ArrayList<speech.s2p.SemanticInfoOuterClass.SemanticInfo>(semanticInfo_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SemanticInfoOuterClass.SemanticInfo, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder, speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> semanticInfoBuilder_;

      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo> getSemanticInfoList() {
        if (semanticInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(semanticInfo_);
        } else {
          return semanticInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public int getSemanticInfoCount() {
        if (semanticInfoBuilder_ == null) {
          return semanticInfo_.size();
        } else {
          return semanticInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public speech.s2p.SemanticInfoOuterClass.SemanticInfo getSemanticInfo(int index) {
        if (semanticInfoBuilder_ == null) {
          return semanticInfo_.get(index);
        } else {
          return semanticInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder setSemanticInfo(
          int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo value) {
        if (semanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSemanticInfoIsMutable();
          semanticInfo_.set(index, value);
          onChanged();
        } else {
          semanticInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder setSemanticInfo(
          int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder builderForValue) {
        if (semanticInfoBuilder_ == null) {
          ensureSemanticInfoIsMutable();
          semanticInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          semanticInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder addSemanticInfo(speech.s2p.SemanticInfoOuterClass.SemanticInfo value) {
        if (semanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSemanticInfoIsMutable();
          semanticInfo_.add(value);
          onChanged();
        } else {
          semanticInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder addSemanticInfo(
          int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo value) {
        if (semanticInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSemanticInfoIsMutable();
          semanticInfo_.add(index, value);
          onChanged();
        } else {
          semanticInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder addSemanticInfo(
          speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder builderForValue) {
        if (semanticInfoBuilder_ == null) {
          ensureSemanticInfoIsMutable();
          semanticInfo_.add(builderForValue.build());
          onChanged();
        } else {
          semanticInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder addSemanticInfo(
          int index, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder builderForValue) {
        if (semanticInfoBuilder_ == null) {
          ensureSemanticInfoIsMutable();
          semanticInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          semanticInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder addAllSemanticInfo(
          java.lang.Iterable<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfo> values) {
        if (semanticInfoBuilder_ == null) {
          ensureSemanticInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, semanticInfo_);
          onChanged();
        } else {
          semanticInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder clearSemanticInfo() {
        if (semanticInfoBuilder_ == null) {
          semanticInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          semanticInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public Builder removeSemanticInfo(int index) {
        if (semanticInfoBuilder_ == null) {
          ensureSemanticInfoIsMutable();
          semanticInfo_.remove(index);
          onChanged();
        } else {
          semanticInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder getSemanticInfoBuilder(
          int index) {
        return getSemanticInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder getSemanticInfoOrBuilder(
          int index) {
        if (semanticInfoBuilder_ == null) {
          return semanticInfo_.get(index);  } else {
          return semanticInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public java.util.List<? extends speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
           getSemanticInfoOrBuilderList() {
        if (semanticInfoBuilder_ != null) {
          return semanticInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(semanticInfo_);
        }
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder addSemanticInfoBuilder() {
        return getSemanticInfoFieldBuilder().addBuilder(
            speech.s2p.SemanticInfoOuterClass.SemanticInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder addSemanticInfoBuilder(
          int index) {
        return getSemanticInfoFieldBuilder().addBuilder(
            index, speech.s2p.SemanticInfoOuterClass.SemanticInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.SemanticInfo semantic_info = 2;</code>
       */
      public java.util.List<speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder> 
           getSemanticInfoBuilderList() {
        return getSemanticInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SemanticInfoOuterClass.SemanticInfo, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder, speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder> 
          getSemanticInfoFieldBuilder() {
        if (semanticInfoBuilder_ == null) {
          semanticInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              speech.s2p.SemanticInfoOuterClass.SemanticInfo, speech.s2p.SemanticInfoOuterClass.SemanticInfo.Builder, speech.s2p.SemanticInfoOuterClass.SemanticInfoOrBuilder>(
                  semanticInfo_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          semanticInfo_ = null;
        }
        return semanticInfoBuilder_;
      }

      private java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult> parseResults_ =
        java.util.Collections.emptyList();
      private void ensureParseResultsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          parseResults_ = new java.util.ArrayList<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult>(parseResults_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.ParseResult, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder> parseResultsBuilder_;

      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult> getParseResultsList() {
        if (parseResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parseResults_);
        } else {
          return parseResultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public int getParseResultsCount() {
        if (parseResultsBuilder_ == null) {
          return parseResults_.size();
        } else {
          return parseResultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult getParseResults(int index) {
        if (parseResultsBuilder_ == null) {
          return parseResults_.get(index);
        } else {
          return parseResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder setParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult value) {
        if (parseResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParseResultsIsMutable();
          parseResults_.set(index, value);
          onChanged();
        } else {
          parseResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder setParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder builderForValue) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          parseResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder addParseResults(speech.s2p.SpeechSemanticParsingOuterClass.ParseResult value) {
        if (parseResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParseResultsIsMutable();
          parseResults_.add(value);
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder addParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult value) {
        if (parseResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParseResultsIsMutable();
          parseResults_.add(index, value);
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder addParseResults(
          speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder builderForValue) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.add(builderForValue.build());
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder addParseResults(
          int index, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder builderForValue) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          parseResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder addAllParseResults(
          java.lang.Iterable<? extends speech.s2p.SpeechSemanticParsingOuterClass.ParseResult> values) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parseResults_);
          onChanged();
        } else {
          parseResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder clearParseResults() {
        if (parseResultsBuilder_ == null) {
          parseResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          parseResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public Builder removeParseResults(int index) {
        if (parseResultsBuilder_ == null) {
          ensureParseResultsIsMutable();
          parseResults_.remove(index);
          onChanged();
        } else {
          parseResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder getParseResultsBuilder(
          int index) {
        return getParseResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder getParseResultsOrBuilder(
          int index) {
        if (parseResultsBuilder_ == null) {
          return parseResults_.get(index);  } else {
          return parseResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public java.util.List<? extends speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder> 
           getParseResultsOrBuilderList() {
        if (parseResultsBuilder_ != null) {
          return parseResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parseResults_);
        }
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder addParseResultsBuilder() {
        return getParseResultsFieldBuilder().addBuilder(
            speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder addParseResultsBuilder(
          int index) {
        return getParseResultsFieldBuilder().addBuilder(
            index, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.getDefaultInstance());
      }
      /**
       * <code>repeated .speech.s2p.ParseResult parse_results = 3;</code>
       */
      public java.util.List<speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder> 
           getParseResultsBuilderList() {
        return getParseResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          speech.s2p.SpeechSemanticParsingOuterClass.ParseResult, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder> 
          getParseResultsFieldBuilder() {
        if (parseResultsBuilder_ == null) {
          parseResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              speech.s2p.SpeechSemanticParsingOuterClass.ParseResult, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder, speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder>(
                  parseResults_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          parseResults_ = null;
        }
        return parseResultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speech.s2p.UtteranceSemanticInfo)
    }

    // @@protoc_insertion_point(class_scope:speech.s2p.UtteranceSemanticInfo)
    private static final speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo();
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<UtteranceSemanticInfo>
        PARSER = new com.google.protobuf.AbstractParser<UtteranceSemanticInfo>() {
      @java.lang.Override
      public UtteranceSemanticInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<UtteranceSemanticInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UtteranceSemanticInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int UTTERANCE_SEMANTIC_INFO_EXT_FIELD_NUMBER = 190807888;
    /**
     * <code>extend .greco.Hypothesis { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        com.google.speech.recognizer.api.Recognizer.Hypothesis,
        speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo> utteranceSemanticInfoExt = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance(),
          0,
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.class,
          speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo.getDefaultInstance());
  }

  public interface AssistantLogInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speech.s2p.AssistantLogInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EventIdMessage event_id = 1;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <code>optional .EventIdMessage event_id = 1;</code>
     * @return The eventId.
     */
    com.google.common.logging.Eventid.EventIdMessage getEventId();
    /**
     * <code>optional .EventIdMessage event_id = 1;</code>
     */
    com.google.common.logging.Eventid.EventIdMessageOrBuilder getEventIdOrBuilder();

    /**
     * <code>optional bool is_follow_on = 3;</code>
     * @return Whether the isFollowOn field is set.
     */
    boolean hasIsFollowOn();
    /**
     * <code>optional bool is_follow_on = 3;</code>
     * @return The isFollowOn.
     */
    boolean getIsFollowOn();
  }
  /**
   * Protobuf type {@code speech.s2p.AssistantLogInfo}
   */
  public static final class AssistantLogInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speech.s2p.AssistantLogInfo)
      AssistantLogInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AssistantLogInfo.newBuilder() to construct.
    private AssistantLogInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AssistantLogInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AssistantLogInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_AssistantLogInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_AssistantLogInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.class, speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.Builder.class);
    }

    private int bitField0_;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private com.google.common.logging.Eventid.EventIdMessage eventId_;
    /**
     * <code>optional .EventIdMessage event_id = 1;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .EventIdMessage event_id = 1;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public com.google.common.logging.Eventid.EventIdMessage getEventId() {
      return eventId_ == null ? com.google.common.logging.Eventid.EventIdMessage.getDefaultInstance() : eventId_;
    }
    /**
     * <code>optional .EventIdMessage event_id = 1;</code>
     */
    @java.lang.Override
    public com.google.common.logging.Eventid.EventIdMessageOrBuilder getEventIdOrBuilder() {
      return eventId_ == null ? com.google.common.logging.Eventid.EventIdMessage.getDefaultInstance() : eventId_;
    }

    public static final int IS_FOLLOW_ON_FIELD_NUMBER = 3;
    private boolean isFollowOn_;
    /**
     * <code>optional bool is_follow_on = 3;</code>
     * @return Whether the isFollowOn field is set.
     */
    @java.lang.Override
    public boolean hasIsFollowOn() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool is_follow_on = 3;</code>
     * @return The isFollowOn.
     */
    @java.lang.Override
    public boolean getIsFollowOn() {
      return isFollowOn_;
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speech.s2p.AssistantLogInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speech.s2p.AssistantLogInfo)
        speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_AssistantLogInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_AssistantLogInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.class, speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.Builder.class);
      }

      // Construct using speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventIdFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (eventIdBuilder_ == null) {
          eventId_ = null;
        } else {
          eventIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        isFollowOn_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_AssistantLogInfo_descriptor;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo getDefaultInstanceForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.getDefaultInstance();
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo build() {
        speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo buildPartial() {
        speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo result = new speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (eventIdBuilder_ == null) {
            result.eventId_ = eventId_;
          } else {
            result.eventId_ = eventIdBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isFollowOn_ = isFollowOn_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private com.google.common.logging.Eventid.EventIdMessage eventId_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.common.logging.Eventid.EventIdMessage, com.google.common.logging.Eventid.EventIdMessage.Builder, com.google.common.logging.Eventid.EventIdMessageOrBuilder> eventIdBuilder_;
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       * @return Whether the eventId field is set.
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       * @return The eventId.
       */
      public com.google.common.logging.Eventid.EventIdMessage getEventId() {
        if (eventIdBuilder_ == null) {
          return eventId_ == null ? com.google.common.logging.Eventid.EventIdMessage.getDefaultInstance() : eventId_;
        } else {
          return eventIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      public Builder setEventId(com.google.common.logging.Eventid.EventIdMessage value) {
        if (eventIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventId_ = value;
          onChanged();
        } else {
          eventIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      public Builder setEventId(
          com.google.common.logging.Eventid.EventIdMessage.Builder builderForValue) {
        if (eventIdBuilder_ == null) {
          eventId_ = builderForValue.build();
          onChanged();
        } else {
          eventIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      public Builder mergeEventId(com.google.common.logging.Eventid.EventIdMessage value) {
        if (eventIdBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              eventId_ != null &&
              eventId_ != com.google.common.logging.Eventid.EventIdMessage.getDefaultInstance()) {
            eventId_ =
              com.google.common.logging.Eventid.EventIdMessage.newBuilder(eventId_).mergeFrom(value).buildPartial();
          } else {
            eventId_ = value;
          }
          onChanged();
        } else {
          eventIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      public Builder clearEventId() {
        if (eventIdBuilder_ == null) {
          eventId_ = null;
          onChanged();
        } else {
          eventIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      public com.google.common.logging.Eventid.EventIdMessage.Builder getEventIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getEventIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      public com.google.common.logging.Eventid.EventIdMessageOrBuilder getEventIdOrBuilder() {
        if (eventIdBuilder_ != null) {
          return eventIdBuilder_.getMessageOrBuilder();
        } else {
          return eventId_ == null ?
              com.google.common.logging.Eventid.EventIdMessage.getDefaultInstance() : eventId_;
        }
      }
      /**
       * <code>optional .EventIdMessage event_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.common.logging.Eventid.EventIdMessage, com.google.common.logging.Eventid.EventIdMessage.Builder, com.google.common.logging.Eventid.EventIdMessageOrBuilder> 
          getEventIdFieldBuilder() {
        if (eventIdBuilder_ == null) {
          eventIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.common.logging.Eventid.EventIdMessage, com.google.common.logging.Eventid.EventIdMessage.Builder, com.google.common.logging.Eventid.EventIdMessageOrBuilder>(
                  getEventId(),
                  getParentForChildren(),
                  isClean());
          eventId_ = null;
        }
        return eventIdBuilder_;
      }

      private boolean isFollowOn_ ;
      /**
       * <code>optional bool is_follow_on = 3;</code>
       * @return Whether the isFollowOn field is set.
       */
      @java.lang.Override
      public boolean hasIsFollowOn() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool is_follow_on = 3;</code>
       * @return The isFollowOn.
       */
      @java.lang.Override
      public boolean getIsFollowOn() {
        return isFollowOn_;
      }
      /**
       * <code>optional bool is_follow_on = 3;</code>
       * @param value The isFollowOn to set.
       * @return This builder for chaining.
       */
      public Builder setIsFollowOn(boolean value) {
        bitField0_ |= 0x00000002;
        isFollowOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_follow_on = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsFollowOn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isFollowOn_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speech.s2p.AssistantLogInfo)
    }

    // @@protoc_insertion_point(class_scope:speech.s2p.AssistantLogInfo)
    private static final speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo();
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AssistantLogInfo>
        PARSER = new com.google.protobuf.AbstractParser<AssistantLogInfo>() {
      @java.lang.Override
      public AssistantLogInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AssistantLogInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AssistantLogInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int UTTERANCE_SEMANTIC_INFO_EXT_FIELD_NUMBER = 187027538;
    /**
     * <code>extend .speech.s2p.UtteranceSemanticInfo { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        speech.s2p.SpeechSemanticParsingOuterClass.UtteranceSemanticInfo,
        speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo> utteranceSemanticInfoExt = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.getDefaultInstance(),
          0,
          speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.class,
          speech.s2p.SpeechSemanticParsingOuterClass.AssistantLogInfo.getDefaultInstance());
  }

  public interface ParseResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speech.s2p.ParseResult)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code speech.s2p.ParseResult}
   */
  public static final class ParseResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speech.s2p.ParseResult)
      ParseResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParseResult.newBuilder() to construct.
    private ParseResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParseResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParseResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_ParseResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_ParseResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.class, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder.class);
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speech.s2p.SpeechSemanticParsingOuterClass.ParseResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speech.s2p.ParseResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speech.s2p.ParseResult)
        speech.s2p.SpeechSemanticParsingOuterClass.ParseResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_ParseResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_ParseResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.class, speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.Builder.class);
      }

      // Construct using speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.internal_static_speech_s2p_ParseResult_descriptor;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult getDefaultInstanceForType() {
        return speech.s2p.SpeechSemanticParsingOuterClass.ParseResult.getDefaultInstance();
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult build() {
        speech.s2p.SpeechSemanticParsingOuterClass.ParseResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult buildPartial() {
        speech.s2p.SpeechSemanticParsingOuterClass.ParseResult result = new speech.s2p.SpeechSemanticParsingOuterClass.ParseResult(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speech.s2p.ParseResult)
    }

    // @@protoc_insertion_point(class_scope:speech.s2p.ParseResult)
    private static final speech.s2p.SpeechSemanticParsingOuterClass.ParseResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speech.s2p.SpeechSemanticParsingOuterClass.ParseResult();
    }

    public static speech.s2p.SpeechSemanticParsingOuterClass.ParseResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ParseResult>
        PARSER = new com.google.protobuf.AbstractParser<ParseResult>() {
      @java.lang.Override
      public ParseResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ParseResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParseResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speech.s2p.SpeechSemanticParsingOuterClass.ParseResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_SpeechSemanticParsing_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_SpeechSemanticParsing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_UtteranceSemanticInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_UtteranceSemanticInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_AssistantLogInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_AssistantLogInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speech_s2p_ParseResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speech_s2p_ParseResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(speech/s2p/speech_semantic_parsing.pro" +
      "to\022\nspeech.s2p\032\032logs/eventid/eventid.pro" +
      "to\032)net/proto2/bridge/proto/message_set." +
      "proto\032\"speech/greco3/api/recognizer.prot" +
      "o\032\036speech/s2p/semantic_info.proto\"\212\006\n\025Sp" +
      "eechSemanticParsing\022\027\n\017canonical_input\030\001" +
      " \001(\t\022L\n\rparse_results\030\002 \003(\01325.speech.s2p" +
      ".SpeechSemanticParsing.StrippedParseResu" +
      "lt\022F\n\016aqua_nn_result\030\004 \003(\0132..speech.s2p." +
      "SpeechSemanticParsing.AquaNnResult\022>\n\023tr" +
      "uth_semantic_info\030\005 \001(\0132!.speech.s2p.Utt" +
      "eranceSemanticInfo\022<\n\021hyp_semantic_info\030" +
      "\006 \001(\0132!.speech.s2p.UtteranceSemanticInfo" +
      "\022=\n\022prod_semantic_info\030\007 \001(\0132!.speech.s2" +
      "p.UtteranceSemanticInfo\022<\n\021log_semantic_" +
      "info\030\010 \001(\0132!.speech.s2p.UtteranceSemanti" +
      "cInfo\032\221\001\n\023StrippedParseResult\022Z\n\016mapped_" +
      "intents\030\003 \003(\0132B.speech.s2p.SpeechSemanti" +
      "cParsing.StrippedParseResult.MappedInten" +
      "t\032\036\n\014MappedIntent\022\016\n\006intent\030\002 \001(\t\032S\n\014Aqu" +
      "aNnResult\022\022\n\nmodel_path\030\001 \001(\t\022/\n\rsemanti" +
      "c_info\030\003 \003(\0132\030.speech.s2p.SemanticInfo2^" +
      "\n\025message_set_extension\022\031.proto2.bridge." +
      "MessageSet\030\300\350\320R \001(\0132!.speech.s2p.SpeechS" +
      "emanticParsing\"\365\001\n\025UtteranceSemanticInfo" +
      "\022\022\n\ntranscript\030\001 \001(\t\022/\n\rsemantic_info\030\002 " +
      "\003(\0132\030.speech.s2p.SemanticInfo\022.\n\rparse_r" +
      "esults\030\003 \003(\0132\027.speech.s2p.ParseResult*\t\010" +
      "\350\007\020\200\200\200\200\0022\\\n\033utterance_semantic_info_ext\022" +
      "\021.greco.Hypothesis\030\320\376\375Z \001(\0132!.speech.s2p" +
      ".UtteranceSemanticInfo\"\264\001\n\020AssistantLogI" +
      "nfo\022!\n\010event_id\030\001 \001(\0132\017.EventIdMessage\022\024" +
      "\n\014is_follow_on\030\003 \001(\0102g\n\033utterance_semant" +
      "ic_info_ext\022!.speech.s2p.UtteranceSemant" +
      "icInfo\030\322\240\227Y \001(\0132\034.speech.s2p.AssistantLo" +
      "gInfo\"\r\n\013ParseResultB\002H\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.common.logging.Eventid.getDescriptor(),
          proto2.bridge.MessageSetProtos.getDescriptor(),
          com.google.speech.recognizer.api.Recognizer.getDescriptor(),
          speech.s2p.SemanticInfoOuterClass.getDescriptor(),
        });
    internal_static_speech_s2p_SpeechSemanticParsing_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_speech_s2p_SpeechSemanticParsing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_SpeechSemanticParsing_descriptor,
        new java.lang.String[] { "CanonicalInput", "ParseResults", "AquaNnResult", "TruthSemanticInfo", "HypSemanticInfo", "ProdSemanticInfo", "LogSemanticInfo", });
    internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor =
      internal_static_speech_s2p_SpeechSemanticParsing_descriptor.getNestedTypes().get(0);
    internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor,
        new java.lang.String[] { "MappedIntents", });
    internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_descriptor =
      internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_descriptor.getNestedTypes().get(0);
    internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_SpeechSemanticParsing_StrippedParseResult_MappedIntent_descriptor,
        new java.lang.String[] { "Intent", });
    internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_descriptor =
      internal_static_speech_s2p_SpeechSemanticParsing_descriptor.getNestedTypes().get(1);
    internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_SpeechSemanticParsing_AquaNnResult_descriptor,
        new java.lang.String[] { "ModelPath", "SemanticInfo", });
    internal_static_speech_s2p_UtteranceSemanticInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_speech_s2p_UtteranceSemanticInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_UtteranceSemanticInfo_descriptor,
        new java.lang.String[] { "Transcript", "SemanticInfo", "ParseResults", });
    internal_static_speech_s2p_AssistantLogInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_speech_s2p_AssistantLogInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_AssistantLogInfo_descriptor,
        new java.lang.String[] { "EventId", "IsFollowOn", });
    internal_static_speech_s2p_ParseResult_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_speech_s2p_ParseResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speech_s2p_ParseResult_descriptor,
        new java.lang.String[] { });
    com.google.common.logging.Eventid.getDescriptor();
    proto2.bridge.MessageSetProtos.getDescriptor();
    com.google.speech.recognizer.api.Recognizer.getDescriptor();
    speech.s2p.SemanticInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
