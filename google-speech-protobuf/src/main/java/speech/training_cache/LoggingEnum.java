// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/training_cache/proto/logging_enum.proto

package speech.training_cache;

public final class LoggingEnum {
  private LoggingEnum() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code speech.training_cache.CacheOperation}
   */
  public enum CacheOperation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNSPECIFIED_OPERATION = 0;</code>
     */
    UNSPECIFIED_OPERATION(0),
    /**
     * <code>INITIALIZE_EKHO = 1;</code>
     */
    INITIALIZE_EKHO(1),
    /**
     * <code>INITIALIZE_CACHE_ASYNC = 2;</code>
     */
    INITIALIZE_CACHE_ASYNC(2),
    /**
     * <code>BEGIN_SESSION = 3;</code>
     */
    BEGIN_SESSION(3),
    /**
     * <code>END_SESSION = 4;</code>
     */
    END_SESSION(4),
    /**
     * <code>CACHE_CLIENT_EVENT = 5;</code>
     */
    CACHE_CLIENT_EVENT(5),
    /**
     * <code>CACHE_SODA_START = 6;</code>
     */
    CACHE_SODA_START(6),
    /**
     * <code>CACHE_SODA_STOP = 7;</code>
     */
    CACHE_SODA_STOP(7),
    /**
     * <code>CACHE_SODA_EVENT = 8;</code>
     */
    CACHE_SODA_EVENT(8),
    /**
     * <code>FLUSH_ASYNC = 9;</code>
     */
    FLUSH_ASYNC(9),
    /**
     * <code>CLEAR_ASYNC = 10;</code>
     */
    CLEAR_ASYNC(10),
    /**
     * <code>CLEANUP_ASYNC = 11;</code>
     */
    CLEANUP_ASYNC(11),
    /**
     * <code>MATERIALIZER_CREATE = 12;</code>
     */
    MATERIALIZER_CREATE(12),
    /**
     * <code>MATERIALIZER_START = 13;</code>
     */
    MATERIALIZER_START(13),
    /**
     * <code>MATERIALIZER_NEXT = 14;</code>
     */
    MATERIALIZER_NEXT(14),
    /**
     * <code>MATERIALIZER_CLOSE = 15;</code>
     */
    MATERIALIZER_CLOSE(15),
    /**
     * <code>MISC = 16;</code>
     */
    MISC(16),
    /**
     * <code>RUN_MAINTENANCE_TASKS = 17;</code>
     */
    RUN_MAINTENANCE_TASKS(17),
    /**
     * <code>CACHE_EKHO_EVENT = 18;</code>
     */
    CACHE_EKHO_EVENT(18),
    /**
     * <code>CACHE_CUSTOM_EVENT = 19;</code>
     */
    CACHE_CUSTOM_EVENT(19),
    ;

    /**
     * <code>UNSPECIFIED_OPERATION = 0;</code>
     */
    public static final int UNSPECIFIED_OPERATION_VALUE = 0;
    /**
     * <code>INITIALIZE_EKHO = 1;</code>
     */
    public static final int INITIALIZE_EKHO_VALUE = 1;
    /**
     * <code>INITIALIZE_CACHE_ASYNC = 2;</code>
     */
    public static final int INITIALIZE_CACHE_ASYNC_VALUE = 2;
    /**
     * <code>BEGIN_SESSION = 3;</code>
     */
    public static final int BEGIN_SESSION_VALUE = 3;
    /**
     * <code>END_SESSION = 4;</code>
     */
    public static final int END_SESSION_VALUE = 4;
    /**
     * <code>CACHE_CLIENT_EVENT = 5;</code>
     */
    public static final int CACHE_CLIENT_EVENT_VALUE = 5;
    /**
     * <code>CACHE_SODA_START = 6;</code>
     */
    public static final int CACHE_SODA_START_VALUE = 6;
    /**
     * <code>CACHE_SODA_STOP = 7;</code>
     */
    public static final int CACHE_SODA_STOP_VALUE = 7;
    /**
     * <code>CACHE_SODA_EVENT = 8;</code>
     */
    public static final int CACHE_SODA_EVENT_VALUE = 8;
    /**
     * <code>FLUSH_ASYNC = 9;</code>
     */
    public static final int FLUSH_ASYNC_VALUE = 9;
    /**
     * <code>CLEAR_ASYNC = 10;</code>
     */
    public static final int CLEAR_ASYNC_VALUE = 10;
    /**
     * <code>CLEANUP_ASYNC = 11;</code>
     */
    public static final int CLEANUP_ASYNC_VALUE = 11;
    /**
     * <code>MATERIALIZER_CREATE = 12;</code>
     */
    public static final int MATERIALIZER_CREATE_VALUE = 12;
    /**
     * <code>MATERIALIZER_START = 13;</code>
     */
    public static final int MATERIALIZER_START_VALUE = 13;
    /**
     * <code>MATERIALIZER_NEXT = 14;</code>
     */
    public static final int MATERIALIZER_NEXT_VALUE = 14;
    /**
     * <code>MATERIALIZER_CLOSE = 15;</code>
     */
    public static final int MATERIALIZER_CLOSE_VALUE = 15;
    /**
     * <code>MISC = 16;</code>
     */
    public static final int MISC_VALUE = 16;
    /**
     * <code>RUN_MAINTENANCE_TASKS = 17;</code>
     */
    public static final int RUN_MAINTENANCE_TASKS_VALUE = 17;
    /**
     * <code>CACHE_EKHO_EVENT = 18;</code>
     */
    public static final int CACHE_EKHO_EVENT_VALUE = 18;
    /**
     * <code>CACHE_CUSTOM_EVENT = 19;</code>
     */
    public static final int CACHE_CUSTOM_EVENT_VALUE = 19;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CacheOperation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CacheOperation forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED_OPERATION;
        case 1: return INITIALIZE_EKHO;
        case 2: return INITIALIZE_CACHE_ASYNC;
        case 3: return BEGIN_SESSION;
        case 4: return END_SESSION;
        case 5: return CACHE_CLIENT_EVENT;
        case 6: return CACHE_SODA_START;
        case 7: return CACHE_SODA_STOP;
        case 8: return CACHE_SODA_EVENT;
        case 9: return FLUSH_ASYNC;
        case 10: return CLEAR_ASYNC;
        case 11: return CLEANUP_ASYNC;
        case 12: return MATERIALIZER_CREATE;
        case 13: return MATERIALIZER_START;
        case 14: return MATERIALIZER_NEXT;
        case 15: return MATERIALIZER_CLOSE;
        case 16: return MISC;
        case 17: return RUN_MAINTENANCE_TASKS;
        case 18: return CACHE_EKHO_EVENT;
        case 19: return CACHE_CUSTOM_EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CacheOperation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CacheOperation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CacheOperation>() {
            public CacheOperation findValueByNumber(int number) {
              return CacheOperation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return speech.training_cache.LoggingEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final CacheOperation[] VALUES = values();

    public static CacheOperation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CacheOperation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:speech.training_cache.CacheOperation)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.speech/training_cache/proto/logging_en" +
      "um.proto\022\025speech.training_cache*\301\003\n\016Cach" +
      "eOperation\022\031\n\025UNSPECIFIED_OPERATION\020\000\022\023\n" +
      "\017INITIALIZE_EKHO\020\001\022\032\n\026INITIALIZE_CACHE_A" +
      "SYNC\020\002\022\021\n\rBEGIN_SESSION\020\003\022\017\n\013END_SESSION" +
      "\020\004\022\026\n\022CACHE_CLIENT_EVENT\020\005\022\024\n\020CACHE_SODA" +
      "_START\020\006\022\023\n\017CACHE_SODA_STOP\020\007\022\024\n\020CACHE_S" +
      "ODA_EVENT\020\010\022\017\n\013FLUSH_ASYNC\020\t\022\017\n\013CLEAR_AS" +
      "YNC\020\n\022\021\n\rCLEANUP_ASYNC\020\013\022\027\n\023MATERIALIZER" +
      "_CREATE\020\014\022\026\n\022MATERIALIZER_START\020\r\022\025\n\021MAT" +
      "ERIALIZER_NEXT\020\016\022\026\n\022MATERIALIZER_CLOSE\020\017" +
      "\022\010\n\004MISC\020\020\022\031\n\025RUN_MAINTENANCE_TASKS\020\021\022\024\n" +
      "\020CACHE_EKHO_EVENT\020\022\022\026\n\022CACHE_CUSTOM_EVEN" +
      "T\020\023B\002H\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
