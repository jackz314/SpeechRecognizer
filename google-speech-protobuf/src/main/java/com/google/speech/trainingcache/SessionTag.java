// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech/training_cache/proto/session_tag.proto

package com.google.speech.trainingcache;

/**
 * Protobuf enum {@code speech.training_cache.SessionTag}
 */
public enum SessionTag
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>DEFAULT = 0;</code>
   */
  DEFAULT(0),
  /**
   * <code>EXAMPLE_TAG = 1;</code>
   */
  EXAMPLE_TAG(1),
  /**
   * <code>SECOND_EXAMPLE_TAG = 2;</code>
   */
  SECOND_EXAMPLE_TAG(2),
  /**
   * <code>HOME_ALARM_SNOOZING = 100;</code>
   */
  HOME_ALARM_SNOOZING(100),
  /**
   * <code>HOME_ADAPTIVE_VOLUME = 101;</code>
   */
  HOME_ADAPTIVE_VOLUME(101),
  /**
   * <code>HOME_ACTIVE_SPEAKER_DECTECTION = 102;</code>
   */
  HOME_ACTIVE_SPEAKER_DECTECTION(102),
  /**
   * <code>HOME_HOTWORD = 103;</code>
   */
  HOME_HOTWORD(103),
  /**
   * <code>HOME_ADAPTIVE_VOLUME_V2 = 104;</code>
   */
  HOME_ADAPTIVE_VOLUME_V2(104),
  /**
   * <code>GBOARD = 200;</code>
   */
  GBOARD(200),
  ;

  /**
   * <code>DEFAULT = 0;</code>
   */
  public static final int DEFAULT_VALUE = 0;
  /**
   * <code>EXAMPLE_TAG = 1;</code>
   */
  public static final int EXAMPLE_TAG_VALUE = 1;
  /**
   * <code>SECOND_EXAMPLE_TAG = 2;</code>
   */
  public static final int SECOND_EXAMPLE_TAG_VALUE = 2;
  /**
   * <code>HOME_ALARM_SNOOZING = 100;</code>
   */
  public static final int HOME_ALARM_SNOOZING_VALUE = 100;
  /**
   * <code>HOME_ADAPTIVE_VOLUME = 101;</code>
   */
  public static final int HOME_ADAPTIVE_VOLUME_VALUE = 101;
  /**
   * <code>HOME_ACTIVE_SPEAKER_DECTECTION = 102;</code>
   */
  public static final int HOME_ACTIVE_SPEAKER_DECTECTION_VALUE = 102;
  /**
   * <code>HOME_HOTWORD = 103;</code>
   */
  public static final int HOME_HOTWORD_VALUE = 103;
  /**
   * <code>HOME_ADAPTIVE_VOLUME_V2 = 104;</code>
   */
  public static final int HOME_ADAPTIVE_VOLUME_V2_VALUE = 104;
  /**
   * <code>GBOARD = 200;</code>
   */
  public static final int GBOARD_VALUE = 200;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SessionTag valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SessionTag forNumber(int value) {
    switch (value) {
      case 0: return DEFAULT;
      case 1: return EXAMPLE_TAG;
      case 2: return SECOND_EXAMPLE_TAG;
      case 100: return HOME_ALARM_SNOOZING;
      case 101: return HOME_ADAPTIVE_VOLUME;
      case 102: return HOME_ACTIVE_SPEAKER_DECTECTION;
      case 103: return HOME_HOTWORD;
      case 104: return HOME_ADAPTIVE_VOLUME_V2;
      case 200: return GBOARD;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SessionTag>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SessionTag> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SessionTag>() {
          public SessionTag findValueByNumber(int number) {
            return SessionTag.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.speech.trainingcache.SessionTagOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final SessionTag[] VALUES = values();

  public static SessionTag valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SessionTag(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:speech.training_cache.SessionTag)
}

